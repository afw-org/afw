{
    "$defs": {
        "_AdaptiveFunctionErrorThrown_": {
            "anyOf": [
                {
                    "$ref": "#/$defs/_AdaptiveFunctionErrorThrown_.propertyTypes"
                }
            ],
            "description": "An object entry of _AdaptiveFunction_ errorsThrown list.",
            "type": "object",
            "unevaluatedProperties": false
        },
        "_AdaptiveFunctionErrorThrown_.propertyTypes": {
            "properties": {
                "error": {
                    "description": "This is the error id of the error that can be thrown.",
                    "title": "Error",
                    "type": "string"
                },
                "reason": {
                    "description": "This is the reason the error can be thrown.",
                    "title": "Reason",
                    "type": "string"
                }
            },
            "required": [
                "error",
                "reason"
            ],
            "type": "object"
        },
        "_AdaptiveFunctionParameter_": {
            "anyOf": [
                {
                    "$ref": "#/$defs/_AdaptiveFunctionParameter_.propertyTypes"
                }
            ],
            "description": "Adaptive function parameter meta.",
            "type": "object",
            "unevaluatedProperties": false
        },
        "_AdaptiveFunctionParameter_.propertyTypes": {
            "properties": {
                "brief": {
                    "description": "This is a predicate for the parameter with the first letter capitalized and without a trailing period.",
                    "title": "Brief",
                    "type": "string"
                },
                "canBeUndefined": {
                    "description": "Indicates that parameter can be undefined (NULL) even if not optional.",
                    "title": "Optional",
                    "type": "boolean"
                },
                "dataType": {
                    "description": "This is the data type id for this parameter's value.",
                    "title": "Data Type",
                    "type": "string"
                },
                "dataTypeParameter": {
                    "description": "See the data type's dataTypeParameterType property to determine how to interpret this.",
                    "title": "Data Type Parameter",
                    "type": "string"
                },
                "description": {
                    "contentMediaType": "text/plain",
                    "description": "This is the description of this parameter.",
                    "title": "Description",
                    "type": "string"
                },
                "minArgs": {
                    "description": "This is the minimum number of values that can be specified for this parameter. If -1, the parameter can be specified exactly once. This can only have a value other than -1 on last parameter where it can have a value of -1 to 127.",
                    "title": "Min Args",
                    "type": "integer"
                },
                "name": {
                    "description": "This is the name of this parameter.",
                    "title": "Name",
                    "type": "string"
                },
                "optional": {
                    "description": "This indicates that parameter is optional and can be undefined (NULL).",
                    "title": "Optional",
                    "type": "boolean"
                },
                "polymorphicDataType": {
                    "description": "The dataType for this parameter is <Type>.",
                    "title": "Polymorphic Data Type",
                    "type": "boolean"
                },
                "polymorphicDataTypeParameter": {
                    "description": "The dataTypeParameter for this parameter is <Type>.",
                    "title": "Polymorphic Data Type Parameter",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "_AdaptiveFunction_.propertyTypes": {
            "properties": {
                "afwCamelCaseFunctionLabel": {
                    "description": "This is the functionLabel prefixed with 'afw' and converted to camel case.",
                    "title": "Prefixed Camel Case",
                    "type": "string"
                },
                "brief": {
                    "description": "This is a predicate for the function with the first letter capitalized and without a trailing period.",
                    "title": "Brief",
                    "type": "string"
                },
                "camelCaseFunctionLabel": {
                    "description": "This is the functionLabel converted to camel case.",
                    "title": "Camel Case",
                    "type": "string"
                },
                "category": {
                    "description": "Function category.",
                    "title": "Category",
                    "type": "string"
                },
                "dataType": {
                    "description": "If present, this is a method for this data type.",
                    "title": "Data Type",
                    "type": "string"
                },
                "dataTypeMethodNumber": {
                    "description": "This is an internal number that is unique to the method name (the part after :: in functionId) of a dataTypeMethod function.",
                    "title": "Method Number",
                    "type": "integer"
                },
                "deprecated": {
                    "description": "This indicates that the function is deprecated and may go away at some point.",
                    "title": "Deprecated",
                    "type": "boolean"
                },
                "description": {
                    "contentMediaType": "text/plain",
                    "description": "This is the function's description, used for documentation purposes.",
                    "title": "Description",
                    "type": "string"
                },
                "errorsThrown": {
                    "description": "These are errors that can possibly be thrown by this function.",
                    "items": {
                        "$ref": "#/$defs/_AdaptiveFunctionErrorThrown_",
                        "description": "These are errors that can possibly be thrown by this function.",
                        "title": "Errors thrown",
                        "type": "object"
                    },
                    "title": "Errors Thrown",
                    "type": "array"
                },
                "functionDeclaration": {
                    "contentMediaType": "text/plain",
                    "description": "This is the function's declaration with whitespace and brief comments.",
                    "title": "Function Declaration",
                    "type": "string"
                },
                "functionId": {
                    "description": "This is the function's id.",
                    "title": "Function",
                    "type": "string"
                },
                "functionLabel": {
                    "description": "This is the function's label.",
                    "title": "Function Label",
                    "type": "string"
                },
                "functionSignature": {
                    "description": "This is the function's signature.",
                    "title": "Signature",
                    "type": "string"
                },
                "maximumNumberOfParameters": {
                    "description": "This is the maximum number of parameters or -1 if there is no maximum.",
                    "title": "Maximum Parameters",
                    "type": "integer"
                },
                "numberOfRequiredParameters": {
                    "description": "This is the number of required parameters.",
                    "title": "Required Parameters",
                    "type": "integer"
                },
                "op": {
                    "description": "This is the function's operator. This is not used at the moment, but may be used in a future expression syntax.",
                    "title": "Op",
                    "type": "string"
                },
                "parameters": {
                    "description": "These are the function's parameters.",
                    "items": {
                        "$ref": "#/$defs/_AdaptiveFunctionParameter_",
                        "description": "These are the function's parameters.",
                        "title": "The function's parameters",
                        "type": "object"
                    },
                    "title": "Parameters",
                    "type": "array"
                },
                "polymorphic": {
                    "description": "This indicates that this function can be called polymorphically without specifying the <Type>:: qualifier. The appropriate implementation of the function will be called based on the dataType and/or dataTypeParameter of the first function parameter value.",
                    "title": "Polymorphic",
                    "type": "boolean"
                },
                "polymorphicDataTypes": {
                    "description": "This function will call the appropriate function when the first parameter is one of these data types.",
                    "items": {
                        "description": "This function will call the appropriate function when the first parameter is one of these data types.",
                        "title": "This function will call the appropriate function when the first parameter is one of these data types",
                        "type": "string"
                    },
                    "title": "Polymorphic Data Types",
                    "type": "array"
                },
                "pure": {
                    "description": "This indicates that, given exactly the same parameter values, this function will always return the same result and will not cause any side effects.",
                    "title": "Pure",
                    "type": "boolean"
                },
                "returns": {
                    "$ref": "#/$defs/_AdaptiveFunctionParameter_",
                    "description": "The return parameter.",
                    "title": "Returns",
                    "type": "object"
                },
                "scriptSupportNumber": {
                    "description": "If non-zero, this is an script support function and this is its internal special handling number. See #define AFW_VALUE_SCRIPT_SUPPORT_NUMBER_* in afw_value.h for more information.",
                    "title": "Script Support Number",
                    "type": "integer"
                },
                "sideEffects": {
                    "description": "Any side effects that this function may produce as a result of execution.",
                    "items": {
                        "description": "Any side effects that this function may produce as a result of execution.",
                        "title": "Side effects for this function.",
                        "type": "string"
                    },
                    "title": "Side Effects",
                    "type": "array"
                },
                "signatureOnly": {
                    "description": "This is a signature with an unimplemented execute function.",
                    "title": "Signature Only",
                    "type": "boolean"
                },
                "untypedFunctionId": {
                    "description": "This is the function's id without <dataType>. If this function is not polymorphic, this is the same as functionId.",
                    "title": "Function",
                    "type": "string"
                }
            },
            "required": [
                "category",
                "functionId",
                "functionLabel",
                "returns"
            ],
            "type": "object"
        },
        "_AdaptivePolymorphicFunction_": {
            "anyOf": [
                {
                    "$ref": "#/$defs/_AdaptivePolymorphicFunction_.propertyTypes"
                },
                {
                    "$ref": "#/$defs/_AdaptiveFunction_.propertyTypes"
                }
            ],
            "description": "This is a development time only object type. Objects of this type in generate/objects are processed to produce one polymorphic _AdaptiveFunction_ plus one for each dataType in polymorphicDataTypes.",
            "type": "object",
            "unevaluatedProperties": false
        },
        "_AdaptivePolymorphicFunction_.propertyTypes": {
            "properties": {
                "_meta_": {
                    "title": " Meta "
                },
                "dataTypeMethod": {
                    "description": "If true, this is a data type method that can be called polymorphically or by prefixing the function with the data type followed by double colons ('::').",
                    "title": "Data Type Method",
                    "type": "boolean"
                },
                "errorsThrown": {
                    "description": "Errors that can be thrown by this function.",
                    "items": {
                        "$ref": "#/$defs/_AdaptiveFunctionErrorThrown_",
                        "description": "Errors that can be thrown by this function.",
                        "title": "Errors thrown by this function",
                        "type": "object"
                    },
                    "title": "Errors Thrown",
                    "type": "array"
                },
                "polymorphicExecuteFunction": {
                    "description": "Polymorphic Function.",
                    "title": "Adaptor",
                    "type": "string"
                },
                "polymorphicExecuteFunctionEvaluatesFirstParameter": {
                    "description": "If true, the first parameter evaluate is deferred to polymorphicExecuteFunction function. If false or not specified, standard polymorphic function processing evaluates the first parameter to determine the appropriate evaluate to call.",
                    "title": "Defer Evaluate",
                    "type": "boolean"
                },
                "polymorphicOverrides": {
                    "title": "Polymorphic Overrides",
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "anyOf": [
        {
            "$ref": "#/$defs/_AdaptivePolymorphicFunction_"
        }
    ]
}