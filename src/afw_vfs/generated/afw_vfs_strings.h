// See the 'COPYING' file in the project root for licensing information.
/*
 * Adaptive Framework (afw_vfs_) Strings Header
 *
 * Copyright (c) 2010-2023 Clemson University
 *
 */

/*  ----------------------------- N O T E -------------------------------------
 *
 * This file is generated by "afwdev generate afw_vfs".
 *
 * Do not change this file directly or the changes will be lost the next time
 * this file is regenerated.
 *
 * -------------------------------------------------------------------------*/


#ifndef __AFW_VFS_STRINGS_H__
#define __AFW_VFS_STRINGS_H__


/**
 * @file afw_vfs_strings.h
 * @brief Adaptive Framework (afw_vfs_) strings header.
 */

#include "afw_interface.h"
#include "afw_vfs_declare_helpers.h"


/** @brief define for quoted string _AdaptiveAdaptorTypeSpecific_vfs_retrieve_objects */
#define AFW_VFS_Q__AdaptiveAdaptorTypeSpecific_vfs_retrieve_objects "_AdaptiveAdaptorTypeSpecific_vfs_retrieve_objects"

/** @brief afw_utf8_t for string _AdaptiveAdaptorTypeSpecific_vfs_retrieve_objects */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptiveAdaptorTypeSpecific_vfs_retrieve_objects;

/** @brief define for quoted string _AdaptiveConf_adaptor_vfs */
#define AFW_VFS_Q__AdaptiveConf_adaptor_vfs "_AdaptiveConf_adaptor_vfs"

/** @brief afw_utf8_t for string _AdaptiveConf_adaptor_vfs */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptiveConf_adaptor_vfs;

/** @brief define for quoted string _AdaptiveFile_vfs */
#define AFW_VFS_Q__AdaptiveFile_vfs "_AdaptiveFile_vfs"

/** @brief afw_utf8_t for string _AdaptiveFile_vfs */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptiveFile_vfs;

/** @brief define for quoted string _AdaptiveFunctionGenerate_ */
#define AFW_VFS_Q__AdaptiveFunctionGenerate_ "_AdaptiveFunctionGenerate_"

/** @brief afw_utf8_t for string _AdaptiveFunctionGenerate_ */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptiveFunctionGenerate_;

/** @brief define for quoted string _AdaptiveFunctionParameter_ */
#define AFW_VFS_Q__AdaptiveFunctionParameter_ "_AdaptiveFunctionParameter_"

/** @brief afw_utf8_t for string _AdaptiveFunctionParameter_ */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptiveFunctionParameter_;

/** @brief define for quoted string _AdaptiveFunction_ */
#define AFW_VFS_Q__AdaptiveFunction_ "_AdaptiveFunction_"

/** @brief afw_utf8_t for string _AdaptiveFunction_ */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptiveFunction_;

/** @brief define for quoted string _AdaptiveObjectType_ */
#define AFW_VFS_Q__AdaptiveObjectType_ "_AdaptiveObjectType_"

/** @brief afw_utf8_t for string _AdaptiveObjectType_ */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptiveObjectType_;

/** @brief define for quoted string _AdaptivePolymorphicFunction_ */
#define AFW_VFS_Q__AdaptivePolymorphicFunction_ "_AdaptivePolymorphicFunction_"

/** @brief afw_utf8_t for string _AdaptivePolymorphicFunction_ */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__AdaptivePolymorphicFunction_;

/** @brief define for quoted string _meta_ */
#define AFW_VFS_Q__meta_ "_meta_"

/** @brief afw_utf8_t for string _meta_ */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s__meta_;

/** @brief define for quoted string allowAdd */
#define AFW_VFS_Q_allowAdd "allowAdd"

/** @brief afw_utf8_t for string allowAdd */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_allowAdd;

/** @brief define for quoted string allowChange */
#define AFW_VFS_Q_allowChange "allowChange"

/** @brief afw_utf8_t for string allowChange */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_allowChange;

/** @brief define for quoted string allowDelete */
#define AFW_VFS_Q_allowDelete "allowDelete"

/** @brief afw_utf8_t for string allowDelete */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_allowDelete;

/** @brief define for quoted string allowEntity */
#define AFW_VFS_Q_allowEntity "allowEntity"

/** @brief afw_utf8_t for string allowEntity */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_allowEntity;

/** @brief define for quoted string allowWrite */
#define AFW_VFS_Q_allowWrite "allowWrite"

/** @brief afw_utf8_t for string allowWrite */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_allowWrite;

/** @brief define for quoted string anyURI */
#define AFW_VFS_Q_anyURI "anyURI"

/** @brief afw_utf8_t for string anyURI */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_anyURI;

/** @brief define for quoted string array */
#define AFW_VFS_Q_array "array"

/** @brief afw_utf8_t for string array */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_array;

/** @brief define for quoted string boolean */
#define AFW_VFS_Q_boolean "boolean"

/** @brief afw_utf8_t for string boolean */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_boolean;

/** @brief define for quoted string brief */
#define AFW_VFS_Q_brief "brief"

/** @brief afw_utf8_t for string brief */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_brief;

/** @brief define for quoted string collectionURIs */
#define AFW_VFS_Q_collectionURIs "collectionURIs"

/** @brief afw_utf8_t for string collectionURIs */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_collectionURIs;

/** @brief define for quoted string data */
#define AFW_VFS_Q_data "data"

/** @brief afw_utf8_t for string data */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_data;

/** @brief define for quoted string dataType */
#define AFW_VFS_Q_dataType "dataType"

/** @brief afw_utf8_t for string dataType */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_dataType;

/** @brief define for quoted string dataTypeParameter */
#define AFW_VFS_Q_dataTypeParameter "dataTypeParameter"

/** @brief afw_utf8_t for string dataTypeParameter */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_dataTypeParameter;

/** @brief define for quoted string dateTime */
#define AFW_VFS_Q_dateTime "dateTime"

/** @brief afw_utf8_t for string dateTime */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_dateTime;

/** @brief define for quoted string default */
#define AFW_VFS_Q_default "default"

/** @brief afw_utf8_t for string default */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_default;

/** @brief define for quoted string defaultValue */
#define AFW_VFS_Q_defaultValue "defaultValue"

/** @brief afw_utf8_t for string defaultValue */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_defaultValue;

/** @brief define for quoted string description */
#define AFW_VFS_Q_description "description"

/** @brief afw_utf8_t for string description */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_description;

/** @brief define for quoted string includeHidden */
#define AFW_VFS_Q_includeHidden "includeHidden"

/** @brief afw_utf8_t for string includeHidden */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_includeHidden;

/** @brief define for quoted string indirect */
#define AFW_VFS_Q_indirect "indirect"

/** @brief afw_utf8_t for string indirect */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_indirect;

/** @brief define for quoted string isDirectory */
#define AFW_VFS_Q_isDirectory "isDirectory"

/** @brief afw_utf8_t for string isDirectory */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_isDirectory;

/** @brief define for quoted string label */
#define AFW_VFS_Q_label "label"

/** @brief afw_utf8_t for string label */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_label;

/** @brief define for quoted string markExecutable */
#define AFW_VFS_Q_markExecutable "markExecutable"

/** @brief afw_utf8_t for string markExecutable */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_markExecutable;

/** @brief define for quoted string objectType */
#define AFW_VFS_Q_objectType "objectType"

/** @brief afw_utf8_t for string objectType */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_objectType;

/** @brief define for quoted string otherProperties */
#define AFW_VFS_Q_otherProperties "otherProperties"

/** @brief afw_utf8_t for string otherProperties */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_otherProperties;

/** @brief define for quoted string parentPaths */
#define AFW_VFS_Q_parentPaths "parentPaths"

/** @brief afw_utf8_t for string parentPaths */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_parentPaths;

/** @brief define for quoted string propertyTypes */
#define AFW_VFS_Q_propertyTypes "propertyTypes"

/** @brief afw_utf8_t for string propertyTypes */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_propertyTypes;

/** @brief define for quoted string recursive */
#define AFW_VFS_Q_recursive "recursive"

/** @brief afw_utf8_t for string recursive */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_recursive;

/** @brief define for quoted string required */
#define AFW_VFS_Q_required "required"

/** @brief afw_utf8_t for string required */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_required;

/** @brief define for quoted string string */
#define AFW_VFS_Q_string "string"

/** @brief afw_utf8_t for string string */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_string;

/** @brief define for quoted string subdirectory */
#define AFW_VFS_Q_subdirectory "subdirectory"

/** @brief afw_utf8_t for string subdirectory */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_subdirectory;

/** @brief define for quoted string suffix */
#define AFW_VFS_Q_suffix "suffix"

/** @brief afw_utf8_t for string suffix */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_suffix;

/** @brief define for quoted string timeAccessed */
#define AFW_VFS_Q_timeAccessed "timeAccessed"

/** @brief afw_utf8_t for string timeAccessed */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_timeAccessed;

/** @brief define for quoted string timeCreated */
#define AFW_VFS_Q_timeCreated "timeCreated"

/** @brief afw_utf8_t for string timeCreated */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_timeCreated;

/** @brief define for quoted string timeModified */
#define AFW_VFS_Q_timeModified "timeModified"

/** @brief afw_utf8_t for string timeModified */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_timeModified;

/** @brief define for quoted string vfsMap */
#define AFW_VFS_Q_vfsMap "vfsMap"

/** @brief afw_utf8_t for string vfsMap */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_vfsMap;

/** @brief define for quoted string vfsPath */
#define AFW_VFS_Q_vfsPath "vfsPath"

/** @brief afw_utf8_t for string vfsPath */
AFW_VFS_DECLARE_CONST_DATA(afw_utf8_t) afw_vfs_s_vfsPath;


#endif /* __AFW_VFS_STRINGS_H__ */
