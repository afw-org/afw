// See the 'COPYING' file in the project root for licensing information.
/*
 * Adaptive Framework (afw_vfs_) Strings Header
 *
 * Copyright (c) 2010-2024 Clemson University
 *
 */

/*  ----------------------------- N O T E -------------------------------------
 *
 * This file is generated by "afwdev generate afw_vfs".
 *
 * Do not change this file directly or the changes will be lost the next time
 * this file is regenerated.
 *
 * -------------------------------------------------------------------------*/


#ifndef __AFW_VFS_STRINGS_H__
#define __AFW_VFS_STRINGS_H__


/**
 * @file afw_vfs_strings.h
 * @brief Adaptive Framework (afw_vfs_) strings header.
 */

#include "afw_interface.h"
#include "afw_vfs_declare_helpers.h"


/** @brief #define for string in quotes */
#define AFW_VFS_Q_Data \
    "Data"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Data */
#define afw_vfs_s_Data \
    (&afw_vfs_self_v_Data.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Data */
#define afw_vfs_self_s_Data \
    (afw_vfs_self_v_Data.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_Data */
extern const afw_value_string_t \
    afw_vfs_self_v_Data;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_Data */
#define afw_vfs_z_Data \
    (afw_vfs_self_v_Data.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_Data */
#define afw_vfs_v_Data \
    (&afw_vfs_self_v_Data.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_Include \
    "Include"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Include */
#define afw_vfs_s_Include \
    (&afw_vfs_self_v_Include.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Include */
#define afw_vfs_self_s_Include \
    (afw_vfs_self_v_Include.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_Include */
extern const afw_value_string_t \
    afw_vfs_self_v_Include;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_Include */
#define afw_vfs_z_Include \
    (afw_vfs_self_v_Include.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_Include */
#define afw_vfs_v_Include \
    (&afw_vfs_self_v_Include.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_Recursive \
    "Recursive"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Recursive */
#define afw_vfs_s_Recursive \
    (&afw_vfs_self_v_Recursive.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Recursive */
#define afw_vfs_self_s_Recursive \
    (afw_vfs_self_v_Recursive.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_Recursive */
extern const afw_value_string_t \
    afw_vfs_self_v_Recursive;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_Recursive */
#define afw_vfs_z_Recursive \
    (afw_vfs_self_v_Recursive.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_Recursive */
#define afw_vfs_v_Recursive \
    (&afw_vfs_self_v_Recursive.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_Subdirectory \
    "Subdirectory"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Subdirectory */
#define afw_vfs_s_Subdirectory \
    (&afw_vfs_self_v_Subdirectory.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_Subdirectory */
#define afw_vfs_self_s_Subdirectory \
    (afw_vfs_self_v_Subdirectory.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_Subdirectory */
extern const afw_value_string_t \
    afw_vfs_self_v_Subdirectory;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_Subdirectory */
#define afw_vfs_z_Subdirectory \
    (afw_vfs_self_v_Subdirectory.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_Subdirectory */
#define afw_vfs_v_Subdirectory \
    (&afw_vfs_self_v_Subdirectory.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects \
    "_AdaptiveAdapterTypeSpecific_vfs_retrieve_objects"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects */
#define afw_vfs_s__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects \
    (&afw_vfs_self_v__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects */
#define afw_vfs_self_s__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects \
    (afw_vfs_self_v__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects */
#define afw_vfs_z__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects \
    (afw_vfs_self_v__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects */
#define afw_vfs_v__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects \
    (&afw_vfs_self_v__AdaptiveAdapterTypeSpecific_vfs_retrieve_objects.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveConf_adapter_vfs \
    "_AdaptiveConf_adapter_vfs"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveConf_adapter_vfs */
#define afw_vfs_s__AdaptiveConf_adapter_vfs \
    (&afw_vfs_self_v__AdaptiveConf_adapter_vfs.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveConf_adapter_vfs */
#define afw_vfs_self_s__AdaptiveConf_adapter_vfs \
    (afw_vfs_self_v__AdaptiveConf_adapter_vfs.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveConf_adapter_vfs */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveConf_adapter_vfs;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveConf_adapter_vfs */
#define afw_vfs_z__AdaptiveConf_adapter_vfs \
    (afw_vfs_self_v__AdaptiveConf_adapter_vfs.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveConf_adapter_vfs */
#define afw_vfs_v__AdaptiveConf_adapter_vfs \
    (&afw_vfs_self_v__AdaptiveConf_adapter_vfs.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveFile_vfs \
    "_AdaptiveFile_vfs"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFile_vfs */
#define afw_vfs_s__AdaptiveFile_vfs \
    (&afw_vfs_self_v__AdaptiveFile_vfs.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFile_vfs */
#define afw_vfs_self_s__AdaptiveFile_vfs \
    (afw_vfs_self_v__AdaptiveFile_vfs.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveFile_vfs */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveFile_vfs;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveFile_vfs */
#define afw_vfs_z__AdaptiveFile_vfs \
    (afw_vfs_self_v__AdaptiveFile_vfs.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveFile_vfs */
#define afw_vfs_v__AdaptiveFile_vfs \
    (&afw_vfs_self_v__AdaptiveFile_vfs.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveFunctionGenerate_ \
    "_AdaptiveFunctionGenerate_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFunctionGenerate_ */
#define afw_vfs_s__AdaptiveFunctionGenerate_ \
    (&afw_vfs_self_v__AdaptiveFunctionGenerate_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFunctionGenerate_ */
#define afw_vfs_self_s__AdaptiveFunctionGenerate_ \
    (afw_vfs_self_v__AdaptiveFunctionGenerate_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveFunctionGenerate_ */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveFunctionGenerate_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveFunctionGenerate_ */
#define afw_vfs_z__AdaptiveFunctionGenerate_ \
    (afw_vfs_self_v__AdaptiveFunctionGenerate_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveFunctionGenerate_ */
#define afw_vfs_v__AdaptiveFunctionGenerate_ \
    (&afw_vfs_self_v__AdaptiveFunctionGenerate_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveFunctionParameter_ \
    "_AdaptiveFunctionParameter_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFunctionParameter_ */
#define afw_vfs_s__AdaptiveFunctionParameter_ \
    (&afw_vfs_self_v__AdaptiveFunctionParameter_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFunctionParameter_ */
#define afw_vfs_self_s__AdaptiveFunctionParameter_ \
    (afw_vfs_self_v__AdaptiveFunctionParameter_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveFunctionParameter_ */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveFunctionParameter_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveFunctionParameter_ */
#define afw_vfs_z__AdaptiveFunctionParameter_ \
    (afw_vfs_self_v__AdaptiveFunctionParameter_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveFunctionParameter_ */
#define afw_vfs_v__AdaptiveFunctionParameter_ \
    (&afw_vfs_self_v__AdaptiveFunctionParameter_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveFunction_ \
    "_AdaptiveFunction_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFunction_ */
#define afw_vfs_s__AdaptiveFunction_ \
    (&afw_vfs_self_v__AdaptiveFunction_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveFunction_ */
#define afw_vfs_self_s__AdaptiveFunction_ \
    (afw_vfs_self_v__AdaptiveFunction_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveFunction_ */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveFunction_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveFunction_ */
#define afw_vfs_z__AdaptiveFunction_ \
    (afw_vfs_self_v__AdaptiveFunction_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveFunction_ */
#define afw_vfs_v__AdaptiveFunction_ \
    (&afw_vfs_self_v__AdaptiveFunction_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveObjectType_ \
    "_AdaptiveObjectType_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveObjectType_ */
#define afw_vfs_s__AdaptiveObjectType_ \
    (&afw_vfs_self_v__AdaptiveObjectType_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveObjectType_ */
#define afw_vfs_self_s__AdaptiveObjectType_ \
    (afw_vfs_self_v__AdaptiveObjectType_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveObjectType_ */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveObjectType_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveObjectType_ */
#define afw_vfs_z__AdaptiveObjectType_ \
    (afw_vfs_self_v__AdaptiveObjectType_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveObjectType_ */
#define afw_vfs_v__AdaptiveObjectType_ \
    (&afw_vfs_self_v__AdaptiveObjectType_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptivePolymorphicFunction_ \
    "_AdaptivePolymorphicFunction_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptivePolymorphicFunction_ */
#define afw_vfs_s__AdaptivePolymorphicFunction_ \
    (&afw_vfs_self_v__AdaptivePolymorphicFunction_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptivePolymorphicFunction_ */
#define afw_vfs_self_s__AdaptivePolymorphicFunction_ \
    (afw_vfs_self_v__AdaptivePolymorphicFunction_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptivePolymorphicFunction_ */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptivePolymorphicFunction_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptivePolymorphicFunction_ */
#define afw_vfs_z__AdaptivePolymorphicFunction_ \
    (afw_vfs_self_v__AdaptivePolymorphicFunction_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptivePolymorphicFunction_ */
#define afw_vfs_v__AdaptivePolymorphicFunction_ \
    (&afw_vfs_self_v__AdaptivePolymorphicFunction_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptivePropertyTypes_ \
    "_AdaptivePropertyTypes_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptivePropertyTypes_ */
#define afw_vfs_s__AdaptivePropertyTypes_ \
    (&afw_vfs_self_v__AdaptivePropertyTypes_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptivePropertyTypes_ */
#define afw_vfs_self_s__AdaptivePropertyTypes_ \
    (afw_vfs_self_v__AdaptivePropertyTypes_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptivePropertyTypes_ */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptivePropertyTypes_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptivePropertyTypes_ */
#define afw_vfs_z__AdaptivePropertyTypes_ \
    (afw_vfs_self_v__AdaptivePropertyTypes_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptivePropertyTypes_ */
#define afw_vfs_v__AdaptivePropertyTypes_ \
    (&afw_vfs_self_v__AdaptivePropertyTypes_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__AdaptiveValueMeta_ \
    "_AdaptiveValueMeta_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveValueMeta_ */
#define afw_vfs_s__AdaptiveValueMeta_ \
    (&afw_vfs_self_v__AdaptiveValueMeta_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__AdaptiveValueMeta_ */
#define afw_vfs_self_s__AdaptiveValueMeta_ \
    (afw_vfs_self_v__AdaptiveValueMeta_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__AdaptiveValueMeta_ */
extern const afw_value_string_t \
    afw_vfs_self_v__AdaptiveValueMeta_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__AdaptiveValueMeta_ */
#define afw_vfs_z__AdaptiveValueMeta_ \
    (afw_vfs_self_v__AdaptiveValueMeta_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__AdaptiveValueMeta_ */
#define afw_vfs_v__AdaptiveValueMeta_ \
    (&afw_vfs_self_v__AdaptiveValueMeta_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q__meta_ \
    "_meta_"

/** @brief 'afw_utf8_t' for AFW_VFS_Q__meta_ */
#define afw_vfs_s__meta_ \
    (&afw_vfs_self_v__meta_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q__meta_ */
#define afw_vfs_self_s__meta_ \
    (afw_vfs_self_v__meta_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q__meta_ */
extern const afw_value_string_t \
    afw_vfs_self_v__meta_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q__meta_ */
#define afw_vfs_z__meta_ \
    (afw_vfs_self_v__meta_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q__meta_ */
#define afw_vfs_v__meta_ \
    (&afw_vfs_self_v__meta_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_allowAdd \
    "allowAdd"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowAdd */
#define afw_vfs_s_allowAdd \
    (&afw_vfs_self_v_allowAdd.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowAdd */
#define afw_vfs_self_s_allowAdd \
    (afw_vfs_self_v_allowAdd.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_allowAdd */
extern const afw_value_string_t \
    afw_vfs_self_v_allowAdd;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_allowAdd */
#define afw_vfs_z_allowAdd \
    (afw_vfs_self_v_allowAdd.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_allowAdd */
#define afw_vfs_v_allowAdd \
    (&afw_vfs_self_v_allowAdd.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_allowChange \
    "allowChange"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowChange */
#define afw_vfs_s_allowChange \
    (&afw_vfs_self_v_allowChange.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowChange */
#define afw_vfs_self_s_allowChange \
    (afw_vfs_self_v_allowChange.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_allowChange */
extern const afw_value_string_t \
    afw_vfs_self_v_allowChange;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_allowChange */
#define afw_vfs_z_allowChange \
    (afw_vfs_self_v_allowChange.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_allowChange */
#define afw_vfs_v_allowChange \
    (&afw_vfs_self_v_allowChange.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_allowDelete \
    "allowDelete"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowDelete */
#define afw_vfs_s_allowDelete \
    (&afw_vfs_self_v_allowDelete.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowDelete */
#define afw_vfs_self_s_allowDelete \
    (afw_vfs_self_v_allowDelete.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_allowDelete */
extern const afw_value_string_t \
    afw_vfs_self_v_allowDelete;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_allowDelete */
#define afw_vfs_z_allowDelete \
    (afw_vfs_self_v_allowDelete.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_allowDelete */
#define afw_vfs_v_allowDelete \
    (&afw_vfs_self_v_allowDelete.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_allowEntity \
    "allowEntity"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowEntity */
#define afw_vfs_s_allowEntity \
    (&afw_vfs_self_v_allowEntity.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowEntity */
#define afw_vfs_self_s_allowEntity \
    (afw_vfs_self_v_allowEntity.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_allowEntity */
extern const afw_value_string_t \
    afw_vfs_self_v_allowEntity;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_allowEntity */
#define afw_vfs_z_allowEntity \
    (afw_vfs_self_v_allowEntity.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_allowEntity */
#define afw_vfs_v_allowEntity \
    (&afw_vfs_self_v_allowEntity.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_allowWrite \
    "allowWrite"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowWrite */
#define afw_vfs_s_allowWrite \
    (&afw_vfs_self_v_allowWrite.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_allowWrite */
#define afw_vfs_self_s_allowWrite \
    (afw_vfs_self_v_allowWrite.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_allowWrite */
extern const afw_value_string_t \
    afw_vfs_self_v_allowWrite;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_allowWrite */
#define afw_vfs_z_allowWrite \
    (afw_vfs_self_v_allowWrite.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_allowWrite */
#define afw_vfs_v_allowWrite \
    (&afw_vfs_self_v_allowWrite.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_anyURI \
    "anyURI"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_anyURI */
#define afw_vfs_s_anyURI \
    (&afw_vfs_self_v_anyURI.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_anyURI */
#define afw_vfs_self_s_anyURI \
    (afw_vfs_self_v_anyURI.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_anyURI */
extern const afw_value_string_t \
    afw_vfs_self_v_anyURI;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_anyURI */
#define afw_vfs_z_anyURI \
    (afw_vfs_self_v_anyURI.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_anyURI */
#define afw_vfs_v_anyURI \
    (&afw_vfs_self_v_anyURI.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_array \
    "array"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_array */
#define afw_vfs_s_array \
    (&afw_vfs_self_v_array.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_array */
#define afw_vfs_self_s_array \
    (afw_vfs_self_v_array.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_array */
extern const afw_value_string_t \
    afw_vfs_self_v_array;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_array */
#define afw_vfs_z_array \
    (afw_vfs_self_v_array.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_array */
#define afw_vfs_v_array \
    (&afw_vfs_self_v_array.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_boolean \
    "boolean"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_boolean */
#define afw_vfs_s_boolean \
    (&afw_vfs_self_v_boolean.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_boolean */
#define afw_vfs_self_s_boolean \
    (afw_vfs_self_v_boolean.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_boolean */
extern const afw_value_string_t \
    afw_vfs_self_v_boolean;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_boolean */
#define afw_vfs_z_boolean \
    (afw_vfs_self_v_boolean.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_boolean */
#define afw_vfs_v_boolean \
    (&afw_vfs_self_v_boolean.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_brief \
    "brief"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_brief */
#define afw_vfs_s_brief \
    (&afw_vfs_self_v_brief.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_brief */
#define afw_vfs_self_s_brief \
    (afw_vfs_self_v_brief.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_brief */
extern const afw_value_string_t \
    afw_vfs_self_v_brief;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_brief */
#define afw_vfs_z_brief \
    (afw_vfs_self_v_brief.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_brief */
#define afw_vfs_v_brief \
    (&afw_vfs_self_v_brief.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_collectionURIs \
    "collectionURIs"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_collectionURIs */
#define afw_vfs_s_collectionURIs \
    (&afw_vfs_self_v_collectionURIs.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_collectionURIs */
#define afw_vfs_self_s_collectionURIs \
    (afw_vfs_self_v_collectionURIs.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_collectionURIs */
extern const afw_value_string_t \
    afw_vfs_self_v_collectionURIs;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_collectionURIs */
#define afw_vfs_z_collectionURIs \
    (afw_vfs_self_v_collectionURIs.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_collectionURIs */
#define afw_vfs_v_collectionURIs \
    (&afw_vfs_self_v_collectionURIs.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_data \
    "data"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_data */
#define afw_vfs_s_data \
    (&afw_vfs_self_v_data.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_data */
#define afw_vfs_self_s_data \
    (afw_vfs_self_v_data.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_data */
extern const afw_value_string_t \
    afw_vfs_self_v_data;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_data */
#define afw_vfs_z_data \
    (afw_vfs_self_v_data.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_data */
#define afw_vfs_v_data \
    (&afw_vfs_self_v_data.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_dataType \
    "dataType"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_dataType */
#define afw_vfs_s_dataType \
    (&afw_vfs_self_v_dataType.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_dataType */
#define afw_vfs_self_s_dataType \
    (afw_vfs_self_v_dataType.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_dataType */
extern const afw_value_string_t \
    afw_vfs_self_v_dataType;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_dataType */
#define afw_vfs_z_dataType \
    (afw_vfs_self_v_dataType.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_dataType */
#define afw_vfs_v_dataType \
    (&afw_vfs_self_v_dataType.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_dataTypeParameter \
    "dataTypeParameter"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_dataTypeParameter */
#define afw_vfs_s_dataTypeParameter \
    (&afw_vfs_self_v_dataTypeParameter.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_dataTypeParameter */
#define afw_vfs_self_s_dataTypeParameter \
    (afw_vfs_self_v_dataTypeParameter.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_dataTypeParameter */
extern const afw_value_string_t \
    afw_vfs_self_v_dataTypeParameter;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_dataTypeParameter */
#define afw_vfs_z_dataTypeParameter \
    (afw_vfs_self_v_dataTypeParameter.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_dataTypeParameter */
#define afw_vfs_v_dataTypeParameter \
    (&afw_vfs_self_v_dataTypeParameter.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_dateTime \
    "dateTime"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_dateTime */
#define afw_vfs_s_dateTime \
    (&afw_vfs_self_v_dateTime.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_dateTime */
#define afw_vfs_self_s_dateTime \
    (afw_vfs_self_v_dateTime.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_dateTime */
extern const afw_value_string_t \
    afw_vfs_self_v_dateTime;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_dateTime */
#define afw_vfs_z_dateTime \
    (afw_vfs_self_v_dateTime.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_dateTime */
#define afw_vfs_v_dateTime \
    (&afw_vfs_self_v_dateTime.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_default \
    "default"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_default */
#define afw_vfs_s_default \
    (&afw_vfs_self_v_default.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_default */
#define afw_vfs_self_s_default \
    (afw_vfs_self_v_default.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_default */
extern const afw_value_string_t \
    afw_vfs_self_v_default;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_default */
#define afw_vfs_z_default \
    (afw_vfs_self_v_default.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_default */
#define afw_vfs_v_default \
    (&afw_vfs_self_v_default.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_defaultValue \
    "defaultValue"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_defaultValue */
#define afw_vfs_s_defaultValue \
    (&afw_vfs_self_v_defaultValue.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_defaultValue */
#define afw_vfs_self_s_defaultValue \
    (afw_vfs_self_v_defaultValue.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_defaultValue */
extern const afw_value_string_t \
    afw_vfs_self_v_defaultValue;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_defaultValue */
#define afw_vfs_z_defaultValue \
    (afw_vfs_self_v_defaultValue.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_defaultValue */
#define afw_vfs_v_defaultValue \
    (&afw_vfs_self_v_defaultValue.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_description \
    "description"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_description */
#define afw_vfs_s_description \
    (&afw_vfs_self_v_description.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_description */
#define afw_vfs_self_s_description \
    (afw_vfs_self_v_description.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_description */
extern const afw_value_string_t \
    afw_vfs_self_v_description;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_description */
#define afw_vfs_z_description \
    (afw_vfs_self_v_description.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_description */
#define afw_vfs_v_description \
    (&afw_vfs_self_v_description.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_includeHidden \
    "includeHidden"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_includeHidden */
#define afw_vfs_s_includeHidden \
    (&afw_vfs_self_v_includeHidden.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_includeHidden */
#define afw_vfs_self_s_includeHidden \
    (afw_vfs_self_v_includeHidden.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_includeHidden */
extern const afw_value_string_t \
    afw_vfs_self_v_includeHidden;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_includeHidden */
#define afw_vfs_z_includeHidden \
    (afw_vfs_self_v_includeHidden.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_includeHidden */
#define afw_vfs_v_includeHidden \
    (&afw_vfs_self_v_includeHidden.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_indirect \
    "indirect"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_indirect */
#define afw_vfs_s_indirect \
    (&afw_vfs_self_v_indirect.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_indirect */
#define afw_vfs_self_s_indirect \
    (afw_vfs_self_v_indirect.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_indirect */
extern const afw_value_string_t \
    afw_vfs_self_v_indirect;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_indirect */
#define afw_vfs_z_indirect \
    (afw_vfs_self_v_indirect.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_indirect */
#define afw_vfs_v_indirect \
    (&afw_vfs_self_v_indirect.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_isDirectory \
    "isDirectory"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_isDirectory */
#define afw_vfs_s_isDirectory \
    (&afw_vfs_self_v_isDirectory.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_isDirectory */
#define afw_vfs_self_s_isDirectory \
    (afw_vfs_self_v_isDirectory.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_isDirectory */
extern const afw_value_string_t \
    afw_vfs_self_v_isDirectory;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_isDirectory */
#define afw_vfs_z_isDirectory \
    (afw_vfs_self_v_isDirectory.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_isDirectory */
#define afw_vfs_v_isDirectory \
    (&afw_vfs_self_v_isDirectory.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_label \
    "label"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_label */
#define afw_vfs_s_label \
    (&afw_vfs_self_v_label.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_label */
#define afw_vfs_self_s_label \
    (afw_vfs_self_v_label.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_label */
extern const afw_value_string_t \
    afw_vfs_self_v_label;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_label */
#define afw_vfs_z_label \
    (afw_vfs_self_v_label.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_label */
#define afw_vfs_v_label \
    (&afw_vfs_self_v_label.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_markExecutable \
    "markExecutable"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_markExecutable */
#define afw_vfs_s_markExecutable \
    (&afw_vfs_self_v_markExecutable.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_markExecutable */
#define afw_vfs_self_s_markExecutable \
    (afw_vfs_self_v_markExecutable.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_markExecutable */
extern const afw_value_string_t \
    afw_vfs_self_v_markExecutable;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_markExecutable */
#define afw_vfs_z_markExecutable \
    (afw_vfs_self_v_markExecutable.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_markExecutable */
#define afw_vfs_v_markExecutable \
    (&afw_vfs_self_v_markExecutable.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_objectType \
    "objectType"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_objectType */
#define afw_vfs_s_objectType \
    (&afw_vfs_self_v_objectType.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_objectType */
#define afw_vfs_self_s_objectType \
    (afw_vfs_self_v_objectType.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_objectType */
extern const afw_value_string_t \
    afw_vfs_self_v_objectType;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_objectType */
#define afw_vfs_z_objectType \
    (afw_vfs_self_v_objectType.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_objectType */
#define afw_vfs_v_objectType \
    (&afw_vfs_self_v_objectType.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_otherProperties \
    "otherProperties"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_otherProperties */
#define afw_vfs_s_otherProperties \
    (&afw_vfs_self_v_otherProperties.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_otherProperties */
#define afw_vfs_self_s_otherProperties \
    (afw_vfs_self_v_otherProperties.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_otherProperties */
extern const afw_value_string_t \
    afw_vfs_self_v_otherProperties;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_otherProperties */
#define afw_vfs_z_otherProperties \
    (afw_vfs_self_v_otherProperties.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_otherProperties */
#define afw_vfs_v_otherProperties \
    (&afw_vfs_self_v_otherProperties.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_parentPaths \
    "parentPaths"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_parentPaths */
#define afw_vfs_s_parentPaths \
    (&afw_vfs_self_v_parentPaths.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_parentPaths */
#define afw_vfs_self_s_parentPaths \
    (afw_vfs_self_v_parentPaths.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_parentPaths */
extern const afw_value_string_t \
    afw_vfs_self_v_parentPaths;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_parentPaths */
#define afw_vfs_z_parentPaths \
    (afw_vfs_self_v_parentPaths.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_parentPaths */
#define afw_vfs_v_parentPaths \
    (&afw_vfs_self_v_parentPaths.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_propertyTypes \
    "propertyTypes"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_propertyTypes */
#define afw_vfs_s_propertyTypes \
    (&afw_vfs_self_v_propertyTypes.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_propertyTypes */
#define afw_vfs_self_s_propertyTypes \
    (afw_vfs_self_v_propertyTypes.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_propertyTypes */
extern const afw_value_string_t \
    afw_vfs_self_v_propertyTypes;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_propertyTypes */
#define afw_vfs_z_propertyTypes \
    (afw_vfs_self_v_propertyTypes.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_propertyTypes */
#define afw_vfs_v_propertyTypes \
    (&afw_vfs_self_v_propertyTypes.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_recursive \
    "recursive"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_recursive */
#define afw_vfs_s_recursive \
    (&afw_vfs_self_v_recursive.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_recursive */
#define afw_vfs_self_s_recursive \
    (afw_vfs_self_v_recursive.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_recursive */
extern const afw_value_string_t \
    afw_vfs_self_v_recursive;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_recursive */
#define afw_vfs_z_recursive \
    (afw_vfs_self_v_recursive.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_recursive */
#define afw_vfs_v_recursive \
    (&afw_vfs_self_v_recursive.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_required \
    "required"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_required */
#define afw_vfs_s_required \
    (&afw_vfs_self_v_required.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_required */
#define afw_vfs_self_s_required \
    (afw_vfs_self_v_required.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_required */
extern const afw_value_string_t \
    afw_vfs_self_v_required;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_required */
#define afw_vfs_z_required \
    (afw_vfs_self_v_required.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_required */
#define afw_vfs_v_required \
    (&afw_vfs_self_v_required.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_string \
    "string"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_string */
#define afw_vfs_s_string \
    (&afw_vfs_self_v_string.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_string */
#define afw_vfs_self_s_string \
    (afw_vfs_self_v_string.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_string */
extern const afw_value_string_t \
    afw_vfs_self_v_string;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_string */
#define afw_vfs_z_string \
    (afw_vfs_self_v_string.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_string */
#define afw_vfs_v_string \
    (&afw_vfs_self_v_string.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_subdirectory \
    "subdirectory"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_subdirectory */
#define afw_vfs_s_subdirectory \
    (&afw_vfs_self_v_subdirectory.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_subdirectory */
#define afw_vfs_self_s_subdirectory \
    (afw_vfs_self_v_subdirectory.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_subdirectory */
extern const afw_value_string_t \
    afw_vfs_self_v_subdirectory;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_subdirectory */
#define afw_vfs_z_subdirectory \
    (afw_vfs_self_v_subdirectory.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_subdirectory */
#define afw_vfs_v_subdirectory \
    (&afw_vfs_self_v_subdirectory.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_suffix \
    "suffix"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_suffix */
#define afw_vfs_s_suffix \
    (&afw_vfs_self_v_suffix.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_suffix */
#define afw_vfs_self_s_suffix \
    (afw_vfs_self_v_suffix.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_suffix */
extern const afw_value_string_t \
    afw_vfs_self_v_suffix;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_suffix */
#define afw_vfs_z_suffix \
    (afw_vfs_self_v_suffix.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_suffix */
#define afw_vfs_v_suffix \
    (&afw_vfs_self_v_suffix.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_timeAccessed \
    "timeAccessed"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_timeAccessed */
#define afw_vfs_s_timeAccessed \
    (&afw_vfs_self_v_timeAccessed.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_timeAccessed */
#define afw_vfs_self_s_timeAccessed \
    (afw_vfs_self_v_timeAccessed.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_timeAccessed */
extern const afw_value_string_t \
    afw_vfs_self_v_timeAccessed;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_timeAccessed */
#define afw_vfs_z_timeAccessed \
    (afw_vfs_self_v_timeAccessed.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_timeAccessed */
#define afw_vfs_v_timeAccessed \
    (&afw_vfs_self_v_timeAccessed.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_timeCreated \
    "timeCreated"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_timeCreated */
#define afw_vfs_s_timeCreated \
    (&afw_vfs_self_v_timeCreated.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_timeCreated */
#define afw_vfs_self_s_timeCreated \
    (afw_vfs_self_v_timeCreated.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_timeCreated */
extern const afw_value_string_t \
    afw_vfs_self_v_timeCreated;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_timeCreated */
#define afw_vfs_z_timeCreated \
    (afw_vfs_self_v_timeCreated.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_timeCreated */
#define afw_vfs_v_timeCreated \
    (&afw_vfs_self_v_timeCreated.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_timeModified \
    "timeModified"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_timeModified */
#define afw_vfs_s_timeModified \
    (&afw_vfs_self_v_timeModified.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_timeModified */
#define afw_vfs_self_s_timeModified \
    (afw_vfs_self_v_timeModified.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_timeModified */
extern const afw_value_string_t \
    afw_vfs_self_v_timeModified;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_timeModified */
#define afw_vfs_z_timeModified \
    (afw_vfs_self_v_timeModified.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_timeModified */
#define afw_vfs_v_timeModified \
    (&afw_vfs_self_v_timeModified.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_vfsMap \
    "vfsMap"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_vfsMap */
#define afw_vfs_s_vfsMap \
    (&afw_vfs_self_v_vfsMap.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_vfsMap */
#define afw_vfs_self_s_vfsMap \
    (afw_vfs_self_v_vfsMap.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_vfsMap */
extern const afw_value_string_t \
    afw_vfs_self_v_vfsMap;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_vfsMap */
#define afw_vfs_z_vfsMap \
    (afw_vfs_self_v_vfsMap.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_vfsMap */
#define afw_vfs_v_vfsMap \
    (&afw_vfs_self_v_vfsMap.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_vfsPath \
    "vfsPath"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_vfsPath */
#define afw_vfs_s_vfsPath \
    (&afw_vfs_self_v_vfsPath.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_vfsPath */
#define afw_vfs_self_s_vfsPath \
    (afw_vfs_self_v_vfsPath.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_vfsPath */
extern const afw_value_string_t \
    afw_vfs_self_v_vfsPath;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_vfsPath */
#define afw_vfs_z_vfsPath \
    (afw_vfs_self_v_vfsPath.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_vfsPath */
#define afw_vfs_v_vfsPath \
    (&afw_vfs_self_v_vfsPath.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__ \
    ""

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__ */
#define afw_vfs_s_zz__ \
    (&afw_vfs_self_v_zz__.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__ */
#define afw_vfs_self_s_zz__ \
    (afw_vfs_self_v_zz__.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__ */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__ */
#define afw_vfs_z_zz__ \
    (afw_vfs_self_v_zz__.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__ */
#define afw_vfs_v_zz__ \
    (&afw_vfs_self_v_zz__.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2557 \
    "If true, filenames that begin with dot ('.') will be included."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2557 */
#define afw_vfs_s_zz__2557 \
    (&afw_vfs_self_v_zz__2557.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2557 */
#define afw_vfs_self_s_zz__2557 \
    (afw_vfs_self_v_zz__2557.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2557 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2557;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2557 */
#define afw_vfs_z_zz__2557 \
    (afw_vfs_self_v_zz__2557.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2557 */
#define afw_vfs_v_zz__2557 \
    (&afw_vfs_self_v_zz__2557.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2558 \
    "If specified, the retrieve will start in the specified vfs subdirectory instead of the vfs root. The value can not start with '/', must end with '/', and can not contain '\\', './' or '../'."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2558 */
#define afw_vfs_s_zz__2558 \
    (&afw_vfs_self_v_zz__2558.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2558 */
#define afw_vfs_self_s_zz__2558 \
    (afw_vfs_self_v_zz__2558.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2558 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2558;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2558 */
#define afw_vfs_z_zz__2558 \
    (afw_vfs_self_v_zz__2558.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2558 */
#define afw_vfs_v_zz__2558 \
    (&afw_vfs_self_v_zz__2558.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2559 \
    "If specified, only files with filenames that end with the specified suffix are included."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2559 */
#define afw_vfs_s_zz__2559 \
    (&afw_vfs_self_v_zz__2559.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2559 */
#define afw_vfs_self_s_zz__2559 \
    (afw_vfs_self_v_zz__2559.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2559 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2559;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2559 */
#define afw_vfs_z_zz__2559 \
    (afw_vfs_self_v_zz__2559.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2559 */
#define afw_vfs_v_zz__2559 \
    (&afw_vfs_self_v_zz__2559.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2560 \
    "This is the object type for the optional adapterTypeSpecific parameter of the retrieve_objects() adaptive function when the adapterType of the adapterId is vfs."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2560 */
#define afw_vfs_s_zz__2560 \
    (&afw_vfs_self_v_zz__2560.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2560 */
#define afw_vfs_self_s_zz__2560 \
    (afw_vfs_self_v_zz__2560.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2560 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2560;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2560 */
#define afw_vfs_z_zz__2560 \
    (afw_vfs_self_v_zz__2560.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2560 */
#define afw_vfs_v_zz__2560 \
    (&afw_vfs_self_v_zz__2560.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2561 \
    "This is a list of vfsPath filename patterns whose host files should be marked as executable when written. For instance, ['*.as'] will mark Adaptive Scripts whose vfsPath ends with '.as' as executable.\n\nA PATTERN match uses Apache apr function apr_fnmatch() which interprets a pattern as follows:\n\nThere are no illegal patterns.\n\nPATTERN: Backslash followed by any character, including another backslash.\nMATCHES: That character exactly.\n\nPATTERN: ?\nMATCHES: Any single character.\n\nPATTERN: *\nMATCHES: Any sequence of zero or more characters. (Note that multiple *s in a row are equivalent to one.)\n\nPATTERN: Any character other than \\?*[ or a \\ at the end of the pattern\nMATCHES: That character exactly. (Case sensitive.)\n\nPATTERN: [ followed by a class description followed by ]\nMATCHES: A single character described by the class description. (Never matches, if the class description reaches until the end of the string without a ].) If the first character of the class description is ^ or !, the sense of the description is reversed. The rest of the class description is a list of single characters or pairs of characters separated by -. Any of those characters can have a backslash in front of them, which is ignored; this lets you use the characters ] and - in the character class, as well as ^ and ! at the beginning. The pattern matches a single character if it is one of the listed characters or falls into one of the listed ranges (inclusive, case sensitive). Ranges with the first character larger than the second are legal but never match. Edge cases: [] never matches, and [^] and [!] always match without consuming a character.\n\nNote that these patterns attempt to match the entire vfsPath, not just find a substring matching the pattern."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2561 */
#define afw_vfs_s_zz__2561 \
    (&afw_vfs_self_v_zz__2561.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2561 */
#define afw_vfs_self_s_zz__2561 \
    (afw_vfs_self_v_zz__2561.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2561 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2561;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2561 */
#define afw_vfs_z_zz__2561 \
    (afw_vfs_self_v_zz__2561.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2561 */
#define afw_vfs_v_zz__2561 \
    (&afw_vfs_self_v_zz__2561.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2562 \
    "This property is a list of vfs map entries.\n\nThe vfsPath of objects in this vfs adapter is of the form:\n\n/<adapterId>/<objectId>\n\nWhere <adapterId> is the id of this adapter and where <objectId> is the relative path from the vfs root directory ('<adapterId>/') to the associated file or directory. An <objectId> of a directory ends with a slash ('/').\n\nEach vfsMap entry is a string of the form:\n\n<objectId_prefix>=<host file system directory path>\n\n<objectId_prefix> can be empty if the entry applies to files and directories in the vfs root directory or the objectId of a directory within the vfs.\n\nThe <host file system directory path> must end in a slash ('/'). A backslash is tolerated on a Windows host. The host system file path is the <objectId> with <objectId_prefix> removed appended to the associated <host file system directory path>.\n\nThe map entry with the longest matching <objectId_prefix> is the one used for any adapter functions objectId parameter.\n\nFor retrieve_objects*() the entries are processed in longest to shortest <objectId_prefix> order. If 'subdirectory' is supplied in the retrieve_objects*() adapterSpecific parameter, only matching entries are used. Note, that depending on the vfsMap, a single physical file or directory can appear multiple times with different vfsPaths."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2562 */
#define afw_vfs_s_zz__2562 \
    (&afw_vfs_self_v_zz__2562.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2562 */
#define afw_vfs_self_s_zz__2562 \
    (afw_vfs_self_v_zz__2562.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2562 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2562;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2562 */
#define afw_vfs_z_zz__2562 \
    (afw_vfs_self_v_zz__2562.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2562 */
#define afw_vfs_v_zz__2562 \
    (&afw_vfs_self_v_zz__2562.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2563 \
    "Adaptive Framework configuration component for type=adapter adapterType=vfs. This is a virtual file system adapter that allows files to be accessed as objects that have a 'data' property and additional file stats properties. The vfs path to files begins with '/', the adapter name, '/_AdaptiveFile_vfs'. The path of the operating system directory as well as the paths to subdirectories are defined in the 'vfsMap' property."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2563 */
#define afw_vfs_s_zz__2563 \
    (&afw_vfs_self_v_zz__2563.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2563 */
#define afw_vfs_self_s_zz__2563 \
    (afw_vfs_self_v_zz__2563.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2563 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2563;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2563 */
#define afw_vfs_z_zz__2563 \
    (afw_vfs_self_v_zz__2563.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2563 */
#define afw_vfs_v_zz__2563 \
    (&afw_vfs_self_v_zz__2563.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2564 \
    "This is the contents of the file. If this is a directory, data is a list of strings containing the name from its entries. If this is not a directory and the data is valid utf-8, data is a string otherwise, it is hexBinary. This property is ignored when adding a directory."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2564 */
#define afw_vfs_s_zz__2564 \
    (&afw_vfs_self_v_zz__2564.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2564 */
#define afw_vfs_self_s_zz__2564 \
    (afw_vfs_self_v_zz__2564.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2564 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2564;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2564 */
#define afw_vfs_z_zz__2564 \
    (afw_vfs_self_v_zz__2564.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2564 */
#define afw_vfs_v_zz__2564 \
    (&afw_vfs_self_v_zz__2564.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2565 \
    "This is true if this is a directory. This property is read-only. A slash ('/') at the end of an objectId is used to indicate this in requests."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2565 */
#define afw_vfs_s_zz__2565 \
    (&afw_vfs_self_v_zz__2565.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2565 */
#define afw_vfs_self_s_zz__2565 \
    (afw_vfs_self_v_zz__2565.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2565 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2565;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2565 */
#define afw_vfs_z_zz__2565 \
    (afw_vfs_self_v_zz__2565.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2565 */
#define afw_vfs_v_zz__2565 \
    (&afw_vfs_self_v_zz__2565.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__2566 \
    "This is the vfs path within this instance of Adaptive Framework. This property is read-only."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2566 */
#define afw_vfs_s_zz__2566 \
    (&afw_vfs_self_v_zz__2566.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__2566 */
#define afw_vfs_self_s_zz__2566 \
    (afw_vfs_self_v_zz__2566.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__2566 */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__2566;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__2566 */
#define afw_vfs_z_zz__2566 \
    (afw_vfs_self_v_zz__2566.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__2566 */
#define afw_vfs_v_zz__2566 \
    (&afw_vfs_self_v_zz__2566.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Contents_of_file \
    "Contents of file"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Contents_of_file */
#define afw_vfs_s_zz__Contents_of_file \
    (&afw_vfs_self_v_zz__Contents_of_file.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Contents_of_file */
#define afw_vfs_self_s_zz__Contents_of_file \
    (afw_vfs_self_v_zz__Contents_of_file.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Contents_of_file */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Contents_of_file;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Contents_of_file */
#define afw_vfs_z_zz__Contents_of_file \
    (afw_vfs_self_v_zz__Contents_of_file.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Contents_of_file */
#define afw_vfs_v_zz__Contents_of_file \
    (&afw_vfs_self_v_zz__Contents_of_file.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Custom_property \
    "Custom property"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Custom_property */
#define afw_vfs_s_zz__Custom_property \
    (&afw_vfs_self_v_zz__Custom_property.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Custom_property */
#define afw_vfs_self_s_zz__Custom_property \
    (afw_vfs_self_v_zz__Custom_property.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Custom_property */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Custom_property;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Custom_property */
#define afw_vfs_z_zz__Custom_property \
    (afw_vfs_self_v_zz__Custom_property.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Custom_property */
#define afw_vfs_v_zz__Custom_property \
    (&afw_vfs_self_v_zz__Custom_property.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Custom_property_ \
    "Custom property."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Custom_property_ */
#define afw_vfs_s_zz__Custom_property_ \
    (&afw_vfs_self_v_zz__Custom_property_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Custom_property_ */
#define afw_vfs_self_s_zz__Custom_property_ \
    (afw_vfs_self_v_zz__Custom_property_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Custom_property_ */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Custom_property_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Custom_property_ */
#define afw_vfs_z_zz__Custom_property_ \
    (afw_vfs_self_v_zz__Custom_property_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Custom_property_ */
#define afw_vfs_v_zz__Custom_property_ \
    (&afw_vfs_self_v_zz__Custom_property_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Filename_Suffix \
    "Filename Suffix"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Filename_Suffix */
#define afw_vfs_s_zz__Filename_Suffix \
    (&afw_vfs_self_v_zz__Filename_Suffix.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Filename_Suffix */
#define afw_vfs_self_s_zz__Filename_Suffix \
    (afw_vfs_self_v_zz__Filename_Suffix.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Filename_Suffix */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Filename_Suffix;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Filename_Suffix */
#define afw_vfs_z_zz__Filename_Suffix \
    (afw_vfs_self_v_zz__Filename_Suffix.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Filename_Suffix */
#define afw_vfs_v_zz__Filename_Suffix \
    (&afw_vfs_self_v_zz__Filename_Suffix.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Filename_suffix \
    "Filename suffix"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Filename_suffix */
#define afw_vfs_s_zz__Filename_suffix \
    (&afw_vfs_self_v_zz__Filename_suffix.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Filename_suffix */
#define afw_vfs_self_s_zz__Filename_suffix \
    (afw_vfs_self_v_zz__Filename_suffix.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Filename_suffix */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Filename_suffix;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Filename_suffix */
#define afw_vfs_z_zz__Filename_suffix \
    (afw_vfs_self_v_zz__Filename_suffix.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Filename_suffix */
#define afw_vfs_v_zz__Filename_suffix \
    (&afw_vfs_self_v_zz__Filename_suffix.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__If_true__directories_will_be_recursively_traversed_ \
    "If true, directories will be recursively traversed."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__If_true__directories_will_be_recursively_traversed_ */
#define afw_vfs_s_zz__If_true__directories_will_be_recursively_traversed_ \
    (&afw_vfs_self_v_zz__If_true__directories_will_be_recursively_traversed_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__If_true__directories_will_be_recursively_traversed_ */
#define afw_vfs_self_s_zz__If_true__directories_will_be_recursively_traversed_ \
    (afw_vfs_self_v_zz__If_true__directories_will_be_recursively_traversed_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__If_true__directories_will_be_recursively_traversed_ */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__If_true__directories_will_be_recursively_traversed_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__If_true__directories_will_be_recursively_traversed_ */
#define afw_vfs_z_zz__If_true__directories_will_be_recursively_traversed_ \
    (afw_vfs_self_v_zz__If_true__directories_will_be_recursively_traversed_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__If_true__directories_will_be_recursively_traversed_ */
#define afw_vfs_v_zz__If_true__directories_will_be_recursively_traversed_ \
    (&afw_vfs_self_v_zz__If_true__directories_will_be_recursively_traversed_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Include_Hidden \
    "Include Hidden"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Include_Hidden */
#define afw_vfs_s_zz__Include_Hidden \
    (&afw_vfs_self_v_zz__Include_Hidden.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Include_Hidden */
#define afw_vfs_self_s_zz__Include_Hidden \
    (afw_vfs_self_v_zz__Include_Hidden.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Include_Hidden */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Include_Hidden;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Include_Hidden */
#define afw_vfs_z_zz__Include_Hidden \
    (afw_vfs_self_v_zz__Include_Hidden.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Include_Hidden */
#define afw_vfs_v_zz__Include_Hidden \
    (&afw_vfs_self_v_zz__Include_Hidden.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Is_Directory \
    "Is Directory"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Is_Directory */
#define afw_vfs_s_zz__Is_Directory \
    (&afw_vfs_self_v_zz__Is_Directory.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Is_Directory */
#define afw_vfs_self_s_zz__Is_Directory \
    (afw_vfs_self_v_zz__Is_Directory.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Is_Directory */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Is_Directory;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Is_Directory */
#define afw_vfs_z_zz__Is_Directory \
    (afw_vfs_self_v_zz__Is_Directory.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Is_Directory */
#define afw_vfs_v_zz__Is_Directory \
    (&afw_vfs_self_v_zz__Is_Directory.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Is_directory \
    "Is directory"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Is_directory */
#define afw_vfs_s_zz__Is_directory \
    (&afw_vfs_self_v_zz__Is_directory.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Is_directory */
#define afw_vfs_self_s_zz__Is_directory \
    (afw_vfs_self_v_zz__Is_directory.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Is_directory */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Is_directory;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Is_directory */
#define afw_vfs_z_zz__Is_directory \
    (afw_vfs_self_v_zz__Is_directory.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Is_directory */
#define afw_vfs_v_zz__Is_directory \
    (&afw_vfs_self_v_zz__Is_directory.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Mark_Executable \
    "Mark Executable"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Mark_Executable */
#define afw_vfs_s_zz__Mark_Executable \
    (&afw_vfs_self_v_zz__Mark_Executable.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Mark_Executable */
#define afw_vfs_self_s_zz__Mark_Executable \
    (afw_vfs_self_v_zz__Mark_Executable.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Mark_Executable */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Mark_Executable;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Mark_Executable */
#define afw_vfs_z_zz__Mark_Executable \
    (afw_vfs_self_v_zz__Mark_Executable.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Mark_Executable */
#define afw_vfs_v_zz__Mark_Executable \
    (&afw_vfs_self_v_zz__Mark_Executable.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Recursively_traverse_directories \
    "Recursively traverse directories"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Recursively_traverse_directories */
#define afw_vfs_s_zz__Recursively_traverse_directories \
    (&afw_vfs_self_v_zz__Recursively_traverse_directories.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Recursively_traverse_directories */
#define afw_vfs_self_s_zz__Recursively_traverse_directories \
    (afw_vfs_self_v_zz__Recursively_traverse_directories.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Recursively_traverse_directories */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Recursively_traverse_directories;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Recursively_traverse_directories */
#define afw_vfs_z_zz__Recursively_traverse_directories \
    (afw_vfs_self_v_zz__Recursively_traverse_directories.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Recursively_traverse_directories */
#define afw_vfs_v_zz__Recursively_traverse_directories \
    (&afw_vfs_self_v_zz__Recursively_traverse_directories.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ \
    "This is the single object type of objects in a vfs adapter."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ */
#define afw_vfs_s_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ \
    (&afw_vfs_self_v_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ */
#define afw_vfs_self_s_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ \
    (afw_vfs_self_v_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ */
#define afw_vfs_z_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ \
    (afw_vfs_self_v_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ */
#define afw_vfs_v_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_ \
    (&afw_vfs_self_v_zz__This_is_the_single_object_type_of_objects_in_a_vfs_adapter_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__This_is_the_time_the_file_was_created_ \
    "This is the time the file was created."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_created_ */
#define afw_vfs_s_zz__This_is_the_time_the_file_was_created_ \
    (&afw_vfs_self_v_zz__This_is_the_time_the_file_was_created_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_created_ */
#define afw_vfs_self_s_zz__This_is_the_time_the_file_was_created_ \
    (afw_vfs_self_v_zz__This_is_the_time_the_file_was_created_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_created_ */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__This_is_the_time_the_file_was_created_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_created_ */
#define afw_vfs_z_zz__This_is_the_time_the_file_was_created_ \
    (afw_vfs_self_v_zz__This_is_the_time_the_file_was_created_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_created_ */
#define afw_vfs_v_zz__This_is_the_time_the_file_was_created_ \
    (&afw_vfs_self_v_zz__This_is_the_time_the_file_was_created_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_accessed_ \
    "This is the time the file was last accessed."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_accessed_ */
#define afw_vfs_s_zz__This_is_the_time_the_file_was_last_accessed_ \
    (&afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_accessed_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_accessed_ */
#define afw_vfs_self_s_zz__This_is_the_time_the_file_was_last_accessed_ \
    (afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_accessed_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_accessed_ */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_accessed_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_accessed_ */
#define afw_vfs_z_zz__This_is_the_time_the_file_was_last_accessed_ \
    (afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_accessed_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_accessed_ */
#define afw_vfs_v_zz__This_is_the_time_the_file_was_last_accessed_ \
    (&afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_accessed_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_modified_ \
    "This is the time the file was last modified."

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_modified_ */
#define afw_vfs_s_zz__This_is_the_time_the_file_was_last_modified_ \
    (&afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_modified_.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_modified_ */
#define afw_vfs_self_s_zz__This_is_the_time_the_file_was_last_modified_ \
    (afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_modified_.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_modified_ */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_modified_;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_modified_ */
#define afw_vfs_z_zz__This_is_the_time_the_file_was_last_modified_ \
    (afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_modified_.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__This_is_the_time_the_file_was_last_modified_ */
#define afw_vfs_v_zz__This_is_the_time_the_file_was_last_modified_ \
    (&afw_vfs_self_v_zz__This_is_the_time_the_file_was_last_modified_.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Time_Accessed \
    "Time Accessed"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_Accessed */
#define afw_vfs_s_zz__Time_Accessed \
    (&afw_vfs_self_v_zz__Time_Accessed.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_Accessed */
#define afw_vfs_self_s_zz__Time_Accessed \
    (afw_vfs_self_v_zz__Time_Accessed.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Time_Accessed */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Time_Accessed;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Time_Accessed */
#define afw_vfs_z_zz__Time_Accessed \
    (afw_vfs_self_v_zz__Time_Accessed.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Time_Accessed */
#define afw_vfs_v_zz__Time_Accessed \
    (&afw_vfs_self_v_zz__Time_Accessed.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Time_Created \
    "Time Created"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_Created */
#define afw_vfs_s_zz__Time_Created \
    (&afw_vfs_self_v_zz__Time_Created.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_Created */
#define afw_vfs_self_s_zz__Time_Created \
    (afw_vfs_self_v_zz__Time_Created.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Time_Created */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Time_Created;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Time_Created */
#define afw_vfs_z_zz__Time_Created \
    (afw_vfs_self_v_zz__Time_Created.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Time_Created */
#define afw_vfs_v_zz__Time_Created \
    (&afw_vfs_self_v_zz__Time_Created.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Time_Modified \
    "Time Modified"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_Modified */
#define afw_vfs_s_zz__Time_Modified \
    (&afw_vfs_self_v_zz__Time_Modified.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_Modified */
#define afw_vfs_self_s_zz__Time_Modified \
    (afw_vfs_self_v_zz__Time_Modified.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Time_Modified */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Time_Modified;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Time_Modified */
#define afw_vfs_z_zz__Time_Modified \
    (afw_vfs_self_v_zz__Time_Modified.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Time_Modified */
#define afw_vfs_v_zz__Time_Modified \
    (&afw_vfs_self_v_zz__Time_Modified.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Time_created \
    "Time created"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_created */
#define afw_vfs_s_zz__Time_created \
    (&afw_vfs_self_v_zz__Time_created.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_created */
#define afw_vfs_self_s_zz__Time_created \
    (afw_vfs_self_v_zz__Time_created.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Time_created */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Time_created;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Time_created */
#define afw_vfs_z_zz__Time_created \
    (afw_vfs_self_v_zz__Time_created.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Time_created */
#define afw_vfs_v_zz__Time_created \
    (&afw_vfs_self_v_zz__Time_created.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Time_last_accessed \
    "Time last accessed"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_last_accessed */
#define afw_vfs_s_zz__Time_last_accessed \
    (&afw_vfs_self_v_zz__Time_last_accessed.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_last_accessed */
#define afw_vfs_self_s_zz__Time_last_accessed \
    (afw_vfs_self_v_zz__Time_last_accessed.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Time_last_accessed */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Time_last_accessed;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Time_last_accessed */
#define afw_vfs_z_zz__Time_last_accessed \
    (afw_vfs_self_v_zz__Time_last_accessed.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Time_last_accessed */
#define afw_vfs_v_zz__Time_last_accessed \
    (&afw_vfs_self_v_zz__Time_last_accessed.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__Time_last_modified \
    "Time last modified"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_last_modified */
#define afw_vfs_s_zz__Time_last_modified \
    (&afw_vfs_self_v_zz__Time_last_modified.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__Time_last_modified */
#define afw_vfs_self_s_zz__Time_last_modified \
    (afw_vfs_self_v_zz__Time_last_modified.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__Time_last_modified */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__Time_last_modified;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__Time_last_modified */
#define afw_vfs_z_zz__Time_last_modified \
    (afw_vfs_self_v_zz__Time_last_modified.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__Time_last_modified */
#define afw_vfs_v_zz__Time_last_modified \
    (&afw_vfs_self_v_zz__Time_last_modified.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__VFS_Map \
    "VFS Map"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_Map */
#define afw_vfs_s_zz__VFS_Map \
    (&afw_vfs_self_v_zz__VFS_Map.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_Map */
#define afw_vfs_self_s_zz__VFS_Map \
    (afw_vfs_self_v_zz__VFS_Map.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__VFS_Map */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__VFS_Map;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__VFS_Map */
#define afw_vfs_z_zz__VFS_Map \
    (afw_vfs_self_v_zz__VFS_Map.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__VFS_Map */
#define afw_vfs_v_zz__VFS_Map \
    (&afw_vfs_self_v_zz__VFS_Map.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__VFS_Path \
    "VFS Path"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_Path */
#define afw_vfs_s_zz__VFS_Path \
    (&afw_vfs_self_v_zz__VFS_Path.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_Path */
#define afw_vfs_self_s_zz__VFS_Path \
    (afw_vfs_self_v_zz__VFS_Path.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__VFS_Path */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__VFS_Path;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__VFS_Path */
#define afw_vfs_z_zz__VFS_Path \
    (afw_vfs_self_v_zz__VFS_Path.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__VFS_Path */
#define afw_vfs_v_zz__VFS_Path \
    (&afw_vfs_self_v_zz__VFS_Path.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__VFS_path \
    "VFS path"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_path */
#define afw_vfs_s_zz__VFS_path \
    (&afw_vfs_self_v_zz__VFS_path.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_path */
#define afw_vfs_self_s_zz__VFS_path \
    (afw_vfs_self_v_zz__VFS_path.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__VFS_path */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__VFS_path;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__VFS_path */
#define afw_vfs_z_zz__VFS_path \
    (afw_vfs_self_v_zz__VFS_path.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__VFS_path */
#define afw_vfs_v_zz__VFS_path \
    (&afw_vfs_self_v_zz__VFS_path.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__VFS_to_operating_system_directory_map \
    "VFS to operating system directory map"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_to_operating_system_directory_map */
#define afw_vfs_s_zz__VFS_to_operating_system_directory_map \
    (&afw_vfs_self_v_zz__VFS_to_operating_system_directory_map.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__VFS_to_operating_system_directory_map */
#define afw_vfs_self_s_zz__VFS_to_operating_system_directory_map \
    (afw_vfs_self_v_zz__VFS_to_operating_system_directory_map.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__VFS_to_operating_system_directory_map */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__VFS_to_operating_system_directory_map;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__VFS_to_operating_system_directory_map */
#define afw_vfs_z_zz__VFS_to_operating_system_directory_map \
    (afw_vfs_self_v_zz__VFS_to_operating_system_directory_map.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__VFS_to_operating_system_directory_map */
#define afw_vfs_v_zz__VFS_to_operating_system_directory_map \
    (&afw_vfs_self_v_zz__VFS_to_operating_system_directory_map.pub)



/** @brief #define for string in quotes */
#define AFW_VFS_Q_zz__vfsPath_filename_patterns_to_mark_as_executable \
    "vfsPath filename patterns to mark as executable"

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__vfsPath_filename_patterns_to_mark_as_executable */
#define afw_vfs_s_zz__vfsPath_filename_patterns_to_mark_as_executable \
    (&afw_vfs_self_v_zz__vfsPath_filename_patterns_to_mark_as_executable.internal)

/** @brief 'afw_utf8_t' for AFW_VFS_Q_zz__vfsPath_filename_patterns_to_mark_as_executable */
#define afw_vfs_self_s_zz__vfsPath_filename_patterns_to_mark_as_executable \
    (afw_vfs_self_v_zz__vfsPath_filename_patterns_to_mark_as_executable.internal)

/** @brief 'afw_value_string_t' for AFW_VFS_Q_zz__vfsPath_filename_patterns_to_mark_as_executable */
extern const afw_value_string_t \
    afw_vfs_self_v_zz__vfsPath_filename_patterns_to_mark_as_executable;

/** @brief 'afw_utf8_z_t *' for AFW_VFS_Q_zz__vfsPath_filename_patterns_to_mark_as_executable */
#define afw_vfs_z_zz__vfsPath_filename_patterns_to_mark_as_executable \
    (afw_vfs_self_v_zz__vfsPath_filename_patterns_to_mark_as_executable.internal.s)

/** @brief 'const afw_value_t *' for AFW_VFS_Q_zz__vfsPath_filename_patterns_to_mark_as_executable */
#define afw_vfs_v_zz__vfsPath_filename_patterns_to_mark_as_executable \
    (&afw_vfs_self_v_zz__vfsPath_filename_patterns_to_mark_as_executable.pub)



#endif /* __AFW_VFS_STRINGS_H__ */
