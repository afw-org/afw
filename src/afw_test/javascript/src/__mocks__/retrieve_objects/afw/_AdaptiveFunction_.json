{
    "result": [
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_string",
                "objectId": "ne_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_string",
            "functionId": "ne<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is not equal to string arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "neString",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_rfc822Name",
                "objectId": "set_equals_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_rfc822Name",
            "functionId": "set_equals<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Returns boolean true if rfc822Name list1 and rfc822Name list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "setEqualsRfc822Name",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_match_rfc822Name",
                "objectId": "regexp_match_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_match_rfc822Name",
            "functionId": "regexp_match<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Checks whether rfc822Name value matches the regular expression regexp and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 17,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "regexpMatchRfc822Name",
            "brief": "Search for a match using a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpMatchRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_anyURI_string",
                "objectId": "to_anyURI_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_anyURI_string",
            "functionId": "to_anyURI<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to anyURI.",
            "deprecated": false,
            "dataTypeMethodNumber": 62,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toAnyURIString",
            "brief": "Converts string to anyURI",
            "afwCamelCaseFunctionLabel": "afwToAnyURIString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_rfc822Name",
                "objectId": "at_least_one_member_of_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "description": "The first list.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "description": "The second list.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_rfc822Name",
            "functionId": "at_least_one_member_of<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Returns boolean true if at least one value in rfc822Name list1 is in rfc822Name list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "atLeastOneMemberOfRfc822Name",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/service_get",
                "objectId": "service_get",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveService_ value.",
                "description": "_AdaptiveService_ object for the service which will contain the current status of the service.  If there is an error, the status property value will be \"error\" and \"statusMessage\" contain an error message.",
                "dataTypeParameter": "_AdaptiveService_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "serviceId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The serviceId of the service.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "service_get",
            "functionId": "service_get",
            "description": "Get a service object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "serviceGet",
            "brief": "Get service object",
            "afwCamelCaseFunctionLabel": "afwServiceGet"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_yearMonthDuration",
                "objectId": "subset_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "description": "The first list.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "description": "The second list.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_yearMonthDuration",
            "functionId": "subset<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Returns boolean true if the unique values in yearMonthDuration list1 are all in yearMonthDuration list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "subsetYearMonthDuration",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/index_list",
                "objectId": "index_list",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Object response from the index repair process",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Id of adaptive object type indexes",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "index_list",
            "functionId": "index_list",
            "description": "List property indexes",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "indexes",
            "camelCaseFunctionLabel": "indexList",
            "brief": "List property indexes",
            "afwCamelCaseFunctionLabel": "afwIndexList"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_boolean",
                "objectId": "subset_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "description": "The first list.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "description": "The second list.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_boolean",
            "functionId": "subset<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Returns boolean true if the unique values in boolean list1 are all in boolean list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "subsetBoolean",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_match",
                "objectId": "regexp_match",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "dnsName",
                "ipAddress",
                "rfc822Name",
                "string",
                "x500Name"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_match",
            "functionId": "regexp_match",
            "description": "Checks whether <dataType> value matches the regular expression regexp and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 17,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "regexpMatch",
            "brief": "Search for a match using a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpMatch"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/length_string",
                "objectId": "length_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Returns number of code points in single string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "length_string",
            "functionId": "length<string>",
            "details": "The string:: prefix is optional.",
            "description": "This is a polymorphic function where string can be any of the supported data types.  Return the integer number of codepoints in arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 12,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "lengthString",
            "brief": "Returns number of codepoints in value",
            "afwCamelCaseFunctionLabel": "afwLengthString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ge_dateTime",
                "objectId": "ge_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "op": ">=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ge_dateTime",
            "functionId": "ge<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 is greater than or equal to dateTime arg2 and return the boolean result.\n\nIf a dateTime value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 32,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "geDateTime",
            "brief": "Checks for greater than or equal",
            "afwCamelCaseFunctionLabel": "afwGeDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/anyURI",
                "objectId": "anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "description": "Converted value",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "anyURI",
            "functionId": "anyURI",
            "description": "Converts arg to data type anyURI returning anyURI result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "anyURI",
            "camelCaseFunctionLabel": "anyURI",
            "afwCamelCaseFunctionLabel": "afwAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_time",
                "objectId": "bag_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of time value.",
                "dataTypeParameter": "time",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of time value that can be specified 0 or more times.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_time",
            "functionId": "bag<time>",
            "details": "The time:: prefix is optional.",
            "description": "Takes any number of time args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "bagTime",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_hexBinary",
                "objectId": "one_and_only_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a hexBinary value.",
                "dataType": "hexBinary"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_hexBinary",
            "functionId": "one_and_only<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type hexBinary value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "oneAndOnlyHexBinary",
            "brief": "Converts a one value list to a hexBinary value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/multiply",
                "objectId": "multiply",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double",
                "integer"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "args",
                    "minArgs": 2,
                    "details": "This parameter is a <dataType> value that can be specified 2 or more times."
                }
            ],
            "op": "*",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "multiply",
            "functionId": "multiply",
            "description": "Multiply 2 or more <dataType> args and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 45,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "multiply",
            "brief": "Multiply numbers",
            "afwCamelCaseFunctionLabel": "afwMultiply"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/n_of",
                "objectId": "n_of",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a boolean value that can be specified 0 or more times.",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "n_of",
            "functionId": "n_of",
            "description": "integer arg1 specifies the number of boolean args that follow that must evaluate to true for boolean true to be returned.  If arg1 is 0, true is returned.  Once arg1 args evaluate to true, true is returned and the remaining args remain unevaluated.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "logical",
            "camelCaseFunctionLabel": "nOf",
            "brief": "Check for n true values",
            "afwCamelCaseFunctionLabel": "afwNOf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_hexBinary",
                "objectId": "at_least_one_member_of_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "description": "The first list.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "description": "The second list.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_hexBinary",
            "functionId": "at_least_one_member_of<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Returns boolean true if at least one value in hexBinary list1 is in hexBinary list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "atLeastOneMemberOfHexBinary",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_base64Binary",
                "objectId": "is_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is base64Binary.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_base64Binary",
            "functionId": "is<base64Binary>",
            "description": "Test arg returning boolean True if it is data type base64Binary.  Use is_list_of_base64Binary() instead to test for a list of base64Binary.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "base64Binary",
            "camelCaseFunctionLabel": "isBase64Binary",
            "brief": "Checks whether value is dataType base64Binary",
            "afwCamelCaseFunctionLabel": "afwIsBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_anyURI",
                "objectId": "eqx_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_anyURI",
            "functionId": "eqx<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks for anyURI arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "eqxAnyURI",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_dayTimeDuration",
                "objectId": "ne_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_dayTimeDuration",
            "functionId": "ne<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Checks for dayTimeDuration arg1 is not equal to dayTimeDuration arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "neDayTimeDuration",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ge_double",
                "objectId": "ge_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": ">=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ge_double",
            "functionId": "ge<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 is greater than or equal to double arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 32,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "geDouble",
            "brief": "Checks for greater than or equal",
            "afwCamelCaseFunctionLabel": "afwGeDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/random_number",
                "objectId": "random_number",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "min",
                    "minArgs": -1,
                    "details": "This parameter is a double value that is optional.",
                    "description": "Minimum double inclusive. The default is 0.0.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "max",
                    "minArgs": -1,
                    "details": "This parameter is a double value that is optional.",
                    "description": "Maximum double exclusive. The default is 1.0.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "random_number",
            "functionId": "random_number",
            "description": "This returns a random double between specified values",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "random",
            "camelCaseFunctionLabel": "randomNumber",
            "brief": "Generate a random number between specified values",
            "afwCamelCaseFunctionLabel": "afwRandomNumber"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/random_base64Binary",
                "objectId": "random_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a base64Binary value.",
                "dataType": "base64Binary"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "numberOfOctets",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "The number of random octets to generate.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "random_base64Binary",
            "functionId": "random_base64Binary",
            "description": "This returns a specified number of random octets as dataType base64Binary.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "random",
            "camelCaseFunctionLabel": "randomBase64Binary",
            "brief": "Generate random octets (base64Binary)",
            "afwCamelCaseFunctionLabel": "afwRandomBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/le",
                "objectId": "le",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime",
                "double",
                "integer",
                "string",
                "time"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                }
            ],
            "op": "<=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "le",
            "functionId": "le",
            "description": "Checks for <dataType> arg1 is less than or equal to <dataType> arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 34,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "le",
            "brief": "Checks for less than or equal",
            "afwCamelCaseFunctionLabel": "afwLe"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/min_time",
                "objectId": "min_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a time value.",
                "dataType": "time"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a time value that can be specified 1 or more times.",
                    "dataType": "time"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "min_time",
            "functionId": "min<time>",
            "details": "The time:: prefix is optional.",
            "description": "Return the time arg that is less than or equal to the others.\n\nIt is illegal to compare a time that includes a time-zone value with one that does not.  In such cases, the in_range<time> function should be used.",
            "deprecated": false,
            "dataTypeMethodNumber": 37,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "minTime",
            "brief": "Minimum value",
            "afwCamelCaseFunctionLabel": "afwMinTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_template",
                "objectId": "to_string_template",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a template value.",
                    "description": "A template value.",
                    "dataType": "template"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_template",
            "functionId": "to_string<template>",
            "details": "The template:: prefix is optional.",
            "description": "Converts template arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "template",
            "category": "template",
            "camelCaseFunctionLabel": "toStringTemplate",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringTemplate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_yearMonthDuration_string",
                "objectId": "to_yearMonthDuration_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a yearMonthDuration value.",
                "dataType": "yearMonthDuration"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_yearMonthDuration_string",
            "functionId": "to_yearMonthDuration<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to yearMonthDuration.",
            "deprecated": false,
            "dataTypeMethodNumber": 72,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toYearMonthDurationString",
            "brief": "Converts string to yearMonthDuration",
            "afwCamelCaseFunctionLabel": "afwToYearMonthDurationString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ceil_double",
                "objectId": "ceil_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ceil_double",
            "functionId": "ceil<double>",
            "details": "The double:: prefix is optional.",
            "description": "Determine the smallest integer that is greater then or equal to the double arg and return the double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 42,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "ceilDouble",
            "brief": "Round upward to nearest integer",
            "afwCamelCaseFunctionLabel": "afwCeilDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_x500Name",
                "objectId": "nex_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_x500Name",
            "functionId": "nex<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Checks for x500Name arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "nexX500Name",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/model_default_delete_object_action",
                "objectId": "model_default_delete_object_action",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveAction_ value.",
                "description": "The default action object.",
                "dataTypeParameter": "_AdaptiveAction_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptorId of a model adaptor.  Variable custom::adaptorId can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptive object type of object being deleted.  Variable custom::objectType can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the objectId of object to delete.  Variable custom::object can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "modelId",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "This specifics a modelId of model to use for producing results.  If not specified, the adaptor's current model will be used.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "context",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "This specifies additional context information available to model expressions.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "model_default_delete_object_action",
            "functionId": "model_default_delete_object_action",
            "description": "This function returns a _AdaptiveAction_ object for the default action performed if a onDeleteObject parameter is not specified on the associated _AdaptiveModelObjectType_.  The action is not performed, but be aware that functions called while producing the _AdaptiveAction_ object may cause side effects.  This function can be called as part of a onDelete expression or for testing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "model",
            "camelCaseFunctionLabel": "modelDefaultDeleteObjectAction",
            "brief": "Produce a default _AdaptiveAction_ object for an delete object request to a model adaptor.",
            "afwCamelCaseFunctionLabel": "afwModelDefaultDeleteObjectAction"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_dateTime",
                "objectId": "eqx_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_dateTime",
            "functionId": "eqx<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "eqxDateTime",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_dayTimeDuration",
                "objectId": "union_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of dayTimeDuration value.",
                "dataTypeParameter": "dayTimeDuration",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of dayTimeDuration value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_dayTimeDuration",
            "functionId": "union<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Returns a list of dayTimeDuration contains all of the unique values in two or more list of dayTimeDuration args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "unionDayTimeDuration",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_dayTimeDuration",
                "objectId": "bag_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of dayTimeDuration value.",
                "dataTypeParameter": "dayTimeDuration",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of dayTimeDuration value that can be specified 0 or more times.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_dayTimeDuration",
            "functionId": "bag<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Takes any number of dayTimeDuration args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "bagDayTimeDuration",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ipAddress",
                "objectId": "ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an ipAddress value.",
                "description": "Converted value",
                "dataType": "ipAddress"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ipAddress",
            "functionId": "ipAddress",
            "description": "Converts arg to data type ipAddress returning ipAddress result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "ipAddress",
            "camelCaseFunctionLabel": "ipAddress",
            "afwCamelCaseFunctionLabel": "afwIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/lt",
                "objectId": "lt",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime",
                "double",
                "integer",
                "string",
                "time"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "<",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "lt",
            "functionId": "lt",
            "description": "Checks for <dataType> arg1 is less that <dataType> arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 35,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "lt",
            "brief": "Checks for less than",
            "afwCamelCaseFunctionLabel": "afwLt"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract_yearMonthDuration_date",
                "objectId": "subtract_yearMonthDuration_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "dataType": "date"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract_yearMonthDuration_date",
            "functionId": "subtract_yearMonthDuration<date>",
            "details": "The date:: prefix is optional.",
            "description": "Subtract yearMonthDuration arg2 from date arg1 and return the date result.",
            "deprecated": false,
            "dataTypeMethodNumber": 39,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "subtractYearMonthDurationDate",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtractYearMonthDurationDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_dateTime",
                "objectId": "subset_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "description": "The first list.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "description": "The second list.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_dateTime",
            "functionId": "subset<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Returns boolean true if the unique values in dateTime list1 are all in dateTime list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "subsetDateTime",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_yearMonthDuration_date",
                "objectId": "add_yearMonthDuration_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "dataType": "date"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_yearMonthDuration_date",
            "functionId": "add_yearMonthDuration<date>",
            "details": "The date:: prefix is optional.",
            "description": "Add date arg1 to yearMonthDuration arg2 and return the date result.",
            "deprecated": false,
            "dataTypeMethodNumber": 31,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "addYearMonthDurationDate",
            "brief": "Add duration",
            "afwCamelCaseFunctionLabel": "afwAddYearMonthDurationDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_dateTime",
                "objectId": "intersection_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of dateTime value.",
                "dataTypeParameter": "dateTime",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "description": "The first list.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "description": "The second list.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_dateTime",
            "functionId": "intersection<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Returns a list of dateTime with the values that are common to both list of dateTime list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "intersectionDateTime",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/assign",
                "objectId": "assign",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 1,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The value assigned."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Variable name",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "This is the value to assign to the variable."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "assign",
            "functionId": "assign",
            "description": "Assign a value to the innermost structured block definition of a variable.  If the variable is not defined, the variable is defined in the innermost structured block.  An error is thrown if not called from a list of values in a structured function.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "assign",
            "brief": "Assign a value to a defined variable",
            "afwCamelCaseFunctionLabel": "afwAssign"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/decode_to_string_base64Binary",
                "objectId": "decode_to_string_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The decoded string.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "description": "The base64Binary value to decode.",
                    "dataType": "base64Binary"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "decode_to_string_base64Binary",
            "functionId": "decode_to_string<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Decode base64Binary value to string.  An error is thrown if decoded value is not valid UTF-8.",
            "deprecated": false,
            "dataTypeMethodNumber": 29,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "decodeToStringBase64Binary",
            "brief": "Decode base64Binary to string",
            "afwCamelCaseFunctionLabel": "afwDecodeToStringBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/evaluate_expression",
                "objectId": "evaluate_expression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated adaptive expression."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expression",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Expression to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveHybridPropertiesObjects_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveHybridPropertiesObjects_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "evaluate_expression",
            "functionId": "evaluate_expression",
            "description": "Compile a string containing adaptive expression syntax and then evaluate the result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "evaluateExpression",
            "brief": "Evaluate expression",
            "afwCamelCaseFunctionLabel": "afwEvaluateExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_time_string",
                "objectId": "to_time_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a time value.",
                "dataType": "time"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_time_string",
            "functionId": "to_time<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to time.",
            "deprecated": false,
            "dataTypeMethodNumber": 70,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toTimeString",
            "brief": "Converts string to time",
            "afwCamelCaseFunctionLabel": "afwToTimeString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_time",
                "objectId": "at_least_one_member_of_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "description": "The first list.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "description": "The second list.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_time",
            "functionId": "at_least_one_member_of<time>",
            "details": "The time:: prefix is optional.",
            "description": "Returns boolean true if at least one value in time list1 is in time list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "atLeastOneMemberOfTime",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/split",
                "objectId": "split",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "An list of strings.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to split."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "separator",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "The separator to use.  If this is an empty string or separator is not specified, the value is split between characters.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum number of splits.  Any remaining part of value is ignored.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "split",
            "functionId": "split",
            "description": "Split <dataType> value into an list of strings using a separator.",
            "deprecated": false,
            "dataTypeMethodNumber": 22,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "split",
            "brief": "Split at a separator",
            "afwCamelCaseFunctionLabel": "afwSplit"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/flag_get_defaults",
                "objectId": "flag_get_defaults",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of string value.",
                "description": "This is a list of the flagId of flags used to determine the default active flags.",
                "dataTypeParameter": "string",
                "dataType": "array"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "flag_get_defaults",
            "functionId": "flag_get_defaults",
            "description": "Get the list of the flagId of flags that are used to determine the default active flags when a scope (request) is created.  This list can contain the flagId of flags that have not yet been registered.  Each of these flags and the flags they include are set as the active default flags.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "flagGetDefaults",
            "brief": "Get the list of flags used to determine the default active flags",
            "afwCamelCaseFunctionLabel": "afwFlagGetDefaults"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/replace_string",
                "objectId": "replace_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "A string value with the matched string(s) replaced.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The original string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "match",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string to replace.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "replacement",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The replacement string.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum times to replace.  The default is 1.  Specify -1 to replace all occurrences.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "replace_string",
            "functionId": "replace<string>",
            "details": "The string:: prefix is optional.",
            "description": "Replace string(s) in a string value.",
            "deprecated": false,
            "dataTypeMethodNumber": 20,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "replaceString",
            "brief": "Replace strings",
            "afwCamelCaseFunctionLabel": "afwReplaceString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_x500Name",
                "objectId": "union_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of x500Name value.",
                "dataTypeParameter": "x500Name",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of x500Name value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_x500Name",
            "functionId": "union<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Returns a list of x500Name contains all of the unique values in two or more list of x500Name args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "unionX500Name",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_ipAddress",
                "objectId": "to_string_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an ipAddress value.",
                    "description": "A ipAddress value.",
                    "dataType": "ipAddress"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_ipAddress",
            "functionId": "to_string<ipAddress>",
            "details": "The ipAddress:: prefix is optional.",
            "description": "Converts ipAddress arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "ipAddress",
            "category": "ipAddress",
            "camelCaseFunctionLabel": "toStringIpAddress",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_integer",
                "objectId": "nex_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_integer",
            "functionId": "nex<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "nexInteger",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/repeat_anyURI",
                "objectId": "repeat_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "description": "The repeated anyURI value.",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "The anyURI value to repeat.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "times",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "The number of times to repeat the value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "repeat_anyURI",
            "functionId": "repeat<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Repeat a anyURI value a specified number of times.",
            "deprecated": false,
            "dataTypeMethodNumber": 19,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "repeatAnyURI",
            "brief": "Returns a repeated value",
            "afwCamelCaseFunctionLabel": "afwRepeatAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_time",
                "objectId": "nex_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_time",
            "functionId": "nex<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "nexTime",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/annotate",
                "objectId": "annotate",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Unevaluated annotated value ready for use by function evaluate()."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "annotation",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveAnnotation_ value.",
                    "description": "Annotation for value.",
                    "dataTypeParameter": "_AdaptiveAnnotation_",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Any value.  This value will not be evaluated."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "annotate",
            "functionId": "annotate",
            "description": "Create an annotated value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "annotate",
            "brief": "Annotate a value",
            "afwCamelCaseFunctionLabel": "afwAnnotate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/lt_date",
                "objectId": "lt_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                }
            ],
            "op": "<",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "lt_date",
            "functionId": "lt<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 is less that date arg2 and return the boolean result.\n\nIf a date value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 35,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "ltDate",
            "brief": "Checks for less than",
            "afwCamelCaseFunctionLabel": "afwLtDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/le_integer",
                "objectId": "le_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                }
            ],
            "op": "<=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "le_integer",
            "functionId": "le<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 is less than or equal to integer arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 34,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "leInteger",
            "brief": "Checks for less than or equal",
            "afwCamelCaseFunctionLabel": "afwLeInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_dateTime",
                "objectId": "is_in_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_dateTime",
            "functionId": "is_in<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks whether dateTime value is in list of dateTime list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "isInDateTime",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_time",
                "objectId": "eq_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_time",
            "functionId": "eq<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 is equal to time arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "eqTime",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/index_remove",
                "objectId": "index_remove",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Object response from the indexing process",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "key",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The index key to be removed.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "index_remove",
            "functionId": "index_remove",
            "description": "Remove an index definition.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "indexes",
            "camelCaseFunctionLabel": "indexRemove",
            "brief": "Remove index definition",
            "afwCamelCaseFunctionLabel": "afwIndexRemove"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_integer_string",
                "objectId": "to_integer_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_integer_string",
            "functionId": "to_integer<string>",
            "details": "The string:: prefix is optional.",
            "description": "Truncate string arg to a whole number and returns integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 50,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toIntegerString",
            "brief": "Converts to integer",
            "afwCamelCaseFunctionLabel": "afwToIntegerString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/index_of",
                "objectId": "index_of",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to search."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Substring to search for.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "startIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "Optional start index for search if different than start of string.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "index_of",
            "functionId": "index_of",
            "description": "Returns the zero-based index into <dataType> value of subString.  If subString is not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 8,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "indexOf",
            "brief": "Returns index of first occurrence",
            "afwCamelCaseFunctionLabel": "afwIndexOf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_date",
                "objectId": "is_in_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_date",
            "functionId": "is_in<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks whether date value is in list of date list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "isInDate",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_date",
                "objectId": "ne_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_date",
            "functionId": "ne<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 is not equal to date arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "neDate",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/normalize_space_string",
                "objectId": "normalize_space_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "normalize_space_string",
            "functionId": "normalize_space<string>",
            "details": "The string:: prefix is optional.",
            "description": "Remove whitespace from the beginning and end of a string value.",
            "deprecated": false,
            "dataTypeMethodNumber": 60,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "normalizeSpaceString",
            "brief": "Trims whitespace from beginning and end",
            "afwCamelCaseFunctionLabel": "afwNormalizeSpaceString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne",
                "objectId": "ne",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne",
            "functionId": "ne",
            "description": "Checks for <dataType> arg1 is not equal to <dataType> arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "ne",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNe"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/dayTimeDuration",
                "objectId": "dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dayTimeDuration value.",
                "description": "Converted value",
                "dataType": "dayTimeDuration"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "dayTimeDuration",
            "functionId": "dayTimeDuration",
            "description": "Converts arg to data type dayTimeDuration returning dayTimeDuration result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "dayTimeDuration",
            "afwCamelCaseFunctionLabel": "afwDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_ignore_case",
                "objectId": "eq_ignore_case",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_ignore_case",
            "functionId": "eq_ignore_case",
            "description": "Checks for <dataType> arg1 is equal to <dataType> arg2 ignoring case and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 57,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "eqIgnoreCase",
            "brief": "Checks for equal ignoring case",
            "afwCamelCaseFunctionLabel": "afwEqIgnoreCase"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/max_time",
                "objectId": "max_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a time value.",
                "dataType": "time"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a time value that can be specified 1 or more times.",
                    "dataType": "time"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "max_time",
            "functionId": "max<time>",
            "details": "The time:: prefix is optional.",
            "description": "Return the time arg that is greater than or equal to the others.\n\nIt is illegal to compare a time that includes a time-zone value with one that does not.  In such cases, the in_range<time> function should be used.",
            "deprecated": false,
            "dataTypeMethodNumber": 36,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "maxTime",
            "brief": "Maximum value",
            "afwCamelCaseFunctionLabel": "afwMaxTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset",
                "objectId": "subset",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "description": "The first list.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "description": "The second list.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset",
            "functionId": "subset",
            "description": "Returns boolean true if the unique values in <dataType> list1 are all in <dataType> list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "subset",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubset"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/print_objects",
                "objectId": "print_objects",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "Empty string.",
                "dataType": "string"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor containing objects to print.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of objects to print.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "queryString",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Query sting used to filter objects printed.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveObjectOptions_ value that is optional.",
                    "description": "Object view options.  See /afw/_AdaptiveObjectType_/_AdaptiveObjectOptions_ for more information.",
                    "dataTypeParameter": "_AdaptiveObjectOptions_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "print_objects",
            "functionId": "print_objects",
            "description": "Print adaptive objects as their to_string() value.  Each object will be preceded with a line containing the decimal length of the object's string.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "printObjects",
            "brief": "Print adaptive objects",
            "afwCamelCaseFunctionLabel": "afwPrintObjects"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/foreach",
                "objectId": "foreach",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 7,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The last value evaluated in body or null if condition evaluates to false the first time."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "Variable name(s).",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Any list, object or single value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "body",
                    "minArgs": -1,
                    "details": "This parameter is a list value that is optional.",
                    "description": "This is a list of values that are evaluated for each iteration of the loop.  Each value in body is evaluated in order until the end of the list or until a \"break\", \"continue\", \"return\" or \"throw\" function is encountered.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "foreach",
            "functionId": "foreach",
            "description": "This creates a new structured block with a new nested variable scope.\n\nThis function will evaluate a list of values while a condition is true with initial and increment values.  The condition is tested at the beginning of the loop.  If the condition is false for the first iteration, the loop returns a null value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "foreach",
            "brief": "Evaluate a list of values while a condition is true with a list of initial and increment values",
            "afwCamelCaseFunctionLabel": "afwForeach"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/journal_advance_cursor_for_consumer",
                "objectId": "journal_advance_cursor_for_consumer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Response object.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "consumerId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The consumerId property value of the associated _AdaptiveProvisioningPeer_ object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "The maximum number of entries that will be scanned for an entry where the consumerFilter expression in the associated _AdaptiveProvisioningPeer_ object evaluates to true.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "journal_advance_cursor_for_consumer",
            "functionId": "journal_advance_cursor_for_consumer",
            "description": "Update the advance cursor for a consumer referenced by the consumerId parameter.  The limit parameter specifies the maximum number of entries to scan for an applicable entry for consumer before returning.  NULL is always returned.\n\nThere are no response properties set by this function.\n\nThe properties of the _AdaptiveProvisioningPeer_ object associated with the consumer_id are used in the following way:\n\nThe consumerFilter expression is used to determine if an entry is applicable.\n\nJournal entries are scanned beginning at the entry at the cursor in the advanceCursor property.  If the advanceCursor property is not present, the scan begins after the cursor in currentCursor.  If neither are present, the scan begins at the start of the journal.\n\nIf an new applicable entry is found or if the limit is met, the advanceCursor property is set to the currently scanned entry's cursor.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "journal",
            "camelCaseFunctionLabel": "journalAdvanceCursorForConsumer",
            "brief": "Advance journal cursor for consumer",
            "afwCamelCaseFunctionLabel": "afwJournalAdvanceCursorForConsumer"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_object",
                "objectId": "add_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.  Property \"objectId\" is the objectId assigned by the adaptor.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of object being added.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object to add.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Optional preferred objectId of object to add.  The adaptor may ignore this.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_add_object\n\nwhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_object",
            "functionId": "add_object",
            "description": "Add an adaptive object to an adaptor, specified by the adaptorId, with a specified objectType.  You may supply an optional objectId, if the underlying adaptorId allows it.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "addObject",
            "brief": "Add adaptive object",
            "afwCamelCaseFunctionLabel": "afwAddObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_hexBinary",
                "objectId": "set_equals_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_hexBinary",
            "functionId": "set_equals<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Returns boolean true if hexBinary list1 and hexBinary list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "setEqualsHexBinary",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_yearMonthDuration",
                "objectId": "bag_size_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_yearMonthDuration",
            "functionId": "bag_size<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "bagSizeYearMonthDuration",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_integer",
                "objectId": "eq_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_integer",
            "functionId": "eq<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 is equal to integer arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "eqInteger",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_dateTime",
                "objectId": "at_least_one_member_of_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "description": "The first list.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "description": "The second list.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_dateTime",
            "functionId": "at_least_one_member_of<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Returns boolean true if at least one value in dateTime list1 is in dateTime list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "atLeastOneMemberOfDateTime",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union",
                "objectId": "union",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": true,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of <dataType> value.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of <dataType> value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union",
            "functionId": "union",
            "description": "Returns a list of <dataType> contains all of the unique values in two or more list of <dataType> args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "union",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnion"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/random_hexBinary",
                "objectId": "random_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a hexBinary value.",
                "dataType": "hexBinary"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "numberOfOctets",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "The number of random octets to generate.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "random_hexBinary",
            "functionId": "random_hexBinary",
            "description": "This returns a specified number of random octets as dataType hexBinary.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "random",
            "camelCaseFunctionLabel": "randomHexBinary",
            "brief": "Generate random octets (hexBinary)",
            "afwCamelCaseFunctionLabel": "afwRandomHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/all_of",
                "objectId": "all_of",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(...) value.",
                    "description": "This function is called for each value in the first list in args or until false is returned.  If no calls return false, the result is true.",
                    "dataTypeParameter": "(boolean)(...)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is an untyped value that can be specified 1 or more times.",
                    "description": "These are the parameters passed to predicate with the exception that the first list is passed one value at a time.  At least one list is required."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "all_of",
            "functionId": "all_of",
            "description": "Returns true if all values in a list pass the predicate test.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "allOf",
            "brief": "All values pass a test",
            "afwCamelCaseFunctionLabel": "afwAllOf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/reader_list",
                "objectId": "reader_list",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "Reader entries.",
                "dataType": "string"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Adaptor Id.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "reader_list",
            "functionId": "reader_list",
            "description": "Dump the entries in the reader lock table.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "lmdb",
            "camelCaseFunctionLabel": "readerList",
            "afwCamelCaseFunctionLabel": "afwReaderList"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/test_expression",
                "objectId": "test_expression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Test results.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "id",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "description",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Description of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expression",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Expression to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expected",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Expected result."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "test_expression",
            "functionId": "test_expression",
            "description": "Compile and evaluate an adaptive expression and compare the results to an expected value.  Return object with the test's results.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "testExpression",
            "brief": "Test expression",
            "afwCamelCaseFunctionLabel": "afwTestExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_integer",
                "objectId": "bag_size_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_integer",
            "functionId": "bag_size<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "bagSizeInteger",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_ia5String",
                "objectId": "is_ia5String",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is ia5String.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_ia5String",
            "functionId": "is<ia5String>",
            "description": "Test arg returning boolean True if it is data type ia5String.  Use is_list_of_ia5String() instead to test for a list of ia5String.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "ia5String",
            "camelCaseFunctionLabel": "isIa5String",
            "brief": "Checks whether value is dataType ia5String",
            "afwCamelCaseFunctionLabel": "afwIsIa5String"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/string",
                "objectId": "string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "Converted value",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "string",
            "functionId": "string",
            "description": "Converts arg to data type string returning string result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "string",
            "camelCaseFunctionLabel": "string",
            "afwCamelCaseFunctionLabel": "afwString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_template",
                "objectId": "is_template",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is template.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_template",
            "functionId": "is<template>",
            "description": "Test arg returning boolean True if it is data type template.  Use is_list_of_template() instead to test for a list of template.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "template",
            "camelCaseFunctionLabel": "isTemplate",
            "brief": "Checks whether value is dataType template",
            "afwCamelCaseFunctionLabel": "afwIsTemplate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/gt_date",
                "objectId": "gt_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                }
            ],
            "op": ">",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "gt_date",
            "functionId": "gt<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 is greater than date arg2 and return the boolean result.\n\nIf a date value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 33,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "gtDate",
            "brief": "Checks for greater than",
            "afwCamelCaseFunctionLabel": "afwGtDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/test_value",
                "objectId": "test_value",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Test results.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "id",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "description",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Description of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Value to evaluate",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expected",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Expected result."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "test_value",
            "functionId": "test_value",
            "description": "Evaluate an adaptive value and compare it to an expected value.  Return object with the test's results.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "testValue",
            "brief": "Test value",
            "afwCamelCaseFunctionLabel": "afwTestValue"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_rfc822Name",
                "objectId": "bag_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of rfc822Name value.",
                "dataTypeParameter": "rfc822Name",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of rfc822Name value that can be specified 0 or more times.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_rfc822Name",
            "functionId": "bag<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Takes any number of rfc822Name args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "bagRfc822Name",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/or",
                "objectId": "or",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a boolean value that can be specified 0 or more times.",
                    "dataType": "boolean"
                }
            ],
            "op": "||",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "or",
            "functionId": "or",
            "description": "Evaluates 0 or more boolean args returning boolean false if there are no args and boolean true if any args evaluate to true.  All args after the first true remain unevaluated.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "logical",
            "camelCaseFunctionLabel": "or",
            "brief": "Logical or",
            "afwCamelCaseFunctionLabel": "afwOr"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_ipAddress",
                "objectId": "bag_size_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of ipAddress value.",
                    "dataTypeParameter": "ipAddress",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_ipAddress",
            "functionId": "bag_size<ipAddress>",
            "details": "The ipAddress:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "ipAddress",
            "category": "ipAddress",
            "camelCaseFunctionLabel": "bagSizeIpAddress",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_double",
                "objectId": "add_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 2,
                    "details": "This parameter is a double value that can be specified 2 or more times.",
                    "dataType": "double"
                }
            ],
            "op": "+",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_double",
            "functionId": "add<double>",
            "details": "The double:: prefix is optional.",
            "description": "Add 2 or more double args and return the double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 41,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "addDouble",
            "brief": "Add numbers",
            "afwCamelCaseFunctionLabel": "afwAddDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_string",
                "objectId": "eqx_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_string",
            "functionId": "eqx<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "eqxString",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/continue",
                "objectId": "continue",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 4,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "This function does not return."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "continue",
            "functionId": "continue",
            "description": "This is a special function that can be called in the body of a loop function to test the condition and, if true, start evaluating the body again.  If called outside of a loop body, an error is thrown.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "continue",
            "brief": "Continue at beginning of a loop",
            "afwCamelCaseFunctionLabel": "afwContinue"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/scope_create_time_local",
                "objectId": "scope_create_time_local",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "scope_create_time_local",
            "functionId": "scope_create_time_local",
            "description": "Return local dateTime when scope was created.  This will usually be the start of request time.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "scopeCreateTimeLocal",
            "brief": "Scope local dataTime",
            "afwCamelCaseFunctionLabel": "afwScopeCreateTimeLocal"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_x500Name",
                "objectId": "to_string_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "description": "A x500Name value.",
                    "dataType": "x500Name"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_x500Name",
            "functionId": "to_string<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Converts x500Name arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "toStringX500Name",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_time",
                "objectId": "is_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is time.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_time",
            "functionId": "is<time>",
            "description": "Test arg returning boolean True if it is data type time.  Use is_list_of_time() instead to test for a list of time.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "time",
            "camelCaseFunctionLabel": "isTime",
            "brief": "Checks whether value is dataType time",
            "afwCamelCaseFunctionLabel": "afwIsTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/time",
                "objectId": "time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a time value.",
                "description": "Converted value",
                "dataType": "time"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "time",
            "functionId": "time",
            "description": "Converts arg to data type time returning time result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "time",
            "camelCaseFunctionLabel": "time",
            "afwCamelCaseFunctionLabel": "afwTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_double",
                "objectId": "eq_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_double",
            "functionId": "eq<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 is equal to double arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "eqDouble",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_boolean",
                "objectId": "is_in_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_boolean",
            "functionId": "is_in<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Checks whether boolean value is in list of boolean list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "isInBoolean",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract_integer",
                "objectId": "subtract_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "-",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract_integer",
            "functionId": "subtract<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Subtract integer arg2 from integer arg1 and return the integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 49,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "subtractInteger",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtractInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_integer",
                "objectId": "union_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of integer value.",
                "dataTypeParameter": "integer",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of integer value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_integer",
            "functionId": "union<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Returns a list of integer contains all of the unique values in two or more list of integer args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "unionInteger",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/xpath_node_match",
                "objectId": "xpath_node_match",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "nodeset2",
                    "minArgs": -1,
                    "details": "This parameter is a xpathExpression value.",
                    "dataType": "xpathExpression"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a xpathExpression value.",
                    "dataType": "xpathExpression"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "xpath_node_match",
            "functionId": "xpath_node_match",
            "description": "Returns true if any of the nodes matched by nodeset1 are equal to any of the nodes matched by nodeset2 or their corresponding children.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "xpath",
            "camelCaseFunctionLabel": "xpathNodeMatch",
            "brief": "Checks whether two node-sets or their children have an equal node",
            "afwCamelCaseFunctionLabel": "afwXpathNodeMatch"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_dnsName",
                "objectId": "is_in_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a dnsName value.",
                    "dataType": "dnsName"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of dnsName value.",
                    "dataTypeParameter": "dnsName",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_dnsName",
            "functionId": "is_in<dnsName>",
            "details": "The dnsName:: prefix is optional.",
            "description": "Checks whether dnsName value is in list of dnsName list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "dnsName",
            "category": "dnsName",
            "camelCaseFunctionLabel": "isInDnsName",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/reduce",
                "objectId": "reduce",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "This is the final return value from functor() or the accumulator parameter value if list is empty."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "functor",
                    "minArgs": -1,
                    "details": "This parameter is a function ()(accumulator, value) value.",
                    "description": "This function is called for each value in a list.  The returned value is passed as the accumulator parameter on the next call to functor().",
                    "dataTypeParameter": "()(accumulator, value)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "accumulator",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "This is an initial accumulator value passed to functor().  Normally, the dataType of accumulator will be the dataTape for the reduce() return value, but this is not required."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "This is a list to be reduced.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "reduce",
            "functionId": "reduce",
            "description": "Reduce calls functor for each value in list with two parameters, accumulator and value, and must return a value of any dataType.  Parameter accumulator is the reduce() accumulator parameter value on first call and the return value of previous functor() call on subsequent calls.  The dataType of the return value should normally be the same as accumulator, but this is not required.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "reduce",
            "brief": "Reduce values of a list to a single value",
            "afwCamelCaseFunctionLabel": "afwReduce"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/substring_anyURI",
                "objectId": "substring_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "endIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg3",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "substring_anyURI",
            "functionId": "substring<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns the anyURI subanyURI of value beginning at zero-based position integer startIndex and ending at the position before integer endIndex.  Specify -1 in endIndex to return up to end of anyURI.",
            "deprecated": false,
            "dataTypeMethodNumber": 25,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "substringAnyURI",
            "brief": "Extract a substring",
            "afwCamelCaseFunctionLabel": "afwSubstringAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_match_dnsName",
                "objectId": "regexp_match_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a dnsName value.",
                    "dataType": "dnsName"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_match_dnsName",
            "functionId": "regexp_match<dnsName>",
            "details": "The dnsName:: prefix is optional.",
            "description": "Checks whether dnsName value matches the regular expression regexp and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 17,
            "dataType": "dnsName",
            "category": "dnsName",
            "camelCaseFunctionLabel": "regexpMatchDnsName",
            "brief": "Search for a match using a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpMatchDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ceil",
                "objectId": "ceil",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ceil",
            "functionId": "ceil",
            "description": "Determine the smallest integer that is greater then or equal to the <dataType> arg and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 42,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "ceil",
            "brief": "Round upward to nearest integer",
            "afwCamelCaseFunctionLabel": "afwCeil"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/return",
                "objectId": "return",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 10,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "This function returns from the outermost structured block with the last evaluated value."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "The value to evaluate that the outermost block will return.  If not specified, the last evaluated value or a null value will be returned."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "return",
            "functionId": "return",
            "description": "Return from the outermost structured block.  If the expression of a lambda function is a block function, this will effectively return from the lambda function.  If called outside of a structured block, an error is thrown.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "return",
            "brief": "Return from the outermost structured block",
            "afwCamelCaseFunctionLabel": "afwReturn"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/max_double",
                "objectId": "max_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a double value that can be specified 1 or more times.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "max_double",
            "functionId": "max<double>",
            "details": "The double:: prefix is optional.",
            "description": "Return the double arg that is greater than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 36,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "maxDouble",
            "brief": "Maximum value",
            "afwCamelCaseFunctionLabel": "afwMaxDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_base64Binary",
                "objectId": "at_least_one_member_of_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "description": "The first list.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "description": "The second list.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_base64Binary",
            "functionId": "at_least_one_member_of<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Returns boolean true if at least one value in base64Binary list1 is in base64Binary list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "atLeastOneMemberOfBase64Binary",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/journal_get_next_after_cursor",
                "objectId": "journal_get_next_after_cursor",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Response object.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "cursor",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Journal entry cursor.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "journal_get_next_after_cursor",
            "functionId": "journal_get_next_after_cursor",
            "description": "Get the next journal entry after the one specified by the entry_cursor parameter.\n\nThis option will set response properties \"entry\" and \"cursor\" if there is a next entry to retrieve.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "journal",
            "camelCaseFunctionLabel": "journalGetNextAfterCursor",
            "brief": "Get next journal entry after cursor",
            "afwCamelCaseFunctionLabel": "afwJournalGetNextAfterCursor"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/flag_replace_defaults",
                "objectId": "flag_replace_defaults",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "flagId",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The list of the flagId of flags used to determine the default active flags.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "flag_replace_defaults",
            "functionId": "flag_replace_defaults",
            "description": "Completely replace the list of the flagId of flags that are used to determine the default active flags when a scope (request) is created.  This list can contain the flagId of flags that have not yet been registered.  These flags and the flags they include are set as the active default flags.\n\nThis change only lasts for the life of the current adaptive environment (e.g. until the adaptive server or afw command ends).  If you want the change to persist, change the defaultFlags property in the application config.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "flagReplaceDefaults",
            "brief": "Replace the list of flags used to determine the default active flags",
            "afwCamelCaseFunctionLabel": "afwFlagReplaceDefaults"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/match",
                "objectId": "match",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "rfc822Name",
                "x500Name"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "match",
            "functionId": "match",
            "description": "Returns true if arg1 matches some terminal sequence of RDNs from arg2 when compared using equal_<dataType>.",
            "deprecated": false,
            "dataTypeMethodNumber": 59,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "match",
            "brief": "Checks if x500Name matches",
            "afwCamelCaseFunctionLabel": "afwMatch"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/model_default_add_object_action",
                "objectId": "model_default_add_object_action",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveAction_ value.",
                "description": "The default action object.",
                "dataTypeParameter": "_AdaptiveAction_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptorId of a model adaptor.  Variable custom::adaptorId can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptive object type of object being added.  Variable custom::objectType can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "This is the object to add.  Variable custom::object can be used to access this value in model expressions.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "This is the optional preferred objectId of object to add.  The adaptor may ignore this.  Variable custom::objectId can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "modelId",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "This specifics a modelId of model to use for producing results.  If not specified, the adaptor's current model will be used.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "context",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "This specifies additional context information available to model expressions.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "model_default_add_object_action",
            "functionId": "model_default_add_object_action",
            "description": "This function returns a _AdaptiveAction_ object for the default action performed if a onAdd parameter is not specified on the associated _AdaptiveModelObjectType_.  The action is not performed, but be aware that functions called while producing the _AdaptiveAction_ object may cause side effects.  This function can be called as part of a onAdd expression or for testing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "model",
            "camelCaseFunctionLabel": "modelDefaultAddObjectAction",
            "brief": "Produce a default _AdaptiveAction_ object for an add object request to a model adaptor.",
            "afwCamelCaseFunctionLabel": "afwModelDefaultAddObjectAction"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_dateTime",
                "objectId": "bag_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of dateTime value.",
                "dataTypeParameter": "dateTime",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of dateTime value that can be specified 0 or more times.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_dateTime",
            "functionId": "bag<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Takes any number of dateTime args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "bagDateTime",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/repeat_string",
                "objectId": "repeat_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The repeated string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string value to repeat.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "times",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "The number of times to repeat the value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "repeat_string",
            "functionId": "repeat<string>",
            "details": "The string:: prefix is optional.",
            "description": "Repeat a string value a specified number of times.",
            "deprecated": false,
            "dataTypeMethodNumber": 19,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "repeatString",
            "brief": "Returns a repeated value",
            "afwCamelCaseFunctionLabel": "afwRepeatString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/convert_syntax_hybrid_to_expression",
                "objectId": "convert_syntax_hybrid_to_expression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an expression value.",
                "description": "The converted value in adaptive expression syntax.",
                "dataType": "script"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "hybrid",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The hybrid to convert.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "whitespace",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "Add whitespace for readability if present and not 0.  This parameter can be an integer between 0 and 10 or a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "convert_syntax_hybrid_to_expression",
            "functionId": "convert_syntax_hybrid_to_expression",
            "description": "Convert a string containing adaptive hybrid syntax, which can be an adaptive template or adaptive expression tuple, to adaptive expression syntax.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "convertSyntaxHybridToExpression",
            "brief": "Convert a hybrid to a expression.",
            "afwCamelCaseFunctionLabel": "afwConvertSyntaxHybridToExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/min_string",
                "objectId": "min_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a string value that can be specified 1 or more times.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "min_string",
            "functionId": "min<string>",
            "details": "The string:: prefix is optional.",
            "description": "Return the string arg that is less than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 37,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "minString",
            "brief": "Minimum value",
            "afwCamelCaseFunctionLabel": "afwMinString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/replace",
                "objectId": "replace",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value.",
                "description": "A <dataType> value with the matched string(s) replaced."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The original <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "match",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string to replace.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "replacement",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The replacement string.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum times to replace.  The default is 1.  Specify -1 to replace all occurrences.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "replace",
            "functionId": "replace",
            "description": "Replace string(s) in a <dataType> value.",
            "deprecated": false,
            "dataTypeMethodNumber": 20,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "replace",
            "brief": "Replace strings",
            "afwCamelCaseFunctionLabel": "afwReplace"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_dateTime",
                "objectId": "ne_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_dateTime",
            "functionId": "ne<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 is not equal to dateTime arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "neDateTime",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/property_exists",
                "objectId": "property_exists",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if object has named property.",
                "dataType": "boolean"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object to get property from.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Name of property to check.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "property_exists",
            "functionId": "property_exists",
            "description": "Return true if the named property exists in an object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "propertyExists",
            "brief": "Determine if a property exists in an object",
            "afwCamelCaseFunctionLabel": "afwPropertyExists"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/objectPath",
                "objectId": "objectPath",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an objectPath value.",
                "description": "Converted value",
                "dataType": "objectPath"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "objectPath",
            "functionId": "objectPath",
            "description": "Converts arg to data type objectPath returning objectPath result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "objectPath",
            "camelCaseFunctionLabel": "objectPath",
            "afwCamelCaseFunctionLabel": "afwObjectPath"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/objectId",
                "objectId": "objectId",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an objectId value.",
                "description": "Converted value",
                "dataType": "objectId"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "objectId",
            "functionId": "objectId",
            "description": "Converts arg to data type objectId returning objectId result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "objectId",
            "camelCaseFunctionLabel": "objectId",
            "afwCamelCaseFunctionLabel": "afwObjectId"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_date",
                "objectId": "bag_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of date value.",
                "dataTypeParameter": "date",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of date value that can be specified 0 or more times.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_date",
            "functionId": "bag<date>",
            "details": "The date:: prefix is optional.",
            "description": "Takes any number of date args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "bagDate",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_ignore_case_string",
                "objectId": "eq_ignore_case_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_ignore_case_string",
            "functionId": "eq_ignore_case<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is equal to string arg2 ignoring case and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 57,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "eqIgnoreCaseString",
            "brief": "Checks for equal ignoring case",
            "afwCamelCaseFunctionLabel": "afwEqIgnoreCaseString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/dateTime",
                "objectId": "dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "description": "Converted value",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "dateTime",
            "functionId": "dateTime",
            "description": "Converts arg to data type dateTime returning dateTime result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "dateTime",
            "camelCaseFunctionLabel": "dateTime",
            "afwCamelCaseFunctionLabel": "afwDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/integer",
                "objectId": "integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Converted value",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "integer",
            "functionId": "integer",
            "description": "Converts arg to data type integer returning integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "integer",
            "camelCaseFunctionLabel": "integer",
            "afwCamelCaseFunctionLabel": "afwInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/retrieve_objects",
                "objectId": "retrieve_objects",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "List of objects retrieved.",
                "dataType": "array"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor containing objects to retrieve.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of objects to retrieve.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "queryString",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Query sting used to filter objects retrieved.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveObjectOptions_ value that is optional.",
                    "description": "Object view options.  See /afw/_AdaptiveObjectType_/_AdaptiveObjectOptions_ for more information.",
                    "dataTypeParameter": "_AdaptiveObjectOptions_",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_retrieve_objects\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "retrieve_objects",
            "functionId": "retrieve_objects",
            "description": "This function Retrieves adaptive objects from an adaptor, specified by adaptorId, which match the type specified by objectType.  The optional queryString is used to filter the adaptive object list, which match the filter expression.  Use the objectOptions parameter to influence how the objects are viewed.  Options, specific to the adaptorId, may be optionally supplied to this retrieve as well.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "retrieveObjects",
            "brief": "Retrieve adaptive objects",
            "afwCamelCaseFunctionLabel": "afwRetrieveObjects"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_dateTime",
                "objectId": "bag_size_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_dateTime",
            "functionId": "bag_size<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "bagSizeDateTime",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/delete_object_with_uri",
                "objectId": "delete_object_with_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URI of object to delete.  If a URI begins with a single slash ('/'), it is the local object path.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_delete_object\n\nwhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "delete_object_with_uri",
            "functionId": "delete_object_with_uri",
            "description": "Delete an adaptive object with a given URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "deleteObjectWithUri",
            "afwCamelCaseFunctionLabel": "afwDeleteObjectWithUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_boolean",
                "objectId": "one_and_only_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_boolean",
            "functionId": "one_and_only<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type boolean value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "oneAndOnlyBoolean",
            "brief": "Converts a one value list to a boolean value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_dayTimeDuration",
                "objectId": "to_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dayTimeDuration value.",
                "dataType": "dayTimeDuration"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_dayTimeDuration",
            "functionId": "to_dayTimeDuration",
            "description": "Converts <dataType> arg to dayTimeDuration.",
            "deprecated": false,
            "dataTypeMethodNumber": 66,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toDayTimeDuration",
            "brief": "Converts string to dayTimeDuration",
            "afwCamelCaseFunctionLabel": "afwToDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_yearMonthDuration",
                "objectId": "is_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is yearMonthDuration.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_yearMonthDuration",
            "functionId": "is<yearMonthDuration>",
            "description": "Test arg returning boolean True if it is data type yearMonthDuration.  Use is_list_of_yearMonthDuration() instead to test for a list of yearMonthDuration.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "isYearMonthDuration",
            "brief": "Checks whether value is dataType yearMonthDuration",
            "afwCamelCaseFunctionLabel": "afwIsYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/retrieve_objects_with_uri",
                "objectId": "retrieve_objects_with_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "Bag of objects retrieved.",
                "dataType": "array"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URI of objects to retrieve.  If a URI begins with a single slash ('/'), it is the local object path.  A query string can be specified.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveObjectOptions_ value that is optional.",
                    "description": "Object view options.  See /afw/_AdaptiveObjectType_/_AdaptiveObjectOptions_ for more information.",
                    "dataTypeParameter": "_AdaptiveObjectOptions_",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_retrieve_objects\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "retrieve_objects_with_uri",
            "functionId": "retrieve_objects_with_uri",
            "description": "Retrieve adaptive objects with a given URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "retrieveObjectsWithUri",
            "brief": "Retrieve adaptive object with URI",
            "afwCamelCaseFunctionLabel": "afwRetrieveObjectsWithUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_dnsName",
                "objectId": "one_and_only_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dnsName value.",
                "dataType": "dnsName"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_dnsName",
            "functionId": "one_and_only<dnsName>",
            "details": "The dnsName:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type dnsName value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "dnsName",
            "category": "dnsName",
            "camelCaseFunctionLabel": "oneAndOnlyDnsName",
            "brief": "Converts a one value list to a dnsName value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/normalize_space",
                "objectId": "normalize_space",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "normalize_space",
            "functionId": "normalize_space",
            "description": "Remove whitespace from the beginning and end of a <dataType> value.",
            "deprecated": false,
            "dataTypeMethodNumber": 60,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "normalizeSpace",
            "brief": "Trims whitespace from beginning and end",
            "afwCamelCaseFunctionLabel": "afwNormalizeSpace"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/modify_object",
                "objectId": "modify_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor containing object to modify.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of object to modify.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of object to modify.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "entries",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "List of modifications.  Entries are of the form:\n\n    [\n        \"add_value\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]\n\n    [\n        \"remove_property\",\n        \"property name\" or [\"property name\", ... ]\n    ]\n\n    [\n        \"remove_value\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]\n\n    [\n        \"set_property\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_modify_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "modify_object",
            "functionId": "modify_object",
            "description": "Modify an adaptive object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "modifyObject",
            "brief": "Modify adaptive object",
            "afwCamelCaseFunctionLabel": "afwModifyObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/repeat",
                "objectId": "repeat",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value.",
                "description": "The repeated <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to repeat."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "times",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "The number of times to repeat the value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "repeat",
            "functionId": "repeat",
            "description": "Repeat a <dataType> value a specified number of times.",
            "deprecated": false,
            "dataTypeMethodNumber": 19,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "repeat",
            "brief": "Returns a repeated value",
            "afwCamelCaseFunctionLabel": "afwRepeat"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_dateTime",
                "objectId": "one_and_only_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_dateTime",
            "functionId": "one_and_only<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type dateTime value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "oneAndOnlyDateTime",
            "brief": "Converts a one value list to a dateTime value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/min_date",
                "objectId": "min_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "dataType": "date"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a date value that can be specified 1 or more times.",
                    "dataType": "date"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "min_date",
            "functionId": "min<date>",
            "details": "The date:: prefix is optional.",
            "description": "Return the date arg that is less than or equal to the others..\n\nIf a date value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 37,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "minDate",
            "brief": "Minimum value",
            "afwCamelCaseFunctionLabel": "afwMinDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ge_string",
                "objectId": "ge_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "op": ">=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ge_string",
            "functionId": "ge<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is greater than or equal to string arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 32,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "geString",
            "brief": "Checks for greater than or equal",
            "afwCamelCaseFunctionLabel": "afwGeString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_rfc822Name",
                "objectId": "eqx_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_rfc822Name",
            "functionId": "eqx<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Checks for rfc822Name arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "eqxRfc822Name",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_yearMonthDuration",
                "objectId": "add_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_yearMonthDuration",
            "functionId": "add_yearMonthDuration",
            "description": "Add <dataType> arg1 to yearMonthDuration arg2 and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 31,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "addYearMonthDuration",
            "brief": "Add duration",
            "afwCamelCaseFunctionLabel": "afwAddYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_time",
                "objectId": "intersection_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of time value.",
                "dataTypeParameter": "time",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "description": "The first list.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "description": "The second list.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_time",
            "functionId": "intersection<time>",
            "details": "The time:: prefix is optional.",
            "description": "Returns a list of time with the values that are common to both list of time list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "intersectionTime",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/gt_dateTime",
                "objectId": "gt_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "op": ">",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "gt_dateTime",
            "functionId": "gt<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 is greater than dateTime arg2 and return the boolean result.\n\nIf a dateTime value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 33,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "gtDateTime",
            "brief": "Checks for greater than",
            "afwCamelCaseFunctionLabel": "afwGtDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_yearMonthDuration",
                "objectId": "nex_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_yearMonthDuration",
            "functionId": "nex<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Checks for yearMonthDuration arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "nexYearMonthDuration",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_dayTimeDuration",
                "objectId": "eq_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_dayTimeDuration",
            "functionId": "eq<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Checks for dayTimeDuration arg1 is equal to dayTimeDuration arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "eqDayTimeDuration",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_x500Name",
                "objectId": "is_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is x500Name.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_x500Name",
            "functionId": "is<x500Name>",
            "description": "Test arg returning boolean True if it is data type x500Name.  Use is_list_of_x500Name() instead to test for a list of x500Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "x500Name",
            "camelCaseFunctionLabel": "isX500Name",
            "brief": "Checks whether value is dataType x500Name",
            "afwCamelCaseFunctionLabel": "afwIsX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compile_hybrid",
                "objectId": "compile_hybrid",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "An unevaluated hybrid value ready for use by function evaluate() or a string containing the compiler listing."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "hybrid",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Hybrid to compile.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "listing",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If specified, a compiler listing is produced instead of an unevaluated hybrid value.\n\nThis parameter can be an integer between 0 and 10 of a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compile_hybrid",
            "functionId": "compile_hybrid",
            "description": "Compile a string containing adaptive hybrid syntax and return either an unevaluated hybrid adaptive value or a string containing the compiler listing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "compileHybrid",
            "brief": "Compile hybrid value",
            "afwCamelCaseFunctionLabel": "afwCompileHybrid"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_dayTimeDuration",
                "objectId": "at_least_one_member_of_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "description": "The first list.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "description": "The second list.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_dayTimeDuration",
            "functionId": "at_least_one_member_of<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Returns boolean true if at least one value in dayTimeDuration list1 is in dayTimeDuration list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "atLeastOneMemberOfDayTimeDuration",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_boolean",
                "objectId": "eqx_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_boolean",
            "functionId": "eqx<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Checks for boolean arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "eqxBoolean",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_anyURI",
                "objectId": "eq_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_anyURI",
            "functionId": "eq<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks for anyURI arg1 is equal to anyURI arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "eqAnyURI",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in",
                "objectId": "is_in",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "dnsName",
                "double",
                "hexBinary",
                "integer",
                "ipAddress",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in",
            "functionId": "is_in",
            "description": "Checks whether <dataType> value is in list of <dataType> list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "isIn",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsIn"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_boolean",
                "objectId": "ne_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_boolean",
            "functionId": "ne<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Checks for boolean arg1 is not equal to boolean arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "neBoolean",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_yearMonthDuration",
                "objectId": "set_equals_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_yearMonthDuration",
            "functionId": "set_equals<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Returns boolean true if yearMonthDuration list1 and yearMonthDuration list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "setEqualsYearMonthDuration",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_boolean",
                "objectId": "set_equals_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_boolean",
            "functionId": "set_equals<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Returns boolean true if boolean list1 and boolean list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "setEqualsBoolean",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/service_stop",
                "objectId": "service_stop",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveService_ value.",
                "description": "_AdaptiveService_ object for the service which will contain the current status of the service.  If there is an error, the status property value will be \"error\" and \"statusMessage\" contain an error message.",
                "dataTypeParameter": "_AdaptiveService_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "serviceId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The serviceId of the service to stop.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "service_stop",
            "functionId": "service_stop",
            "description": "Stop a service.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "serviceStop",
            "brief": "Stop service",
            "afwCamelCaseFunctionLabel": "afwServiceStop"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/contains_anyURI",
                "objectId": "contains_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "contains_anyURI",
            "functionId": "contains<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks whether anyURI value contains a anyURI and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 4,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "containsAnyURI",
            "brief": "Checks whether anyURI value includes a string",
            "afwCamelCaseFunctionLabel": "afwContainsAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_date",
                "objectId": "at_least_one_member_of_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "description": "The first list.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "description": "The second list.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_date",
            "functionId": "at_least_one_member_of<date>",
            "details": "The date:: prefix is optional.",
            "description": "Returns boolean true if at least one value in date list1 is in date list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "atLeastOneMemberOfDate",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_ipAddress",
                "objectId": "is_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is ipAddress.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_ipAddress",
            "functionId": "is<ipAddress>",
            "description": "Test arg returning boolean True if it is data type ipAddress.  Use is_list_of_ipAddress() instead to test for a list of ipAddress.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "ipAddress",
            "camelCaseFunctionLabel": "isIpAddress",
            "brief": "Checks whether value is dataType ipAddress",
            "afwCamelCaseFunctionLabel": "afwIsIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/match_x500Name",
                "objectId": "match_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "match_x500Name",
            "functionId": "match<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Returns true if arg1 matches some terminal sequence of RDNs from arg2 when compared using equal_x500Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 59,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "matchX500Name",
            "brief": "Checks if x500Name matches",
            "afwCamelCaseFunctionLabel": "afwMatchX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_base64Binary",
                "objectId": "is_in_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_base64Binary",
            "functionId": "is_in<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Checks whether base64Binary value is in list of base64Binary list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "isInBase64Binary",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/yearMonthDuration",
                "objectId": "yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a yearMonthDuration value.",
                "description": "Converted value",
                "dataType": "yearMonthDuration"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "yearMonthDuration",
            "functionId": "yearMonthDuration",
            "description": "Converts arg to data type yearMonthDuration returning yearMonthDuration result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "yearMonthDuration",
            "afwCamelCaseFunctionLabel": "afwYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_objectPath",
                "objectId": "is_objectPath",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is objectPath.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_objectPath",
            "functionId": "is<objectPath>",
            "description": "Test arg returning boolean True if it is data type objectPath.  Use is_list_of_objectPath() instead to test for a list of objectPath.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "objectPath",
            "camelCaseFunctionLabel": "isObjectPath",
            "brief": "Checks whether value is dataType objectPath",
            "afwCamelCaseFunctionLabel": "afwIsObjectPath"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/update_object_with_uri",
                "objectId": "update_object_with_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URI of object to update.  If a URI begins with a single slash ('/'), it is the local object path.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object containing properties to replace in existing object.  You can use object_modify instead to update properties of embedded objects and lists, as well as to modify individual values of the object.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_modify_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "update_object_with_uri",
            "functionId": "update_object_with_uri",
            "description": "Update an adaptive object with a given URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "updateObjectWithUri",
            "brief": "Update adaptive object with URI",
            "afwCamelCaseFunctionLabel": "afwUpdateObjectWithUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_date",
                "objectId": "nex_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_date",
            "functionId": "nex<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "nexDate",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/property_is_not_null",
                "objectId": "property_is_not_null",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if object has named property that is not null.",
                "dataType": "boolean"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object to get property from.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Name of property to check.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "property_is_not_null",
            "functionId": "property_is_not_null",
            "description": "Return true if the named property exists in an object and is not null.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "propertyIsNotNull",
            "brief": "Determine if a property exists in an object and is not null",
            "afwCamelCaseFunctionLabel": "afwPropertyIsNotNull"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/base64Binary",
                "objectId": "base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a base64Binary value.",
                "description": "Converted value",
                "dataType": "base64Binary"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "base64Binary",
            "functionId": "base64Binary",
            "description": "Converts arg to data type base64Binary returning base64Binary result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "base64Binary",
            "camelCaseFunctionLabel": "base64Binary",
            "afwCamelCaseFunctionLabel": "afwBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/le_double",
                "objectId": "le_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                }
            ],
            "op": "<=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "le_double",
            "functionId": "le<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 is less than or equal to double arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 34,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "leDouble",
            "brief": "Checks for less than or equal",
            "afwCamelCaseFunctionLabel": "afwLeDouble"
        },        
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_index_of_anyURI",
                "objectId": "regexp_index_of_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "The anyURI value to search.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "A regular expression to use for search.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_index_of_anyURI",
            "functionId": "regexp_index_of<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Search anyURI value for a regular expression and return index.  If not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 16,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "regexpIndexOfAnyURI",
            "brief": "Returns index of first match of regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpIndexOfAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/slice",
                "objectId": "slice",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "A list containing the selected values.  If all of the values are the same data type, the list will be a list of that data type.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "The list to slice.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "startIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the zero based starting index.  Use negative number to index from the end of the list.  If not specified, an index of 0 is assumed.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "endIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the zero based ending index.  If positive, this is one more than the index of the last value to include in the list.  If negative, the index is from the end of the list.  If not specified, the slice is from startIndex up to and including the end of the list.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "slice",
            "functionId": "slice",
            "description": "This function extracts a consecutive slice of values from a list.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "array",
            "camelCaseFunctionLabel": "slice",
            "brief": "Return a consecutive slice of values from a list",
            "afwCamelCaseFunctionLabel": "afwSlice"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract_yearMonthDuration_dateTime",
                "objectId": "subtract_yearMonthDuration_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract_yearMonthDuration_dateTime",
            "functionId": "subtract_yearMonthDuration<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Subtract yearMonthDuration arg2 from dateTime arg1 and return the dateTime result.",
            "deprecated": false,
            "dataTypeMethodNumber": 39,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "subtractYearMonthDurationDateTime",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtractYearMonthDurationDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_date",
                "objectId": "eq_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_date",
            "functionId": "eq<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 is equal to date arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "eqDate",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_yearMonthDuration",
                "objectId": "intersection_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of yearMonthDuration value.",
                "dataTypeParameter": "yearMonthDuration",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "description": "The first list.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "description": "The second list.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_yearMonthDuration",
            "functionId": "intersection<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Returns a list of yearMonthDuration with the values that are common to both list of yearMonthDuration list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "intersectionYearMonthDuration",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_yearMonthDuration",
                "objectId": "to_string_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "description": "A yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_yearMonthDuration",
            "functionId": "to_string<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Converts yearMonthDuration arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "toStringYearMonthDuration",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/substring_string",
                "objectId": "substring_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "endIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg3",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "substring_string",
            "functionId": "substring<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns the string substring of value beginning at zero-based position integer startIndex and ending at the position before integer endIndex.  Specify -1 in endIndex to return up to end of string.",
            "deprecated": false,
            "dataTypeMethodNumber": 25,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "substringString",
            "brief": "Extract a substring",
            "afwCamelCaseFunctionLabel": "afwSubstringString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_rfc822Name",
                "objectId": "union_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of rfc822Name value.",
                "dataTypeParameter": "rfc822Name",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of rfc822Name value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_rfc822Name",
            "functionId": "union<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Returns a list of rfc822Name contains all of the unique values in two or more list of rfc822Name args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "unionRfc822Name",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_entries",
                "objectId": "add_entries",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "Target list is modified."
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "The modified target list.",
                "dataType": "array"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "target",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "Target list.  This list must not be immutable.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "source",
                    "minArgs": 1,
                    "details": "This parameter is a list value that can be specified 1 or more times.",
                    "description": "Source list(s).",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_entries",
            "functionId": "add_entries",
            "description": "Add the entries of one or more lists to another.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "array",
            "camelCaseFunctionLabel": "addEntries",
            "brief": "Add entries of one or more lists to another",
            "afwCamelCaseFunctionLabel": "afwAddEntries"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_dateTime",
                "objectId": "set_equals_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dateTime value.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_dateTime",
            "functionId": "set_equals<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Returns boolean true if dateTime list1 and dateTime list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "setEqualsDateTime",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/split_anyURI",
                "objectId": "split_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "An list of strings.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "The anyURI value to split.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "separator",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "The separator to use.  If this is an empty string or separator is not specified, the value is split between characters.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum number of splits.  Any remaining part of value is ignored.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "split_anyURI",
            "functionId": "split<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Split anyURI value into an list of strings using a separator.",
            "deprecated": false,
            "dataTypeMethodNumber": 22,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "splitAnyURI",
            "brief": "Split at a separator",
            "afwCamelCaseFunctionLabel": "afwSplitAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/max_date",
                "objectId": "max_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "dataType": "date"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a date value that can be specified 1 or more times.",
                    "dataType": "date"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "max_date",
            "functionId": "max<date>",
            "details": "The date:: prefix is optional.",
            "description": "Return the date arg that is greater than or equal to the others..\n\nIf a date value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 36,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "maxDate",
            "brief": "Maximum value",
            "afwCamelCaseFunctionLabel": "afwMaxDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/random_digits",
                "objectId": "random_digits",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "numberOfDigits",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "The number (1-18) of digits to generate.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "random_digits",
            "functionId": "random_digits",
            "description": "Generate a string containing a specified number of random decimal digits.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "random",
            "camelCaseFunctionLabel": "randomDigits",
            "brief": "Generate random decimal digits",
            "afwCamelCaseFunctionLabel": "afwRandomDigits"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_ipAddress",
                "objectId": "bag_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of ipAddress value.",
                "dataTypeParameter": "ipAddress",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of ipAddress value that can be specified 0 or more times.",
                    "dataTypeParameter": "ipAddress",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_ipAddress",
            "functionId": "bag<ipAddress>",
            "details": "The ipAddress:: prefix is optional.",
            "description": "Takes any number of ipAddress args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "ipAddress",
            "category": "ipAddress",
            "camelCaseFunctionLabel": "bagIpAddress",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_expression",
                "objectId": "to_string_expression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an expression value.",
                    "description": "A expression value.",
                    "dataType": "script"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_expression",
            "functionId": "to_string<expression>",
            "details": "The expression:: prefix is optional.",
            "description": "Converts expression arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "script",
            "category": "expression",
            "camelCaseFunctionLabel": "toStringExpression",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_yearMonthDuration",
                "objectId": "ne_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_yearMonthDuration",
            "functionId": "ne<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Checks for yearMonthDuration arg1 is not equal to yearMonthDuration arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "neYearMonthDuration",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/pow_double",
                "objectId": "pow_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "description": "Base raised to the power exponent.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "base",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "description": "Base value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "exponent",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "description": "Exponent value.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "pow_double",
            "functionId": "pow<double>",
            "details": "The double:: prefix is optional.",
            "description": "This returns the value of base raised to a power.",
            "deprecated": false,
            "dataTypeMethodNumber": 47,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "powDouble",
            "brief": "Base raised to a power",
            "afwCamelCaseFunctionLabel": "afwPowDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/password",
                "objectId": "password",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a password value.",
                "description": "Converted value",
                "dataType": "password"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "password",
            "functionId": "password",
            "description": "Converts arg to data type password returning password result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "password",
            "camelCaseFunctionLabel": "password",
            "afwCamelCaseFunctionLabel": "afwPassword"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_double",
                "objectId": "at_least_one_member_of_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "description": "The first list.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "description": "The second list.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_double",
            "functionId": "at_least_one_member_of<double>",
            "details": "The double:: prefix is optional.",
            "description": "Returns boolean true if at least one value in double list1 is in double list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "atLeastOneMemberOfDouble",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/gt_double",
                "objectId": "gt_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": ">",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "gt_double",
            "functionId": "gt<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 is greater than double arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 33,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "gtDouble",
            "brief": "Checks for greater than",
            "afwCamelCaseFunctionLabel": "afwGtDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_null",
                "objectId": "is_null",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is null.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_null",
            "functionId": "is<null>",
            "description": "Test arg returning boolean True if it is data type null.  Use is_list_of_null() instead to test for a list of null.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "null",
            "camelCaseFunctionLabel": "isNull",
            "brief": "Checks whether value is dataType null",
            "afwCamelCaseFunctionLabel": "afwIsNull"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of",
                "objectId": "at_least_one_member_of",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "description": "The first list.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "description": "The second list.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of",
            "functionId": "at_least_one_member_of",
            "description": "Returns boolean true if at least one value in <dataType> list1 is in <dataType> list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "atLeastOneMemberOf",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/null",
                "objectId": "null",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "description": "Converted value",
                "dataType": "null"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "null",
            "functionId": "null",
            "description": "Converts arg to data type null returning null result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "null",
            "camelCaseFunctionLabel": "null",
            "afwCamelCaseFunctionLabel": "afwNull"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/map",
                "objectId": "map",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "functor",
                    "minArgs": -1,
                    "details": "This parameter is a function ()(...) value.",
                    "dataTypeParameter": "()(...)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "These are the parameters passed to functor with the exception that the first list is passed one value at a time.  At least one list is required.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "map",
            "functionId": "map",
            "description": "This function creates a list of the results of calling functor with each value of the first list in args",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "map",
            "brief": "Maps values of a list",
            "afwCamelCaseFunctionLabel": "afwMap"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/substring",
                "objectId": "substring",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "endIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg3",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "substring",
            "functionId": "substring",
            "description": "Returns the <dataType> sub<dataType> of value beginning at zero-based position integer startIndex and ending at the position before integer endIndex.  Specify -1 in endIndex to return up to end of <dataType>.",
            "deprecated": false,
            "dataTypeMethodNumber": 25,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "substring",
            "brief": "Extract a substring",
            "afwCamelCaseFunctionLabel": "afwSubstring"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/index_of_anyURI",
                "objectId": "index_of_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "The anyURI value to search.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Substring to search for.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "startIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "Optional start index for search if different than start of string.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "index_of_anyURI",
            "functionId": "index_of<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns the zero-based index into anyURI value of subString.  If subString is not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 8,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "indexOfAnyURI",
            "brief": "Returns index of first occurrence",
            "afwCamelCaseFunctionLabel": "afwIndexOfAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size",
                "objectId": "bag_size",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "dnsName",
                "double",
                "hexBinary",
                "integer",
                "ipAddress",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size",
            "functionId": "bag_size",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "bagSize",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSize"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_double",
                "objectId": "bag_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of double value.",
                "dataTypeParameter": "double",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of double value that can be specified 0 or more times.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_double",
            "functionId": "bag<double>",
            "details": "The double:: prefix is optional.",
            "description": "Takes any number of double args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "bagDouble",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/max",
                "objectId": "max",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime",
                "double",
                "integer",
                "string",
                "time"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a <dataType> value that can be specified 1 or more times."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "max",
            "functionId": "max",
            "description": "Return the <dataType> arg that is greater than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 36,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "max",
            "brief": "Maximum value",
            "afwCamelCaseFunctionLabel": "afwMax"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/function",
                "objectId": "function",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a function value.",
                "description": "Converted value",
                "dataType": "function"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "function",
            "functionId": "function",
            "description": "Converts arg to data type function returning function result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "function",
            "camelCaseFunctionLabel": "function",
            "afwCamelCaseFunctionLabel": "afwFunction"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/for",
                "objectId": "for",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 6,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The last value evaluated in body or null if condition evaluates to false the first time."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "initial",
                    "minArgs": -1,
                    "details": "This parameter is a list value that is optional.",
                    "description": "This is a list of values to evaluate before the loop starts. The values will normally be a call to the \"assign\" function.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "condition",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "While this condition is true, the loop will continue.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "increment",
                    "minArgs": -1,
                    "details": "This parameter is a list value that is optional.",
                    "description": "This is a list of values to evaluate after each iteration of the loop.  The values will normally be a call to the \"assign\" function.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "body",
                    "minArgs": -1,
                    "details": "This parameter is a list value that is optional.",
                    "description": "This is a list of values that are evaluated for each iteration of the loop.  Each value in body is evaluated in order until the end of the list or until a \"break\", \"continue\", \"return\" or \"throw\" function is encountered.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "for",
            "functionId": "for",
            "description": "This creates a new structured block with a new nested variable scope.\n\nThis function loops while condition is true.  If the condition is false for the first iteration, the loop returns a null value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "for",
            "brief": "Evaluate a list of values while a condition is true with a list of initial and increment values",
            "afwCamelCaseFunctionLabel": "afwFor"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/flag_get_active_defaults",
                "objectId": "flag_get_active_defaults",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of string value.",
                "description": "This is a list of the flagId of flags that are set by default when a scope (request) is created.",
                "dataTypeParameter": "string",
                "dataType": "array"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "flag_get_active_defaults",
            "functionId": "flag_get_active_defaults",
            "description": "Get a list of the flagId of flags that are set by default when a scope (request) is created.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "flagGetActiveDefaults",
            "brief": "Get a list of default active flags",
            "afwCamelCaseFunctionLabel": "afwFlagGetActiveDefaults"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx",
                "objectId": "eqx",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx",
            "functionId": "eqx",
            "description": "Checks for <dataType> arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "eqx",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqx"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/flag_get_active",
                "objectId": "flag_get_active",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of string value.",
                "description": "This is a list of the flagId of flags that are set in the current scope (request).",
                "dataTypeParameter": "string",
                "dataType": "array"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "flag_get_active",
            "functionId": "flag_get_active",
            "description": "Get a list of of the flagId of flags that are set in the current scope (request).",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "flagGetActive",
            "brief": "Get a list of active flags",
            "afwCamelCaseFunctionLabel": "afwFlagGetActive"
        },        
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals",
                "objectId": "set_equals",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals",
            "functionId": "set_equals",
            "description": "Returns boolean true if <dataType> list1 and <dataType> list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "setEquals",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEquals"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_time",
                "objectId": "union_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of time value.",
                "dataTypeParameter": "time",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of time value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_time",
            "functionId": "union<time>",
            "details": "The time:: prefix is optional.",
            "description": "Returns a list of time contains all of the unique values in two or more list of time args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "unionTime",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_boolean",
                "objectId": "to_string_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "description": "A boolean value.",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_boolean",
            "functionId": "to_string<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Converts boolean arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "toStringBoolean",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_date",
                "objectId": "is_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is date.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_date",
            "functionId": "is<date>",
            "description": "Test arg returning boolean True if it is data type date.  Use is_list_of_date() instead to test for a list of date.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "date",
            "camelCaseFunctionLabel": "isDate",
            "brief": "Checks whether value is dataType date",
            "afwCamelCaseFunctionLabel": "afwIsDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_boolean",
                "objectId": "is_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is boolean.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_boolean",
            "functionId": "is<boolean>",
            "description": "Test arg returning boolean True if it is data type boolean.  Use is_list_of_boolean() instead to test for a list of boolean.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "boolean",
            "camelCaseFunctionLabel": "isBoolean",
            "brief": "Checks whether value is dataType boolean",
            "afwCamelCaseFunctionLabel": "afwIsBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_time",
                "objectId": "eqx_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_time",
            "functionId": "eqx<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "eqxTime",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/date",
                "objectId": "date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "description": "Converted value",
                "dataType": "date"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "date",
            "functionId": "date",
            "description": "Converts arg to data type date returning date result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "date",
            "camelCaseFunctionLabel": "date",
            "afwCamelCaseFunctionLabel": "afwDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_dnsName",
                "objectId": "to_string_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a dnsName value.",
                    "description": "A dnsName value.",
                    "dataType": "dnsName"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_dnsName",
            "functionId": "to_string<dnsName>",
            "details": "The dnsName:: prefix is optional.",
            "description": "Converts dnsName arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "dnsName",
            "category": "dnsName",
            "camelCaseFunctionLabel": "toStringDnsName",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/last_index_of",
                "objectId": "last_index_of",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to search."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Substring to search for.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "startIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "Optional start index for search if different than start of string.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "last_index_of",
            "functionId": "last_index_of",
            "description": "Returns the zero-based index into <dataType> value of the last occurrence of a subString.  If subString is not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 11,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "lastIndexOf",
            "brief": "Returns index of last occurrence",
            "afwCamelCaseFunctionLabel": "afwLastIndexOf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/journal_get_first",
                "objectId": "journal_get_first",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Response object.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "journal_get_first",
            "functionId": "journal_get_first",
            "description": "Get first journal entry.\n\nThis option will set response properties \"entry\" and \"cursor\" if there is a first entry to return.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "journal",
            "camelCaseFunctionLabel": "journalGetFirst",
            "brief": "Get first journal entry",
            "afwCamelCaseFunctionLabel": "afwJournalGetFirst"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_dnsName",
                "objectId": "is_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is dnsName.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_dnsName",
            "functionId": "is<dnsName>",
            "description": "Test arg returning boolean True if it is data type dnsName.  Use is_list_of_dnsName() instead to test for a list of dnsName.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "dnsName",
            "camelCaseFunctionLabel": "isDnsName",
            "brief": "Checks whether value is dataType dnsName",
            "afwCamelCaseFunctionLabel": "afwIsDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_integer",
                "objectId": "intersection_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of integer value.",
                "dataTypeParameter": "integer",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "description": "The first list.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "description": "The second list.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_integer",
            "functionId": "intersection<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Returns a list of integer with the values that are common to both list of integer list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "intersectionInteger",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_time",
                "objectId": "subset_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "description": "The first list.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "description": "The second list.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_time",
            "functionId": "subset<time>",
            "details": "The time:: prefix is optional.",
            "description": "Returns boolean true if the unique values in time list1 are all in time list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "subsetTime",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/all_of_all",
                "objectId": "all_of_all",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(value1, value2) value.",
                    "description": "The predicate is passed two parameters, the first is a value from list1 and the second is a value from list2.",
                    "dataTypeParameter": "(boolean)(value1, value2)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "all_of_all",
            "functionId": "all_of_all",
            "description": "Returns true if the result of calling predicate with all of the combination of values from list1 and list2 returns true.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "allOfAll",
            "brief": "All combinations true",
            "afwCamelCaseFunctionLabel": "afwAllOfAll"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_integer",
                "objectId": "at_least_one_member_of_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "description": "The first list.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "description": "The second list.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_integer",
            "functionId": "at_least_one_member_of<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Returns boolean true if at least one value in integer list1 is in integer list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "atLeastOneMemberOfInteger",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compile_relaxed_json",
                "objectId": "compile_relaxed_json",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "An unevaluated relaxed JSON value ready for use by function evaluate() or a string containing the compiler listing."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "json",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Adaptive relaxed JSON syntax string to compile.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "listing",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If specified, a compiler listing is produced instead of an unevaluated relaxed JSON value.\n\nThis parameter can be an integer between 0 and 10 of a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compile_relaxed_json",
            "functionId": "compile_relaxed_json",
            "description": "Compile an adaptive relaxed JSON syntax string and return an adaptive value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "compileRelaxedJson",
            "brief": "Compile relaxed JSON",
            "afwCamelCaseFunctionLabel": "afwCompileRelaxedJson"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/apply_object_options",
                "objectId": "apply_object_options",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "This is an object with object options applied.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object used to produce result.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveObjectOptions_ value that is optional.",
                    "description": "Object options.  See /afw/_AdaptiveObjectType_/_AdaptiveObjectOptions_ for more information.",
                    "dataTypeParameter": "_AdaptiveObjectOptions_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "apply_object_options",
            "functionId": "apply_object_options",
            "description": "This will return an object with the specified object options applied.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "applyObjectOptions",
            "brief": "Apply object options",
            "afwCamelCaseFunctionLabel": "afwApplyObjectOptions"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract",
                "objectId": "subtract",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double",
                "integer"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "-",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract",
            "functionId": "subtract",
            "description": "Subtract <dataType> arg2 from <dataType> arg1 and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 49,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "subtract",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtract"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/hexBinary",
                "objectId": "hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a hexBinary value.",
                "description": "Converted value",
                "dataType": "hexBinary"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "hexBinary",
            "functionId": "hexBinary",
            "description": "Converts arg to data type hexBinary returning hexBinary result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "hexBinary",
            "camelCaseFunctionLabel": "hexBinary",
            "afwCamelCaseFunctionLabel": "afwHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_string",
                "objectId": "eq_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_string",
            "functionId": "eq<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is equal to string arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "eqString",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_dayTimeDuration",
                "objectId": "is_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is dayTimeDuration.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_dayTimeDuration",
            "functionId": "is<dayTimeDuration>",
            "description": "Test arg returning boolean True if it is data type dayTimeDuration.  Use is_list_of_dayTimeDuration() instead to test for a list of dayTimeDuration.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "isDayTimeDuration",
            "brief": "Checks whether value is dataType dayTimeDuration",
            "afwCamelCaseFunctionLabel": "afwIsDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_rfc822Name",
                "objectId": "to_string_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "description": "A rfc822Name value.",
                    "dataType": "rfc822Name"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_rfc822Name",
            "functionId": "to_string<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Converts rfc822Name arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "toStringRfc822Name",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/min_integer",
                "objectId": "min_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is an integer value that can be specified 1 or more times.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "min_integer",
            "functionId": "min<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Return the integer arg that is less than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 37,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "minInteger",
            "brief": "Minimum value",
            "afwCamelCaseFunctionLabel": "afwMinInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_double",
                "objectId": "intersection_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of double value.",
                "dataTypeParameter": "double",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "description": "The first list.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "description": "The second list.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_double",
            "functionId": "intersection<double>",
            "details": "The double:: prefix is optional.",
            "description": "Returns a list of double with the values that are common to both list of double list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "intersectionDouble",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_base64Binary",
                "objectId": "bag_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of base64Binary value.",
                "dataTypeParameter": "base64Binary",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of base64Binary value that can be specified 0 or more times.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_base64Binary",
            "functionId": "bag<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Takes any number of base64Binary args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "bagBase64Binary",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/contains_string",
                "objectId": "contains_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "contains_string",
            "functionId": "contains<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks whether string value contains a string and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 4,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "containsString",
            "brief": "Checks whether string value includes a string",
            "afwCamelCaseFunctionLabel": "afwContainsString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/xpathExpression",
                "objectId": "xpathExpression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a xpathExpression value.",
                "description": "Converted value",
                "dataType": "xpathExpression"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "xpathExpression",
            "functionId": "xpathExpression",
            "description": "Converts arg to data type xpathExpression returning xpathExpression result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "xpathExpression",
            "camelCaseFunctionLabel": "xpathExpression",
            "afwCamelCaseFunctionLabel": "afwXpathExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compare_uri",
                "objectId": "compare_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "Result of comparison.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "First URI for compare.  This URI can not contain an asterisk (\"*\")",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Second URI for compare.  This URI can contain asterisk (\"*\") for substitution if isValuePath is true and currentPath2 is specified.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "isValuePath",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "The URIs are adaptive value paths.  If one of the URIs begins with a single slash \"/\", both must, and each URI will be parsed as an adaptive value path (example: /adaptorId/objectType/objectId.propertyNames).",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "currentPath",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "If isValuePath is true, this is the current path that is used to resolve a relative path in the URIs.  If isValuePath is not true, this parameter is ignored.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compare_uri",
            "functionId": "compare_uri",
            "description": "Compare two URIs.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "compareUri",
            "brief": "Compare URIs",
            "afwCamelCaseFunctionLabel": "afwCompareUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_dateTime",
                "objectId": "nex_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_dateTime",
            "functionId": "nex<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "nexDateTime",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/max_string",
                "objectId": "max_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a string value that can be specified 1 or more times.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "max_string",
            "functionId": "max<string>",
            "details": "The string:: prefix is optional.",
            "description": "Return the string arg that is greater than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 36,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "maxString",
            "brief": "Maximum value",
            "afwCamelCaseFunctionLabel": "afwMaxString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ends_with_anyURI",
                "objectId": "ends_with_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ends_with_anyURI",
            "functionId": "ends_with<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks whether anyURI value ends with a anyURI and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 5,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "endsWithAnyURI",
            "brief": "Checks whether value ends with a string",
            "afwCamelCaseFunctionLabel": "afwEndsWithAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/floor_double",
                "objectId": "floor_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "floor_double",
            "functionId": "floor<double>",
            "details": "The double:: prefix is optional.",
            "description": "Determine the largest integer that is smaller then or equal to the double arg and return the double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 44,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "floorDouble",
            "brief": "Round downwards to nearest integer",
            "afwCamelCaseFunctionLabel": "afwFloorDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compile_script",
                "objectId": "compile_script",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "An unevaluated script value ready for use by function evaluate() or a string containing the compiler listing."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "script",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The script to compile",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "listing",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If specified, a compiler listing is produced instead of an unevaluated script value.\n\nThis parameter can be an integer between 0 and 10 of a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compile_script",
            "functionId": "compile_script",
            "description": "Compile a string containing adaptive script syntax and return either an unevaluated script adaptive value or a string containing the compiler listing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "compileScript",
            "brief": "Compile adaptive script",
            "afwCamelCaseFunctionLabel": "afwCompileScript"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_rfc822Name",
                "objectId": "nex_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_rfc822Name",
            "functionId": "nex<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Checks for rfc822Name arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "nexRfc822Name",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_hexBinary",
                "objectId": "to_string_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "description": "A hexBinary value.",
                    "dataType": "hexBinary"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_hexBinary",
            "functionId": "to_string<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Converts hexBinary arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "toStringHexBinary",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_integer",
                "objectId": "subset_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "description": "The first list.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "description": "The second list.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_integer",
            "functionId": "subset<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Returns boolean true if the unique values in integer list1 are all in integer list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "subsetInteger",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract_yearMonthDuration",
                "objectId": "subtract_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract_yearMonthDuration",
            "functionId": "subtract_yearMonthDuration",
            "description": "Subtract yearMonthDuration arg2 from <dataType> arg1 and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 39,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "subtractYearMonthDuration",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtractYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/break",
                "objectId": "break",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 2,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "This function returns from the body of a loop with the last evaluated value."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "The value to evaluate that the enclosing loop will return.  If not specified, the last evaluated value or a null value will be returned."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "break",
            "functionId": "break",
            "description": "This is a special function that can be called to break out of the body of a loop.  If called outside of a loop body, an error is thrown.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "break",
            "brief": "Break out of a block",
            "afwCamelCaseFunctionLabel": "afwBreak"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/const",
                "objectId": "const",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 3,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The value assigned."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The name of one or more constants to defined in the current block.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "This is the value of the constant(s)."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "type",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveValueMeta_ value that is optional.",
                    "description": "The type of the constant(s).",
                    "dataTypeParameter": "_AdaptiveValueMeta_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "const",
            "functionId": "const",
            "description": "Define one or more statically scoped constants local to the current script block with a permanent value.  These constants can be accessed from the current block and inner blocks, but can not be assigned a different value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "const",
            "brief": "Define one or more constants in the current block",
            "afwCamelCaseFunctionLabel": "afwConst"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/parse_uri",
                "objectId": "parse_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveParsedURI_ value.",
                "description": "Object with results of parse.",
                "dataTypeParameter": "_AdaptiveParsedURI_",
                "dataType": "object"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "URI to parse",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "isValuePath",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "The URI is an adaptive value path.  If the path begins with a single slash \"/\", the URI will be parsed as an adaptive value path (example: /adaptorId/objectType/objectId.propertyNames)",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "currentPath",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "If isValuePath is true, this is the current path that is used to resolve relative paths.  If isValuePath is not true, this parameter is ignored.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "parse_uri",
            "functionId": "parse_uri",
            "description": "Parse a URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "parseUri",
            "brief": "Parse URI",
            "afwCamelCaseFunctionLabel": "afwParseUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_index_of_string",
                "objectId": "regexp_index_of_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string value to search.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "A regular expression to use for search.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_index_of_string",
            "functionId": "regexp_index_of<string>",
            "details": "The string:: prefix is optional.",
            "description": "Search string value for a regular expression and return index.  If not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 16,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "regexpIndexOfString",
            "brief": "Returns index of first match of regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpIndexOfString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/normalize_to_lower_case_string",
                "objectId": "normalize_to_lower_case_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "normalize_to_lower_case_string",
            "functionId": "normalize_to_lower_case<string>",
            "details": "The string:: prefix is optional.",
            "description": "Normalize string arg to lower case and returns string result.",
            "deprecated": false,
            "dataTypeMethodNumber": 61,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "normalizeToLowerCaseString",
            "brief": "Converts to lower case",
            "afwCamelCaseFunctionLabel": "afwNormalizeToLowerCaseString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_anyURI",
                "objectId": "at_least_one_member_of_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "description": "The first list.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "description": "The second list.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_anyURI",
            "functionId": "at_least_one_member_of<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns boolean true if at least one value in anyURI list1 is in anyURI list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "atLeastOneMemberOfAnyURI",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_yearMonthDuration_dateTime",
                "objectId": "add_yearMonthDuration_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_yearMonthDuration_dateTime",
            "functionId": "add_yearMonthDuration<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Add dateTime arg1 to yearMonthDuration arg2 and return the dateTime result.",
            "deprecated": false,
            "dataTypeMethodNumber": 31,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "addYearMonthDurationDateTime",
            "brief": "Add duration",
            "afwCamelCaseFunctionLabel": "afwAddYearMonthDurationDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_properties",
                "objectId": "add_properties",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "Target object is modified."
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "The modified target object.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "target",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Target object.  This object must not be immutable.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "source",
                    "minArgs": 1,
                    "details": "This parameter is an object value that can be specified 1 or more times.",
                    "description": "Source object(s).",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_properties",
            "functionId": "add_properties",
            "description": "Add the properties of one object to another replacing existing properties by the same name.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "addProperties",
            "brief": "Add properties of one object to another",
            "afwCamelCaseFunctionLabel": "afwAddProperties"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_dateTime",
                "objectId": "union_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of dateTime value.",
                "dataTypeParameter": "dateTime",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of dateTime value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "dateTime",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_dateTime",
            "functionId": "union<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Returns a list of dateTime contains all of the unique values in two or more list of dateTime args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "unionDateTime",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_rfc822Name",
                "objectId": "to_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a rfc822Name value.",
                "dataType": "rfc822Name"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_rfc822Name",
            "functionId": "to_rfc822Name",
            "description": "Converts <dataType> arg to rfc822Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 69,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toRfc822Name",
            "brief": "Converts string to rfc822Name",
            "afwCamelCaseFunctionLabel": "afwToRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/test_template",
                "objectId": "test_template",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Test results.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "id",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "description",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Description of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "template",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Template to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expected",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Expected evaluated result."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "test_template",
            "functionId": "test_template",
            "description": "Compile and evaluate an adaptive template and compare the results to an expected value.  Return object with the test's results.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "testTemplate",
            "brief": "Test template",
            "afwCamelCaseFunctionLabel": "afwTestTemplate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_anyURI",
                "objectId": "bag_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of anyURI value.",
                "dataTypeParameter": "anyURI",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of anyURI value that can be specified 0 or more times.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_anyURI",
            "functionId": "bag<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Takes any number of anyURI args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "bagAnyURI",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/split_string",
                "objectId": "split_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "An list of strings.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string value to split.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "separator",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "The separator to use.  If this is an empty string or separator is not specified, the value is split between characters.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum number of splits.  Any remaining part of value is ignored.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "split_string",
            "functionId": "split<string>",
            "details": "The string:: prefix is optional.",
            "description": "Split string value into an list of strings using a separator.",
            "deprecated": false,
            "dataTypeMethodNumber": 22,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "splitString",
            "brief": "Split at a separator",
            "afwCamelCaseFunctionLabel": "afwSplitString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/floor",
                "objectId": "floor",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "floor",
            "functionId": "floor",
            "description": "Determine the largest integer that is smaller then or equal to the <dataType> arg and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 44,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "floor",
            "brief": "Round downwards to nearest integer",
            "afwCamelCaseFunctionLabel": "afwFloor"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_x500Name",
                "objectId": "eq_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_x500Name",
            "functionId": "eq<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Checks for x500Name arg1 is equal to x500Name arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "eqX500Name",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/flag_set",
                "objectId": "flag_set",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "flagId",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "List of flagId of flags to set or unset.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "setTo",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "Specify true to set and false to unset.  If not specified, flags are set.",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "flag_set",
            "functionId": "flag_set",
            "description": "Set or unset one or more active scope (request) flags.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "flagSet",
            "brief": "Set or unset active scope flags",
            "afwCamelCaseFunctionLabel": "afwFlagSet"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/curl_version_info",
                "objectId": "curl_version_info",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Returns an object describing the cURL version information.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "curl_version_info",
            "functionId": "curl_version_info",
            "description": "Returns run-time libcurl version info.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "curl",
            "camelCaseFunctionLabel": "curlVersionInfo",
            "afwCamelCaseFunctionLabel": "afwCurlVersionInfo"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/print_lines",
                "objectId": "print_lines",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "Values written"
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is an untyped value that can be specified 0 or more times.",
                    "description": "Values to print."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "print_lines",
            "functionId": "print_lines",
            "description": "Evaluate and convert each argument to String then print each List entry, Bag entry, or Single value on a separate line.  An undefined value is represented by '<undefined>'.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "printLines",
            "brief": "Print line",
            "afwCamelCaseFunctionLabel": "afwPrintLines"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_time",
                "objectId": "to_string_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "description": "A time value.",
                    "dataType": "time"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_time",
            "functionId": "to_string<time>",
            "details": "The time:: prefix is optional.",
            "description": "Converts time arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "toStringTime",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/gt_integer",
                "objectId": "gt_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": ">",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "gt_integer",
            "functionId": "gt<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 is greater than integer arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 33,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "gtInteger",
            "brief": "Checks for greater than",
            "afwCamelCaseFunctionLabel": "afwGtInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/journal_get_next_for_consumer",
                "objectId": "journal_get_next_for_consumer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Response object.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "consumerId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The consumerId property value of the associated _AdaptiveProvisioningPeer_ object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "The maximum number of entries that will be scanned for an entry where the consumerFilter expression in the associated _AdaptiveProvisioningPeer_ object evaluates to true.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "journal_get_next_for_consumer",
            "functionId": "journal_get_next_for_consumer",
            "description": "Get the next journal entry for a consumer referenced by the consumer_id parameter.  The entry_cursor parameter is ignored. The limit parameter specifies the maximum number of entries to scan for an applicable entry for consumer before returning.\n\n This option will set response properties \"entry\" and \"entryCursor\" if an applicable entry is retrieved.  Property \"reissue\" will be set as described below.\n\nThe properties of the _AdaptiveProvisioningPeer_ object associated with the consumer_id are used in the following way:\n\nThe consumerFilter expression is used to determine if an entry is applicable.\n\nIf consumeCursor property exists, return that entry at that cursor again immediately with a \"reissue\" property added and set to true.\n\nJournal entries are scanned beginning at the entry at the cursor in the advanceCursor property.  If the advanceCursor property is not present, the scan begins after the cursor in currentCursor.  If neither are present, the scan begins at the start of the journal.\n\nIf an applicable entry is found, properties consumeStart and consumeCursor are set, advanceCursor is removed, and the entry is returned.  Method mark_entry_consumed() will remove these properties.\n\nIf no applicable entry is found, advanceCursor is set to the last entry scanned.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "journal",
            "camelCaseFunctionLabel": "journalGetNextForConsumer",
            "brief": "Get next journal entry for consumer",
            "afwCamelCaseFunctionLabel": "afwJournalGetNextForConsumer"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_ipAddress",
                "objectId": "is_in_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an ipAddress value.",
                    "dataType": "ipAddress"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of ipAddress value.",
                    "dataTypeParameter": "ipAddress",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_ipAddress",
            "functionId": "is_in<ipAddress>",
            "details": "The ipAddress:: prefix is optional.",
            "description": "Checks whether ipAddress value is in list of ipAddress list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "ipAddress",
            "category": "ipAddress",
            "camelCaseFunctionLabel": "isInIpAddress",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_double",
                "objectId": "subset_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "description": "The first list.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "description": "The second list.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_double",
            "functionId": "subset<double>",
            "details": "The double:: prefix is optional.",
            "description": "Returns boolean true if the unique values in double list1 are all in double list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "subsetDouble",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_date",
                "objectId": "intersection_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of date value.",
                "dataTypeParameter": "date",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "description": "The first list.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "description": "The second list.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_date",
            "functionId": "intersection<date>",
            "details": "The date:: prefix is optional.",
            "description": "Returns a list of date with the values that are common to both list of date list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "intersectionDate",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/all_of_any",
                "objectId": "all_of_any",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(value1, value2) value.",
                    "description": "The predicate is passed two parameters, the first is a value from list1 and the second is a value from list2.",
                    "dataTypeParameter": "(boolean)(value1, value2)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "all_of_any",
            "functionId": "all_of_any",
            "description": "This function returns true if the result of calling predicate with all of the combination of values from list1 and any of the values of list2 returns true.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "allOfAny",
            "brief": "Combinations of all in list1 and any in list2 true",
            "afwCamelCaseFunctionLabel": "afwAllOfAny"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/divide",
                "objectId": "divide",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double",
                "integer"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "dividend",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "divisor",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "/",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "divide",
            "functionId": "divide",
            "description": "Divide <dataType> dividend by <dataType> divisor and return the <dataType> quotient.",
            "deprecated": false,
            "dataTypeMethodNumber": 43,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "divide",
            "brief": "Divide numbers",
            "afwCamelCaseFunctionLabel": "afwDivide"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/update_object",
                "objectId": "update_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor containing object to update.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of object to update.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of object to update.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object containing properties to replace in existing object.  You can use object_modify instead to update properties of embedded objects and lists, as well as to modify individual values of the object.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_modify_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "update_object",
            "functionId": "update_object",
            "description": "Update an adaptive object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "updateObject",
            "brief": "Update adaptive object",
            "afwCamelCaseFunctionLabel": "afwUpdateObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_dayTimeDuration",
                "objectId": "nex_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_dayTimeDuration",
            "functionId": "nex<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Checks for dayTimeDuration arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "nexDayTimeDuration",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_base64Binary",
                "objectId": "eq_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_base64Binary",
            "functionId": "eq<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Checks for base64Binary arg1 is equal to base64Binary arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "eqBase64Binary",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/index_of_string",
                "objectId": "index_of_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string value to search.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Substring to search for.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "startIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "Optional start index for search if different than start of string.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "index_of_string",
            "functionId": "index_of<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns the zero-based index into string value of subString.  If subString is not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 8,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "indexOfString",
            "brief": "Returns index of first occurrence",
            "afwCamelCaseFunctionLabel": "afwIndexOfString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_boolean",
                "objectId": "to_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_boolean",
            "functionId": "to_boolean",
            "description": "Converts <dataType> arg to boolean.",
            "deprecated": false,
            "dataTypeMethodNumber": 63,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toBoolean",
            "brief": "Converts string to boolean",
            "afwCamelCaseFunctionLabel": "afwToBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/in_range",
                "objectId": "in_range",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "time"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "time",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "startTime",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "endTime",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "in_range",
            "functionId": "in_range",
            "description": "Checks if <dataType> is between startTime and endTime, inclusive.  Regardless of endTime value, it is always considered to be equal to, but less than 24 hours greater than startTime.  If no <dataType> zone is specified for <dataType>, the default <dataType> zone is used.  If no <dataType> zone is specified for startTime or endTime, the <dataType> zone of <dataType> is used.",
            "deprecated": false,
            "dataTypeMethodNumber": 58,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "inRange",
            "brief": "Checks if time in range",
            "afwCamelCaseFunctionLabel": "afwInRange"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/variable_exists",
                "objectId": "variable_exists",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if variable exists.",
                "dataType": "boolean"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Name of variable to check.  The name can optionally be preceded with a qualifier followed by \"::\".",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "variable_exists",
            "functionId": "variable_exists",
            "description": "Return the true if the named variable exists.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "variableExists",
            "brief": "Determine if a variable exists",
            "afwCamelCaseFunctionLabel": "afwVariableExists"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_double",
                "objectId": "nex_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_double",
            "functionId": "nex<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "nexDouble",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/meta",
                "objectId": "meta",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "An object containing the meta information for the adaptive value.  The objectType of this object is normally _AdaptiveValueMeta_ or one of its descendents.",
                "dataType": "object"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "This is the adaptive value whose meta object is to be returned."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "meta",
            "functionId": "meta",
            "description": "This function returns an object containing meta information for an adaptive value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "value",
            "camelCaseFunctionLabel": "meta",
            "brief": "Return the meta object about an adaptive value",
            "afwCamelCaseFunctionLabel": "afwMeta"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_dnsName",
                "objectId": "to_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dnsName value.",
                "dataType": "dnsName"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_dnsName",
            "functionId": "to_dnsName",
            "description": "Converts <dataType> arg to dnsName.",
            "deprecated": false,
            "dataTypeMethodNumber": 67,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toDnsName",
            "brief": "Converts string to dnsName",
            "afwCamelCaseFunctionLabel": "afwToDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/modify_object_with_uri",
                "objectId": "modify_object_with_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URI of object to modify.  If a URI begins with a single slash ('/'), it is the local object path.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "entries",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "List of asserts and modifications.  Entries are of the form:\n\n    [\n        \"add_value\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]\n\n    [\n        \"remove_property\",\n        \"property name\" or [\"property name\", ... ]\n    ]\n\n    [\n        \"remove_value\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]\n\n    [\n        \"set_property\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_modify_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "modify_object_with_uri",
            "functionId": "modify_object_with_uri",
            "description": "Modify an adaptive object with a given URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "modifyObjectWithUri",
            "brief": "Modify adaptive object with URI",
            "afwCamelCaseFunctionLabel": "afwModifyObjectWithUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_rfc822Name",
                "objectId": "eq_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_rfc822Name",
            "functionId": "eq<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Checks for rfc822Name arg1 is equal to rfc822Name arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "eqRfc822Name",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_hexBinary",
                "objectId": "bag_size_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_hexBinary",
            "functionId": "bag_size<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "bagSizeHexBinary",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_anyURI",
                "objectId": "intersection_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of anyURI value.",
                "dataTypeParameter": "anyURI",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "description": "The first list.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "description": "The second list.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_anyURI",
            "functionId": "intersection<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns a list of anyURI with the values that are common to both list of anyURI list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "intersectionAnyURI",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/join",
                "objectId": "join",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "Joined list values.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "A list of values of any data type.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "separator",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "The separator to use.  If not specified, a comma (,) is used.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "join",
            "functionId": "join",
            "details": "The list:: prefix is optional.",
            "description": "Concatenate the string values of the elements of a list with a separator.",
            "deprecated": false,
            "dataTypeMethodNumber": 53,
            "dataType": "array",
            "category": "array",
            "camelCaseFunctionLabel": "join",
            "brief": "Join the string values of list elements",
            "afwCamelCaseFunctionLabel": "afwJoin"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/min_dateTime",
                "objectId": "min_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a dateTime value that can be specified 1 or more times.",
                    "dataType": "dateTime"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "min_dateTime",
            "functionId": "min<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Return the dateTime arg that is less than or equal to the others.\n\nIf a dateTime value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 37,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "minDateTime",
            "brief": "Minimum value",
            "afwCamelCaseFunctionLabel": "afwMinDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/decompile",
                "objectId": "decompile",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "Decompiled value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to decompile."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "whitespace",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "Add whitespace for readability if present and not 0.  This parameter can be an integer between 0 and 10 or a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "decompile",
            "functionId": "decompile",
            "description": "Decompile an adaptive value to string.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "decompile",
            "brief": "Decompile value",
            "afwCamelCaseFunctionLabel": "afwDecompile"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_base64Binary",
                "objectId": "union_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of base64Binary value.",
                "dataTypeParameter": "base64Binary",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of base64Binary value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_base64Binary",
            "functionId": "union<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Returns a list of base64Binary contains all of the unique values in two or more list of base64Binary args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "unionBase64Binary",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/evaluate_value",
                "objectId": "evaluate_value",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated adaptive value."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveHybridPropertiesObjects_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveHybridPropertiesObjects_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "evaluate_value",
            "functionId": "evaluate_value",
            "description": "Evaluate an adaptive value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "evaluateValue",
            "brief": "Evaluate value",
            "afwCamelCaseFunctionLabel": "afwEvaluateValue"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_objectId",
                "objectId": "to_string_objectId",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an objectId value.",
                    "description": "A objectId value.",
                    "dataType": "objectId"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_objectId",
            "functionId": "to_string<objectId>",
            "details": "The objectId:: prefix is optional.",
            "description": "Converts objectId arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "objectId",
            "category": "objectId",
            "camelCaseFunctionLabel": "toStringObjectId",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringObjectId"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_double",
                "objectId": "to_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "integer",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_double",
            "functionId": "to_double",
            "description": "Converts <dataType> arg to double and returns double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 52,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toDouble",
            "brief": "Converts to double",
            "afwCamelCaseFunctionLabel": "afwToDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/now_local",
                "objectId": "now_local",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "now_local",
            "functionId": "now_local",
            "description": "Return current local dateTime.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "nowLocal",
            "brief": "Local dataTime",
            "afwCamelCaseFunctionLabel": "afwNowLocal"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/now_utc",
                "objectId": "now_utc",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "now_utc",
            "functionId": "now_utc",
            "description": "Return current UTC dateTime.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "nowUtc",
            "brief": "UTC dataTime",
            "afwCamelCaseFunctionLabel": "afwNowUtc"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/negative_integer",
                "objectId": "negative_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "-",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "negative_integer",
            "functionId": "negative<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Return negative of integer arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 46,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "negativeInteger",
            "brief": "Negative of a number",
            "afwCamelCaseFunctionLabel": "afwNegativeInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/divide_integer",
                "objectId": "divide_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "dividend",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "divisor",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "/",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "divide_integer",
            "functionId": "divide<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Divide integer dividend by integer divisor and return the integer quotient.",
            "deprecated": false,
            "dataTypeMethodNumber": 43,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "divideInteger",
            "brief": "Divide numbers",
            "afwCamelCaseFunctionLabel": "afwDivideInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/property_get",
                "objectId": "property_get",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated property value or default."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object to get property from.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Name of property to get.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "defaultValue",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "The default value of property if it does not exist in object.  If not specified, null value is the default."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "property_get",
            "functionId": "property_get",
            "description": "Return the value of a property of an object.  If property is not available, return a default or null value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "propertyGet",
            "brief": "Get property value",
            "afwCamelCaseFunctionLabel": "afwPropertyGet"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_dateTime",
                "objectId": "to_string_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "description": "A dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_dateTime",
            "functionId": "to_string<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Converts dateTime arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "toStringDateTime",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/le_string",
                "objectId": "le_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                }
            ],
            "op": "<=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "le_string",
            "functionId": "le<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is less than or equal to string arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 34,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "leString",
            "brief": "Checks for less than or equal",
            "afwCamelCaseFunctionLabel": "afwLeString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_dayTimeDuration",
                "objectId": "one_and_only_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dayTimeDuration value.",
                "dataType": "dayTimeDuration"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_dayTimeDuration",
            "functionId": "one_and_only<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type dayTimeDuration value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "oneAndOnlyDayTimeDuration",
            "brief": "Converts a one value list to a dayTimeDuration value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/metas",
                "objectId": "metas",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "An list containing the result of calling meta() of each value in list or object adaptive value.",
                "dataType": "object"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "This is an adaptive list or object."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "metas",
            "functionId": "metas",
            "description": "This function returns a list of the result of calling meta() for each value in a list or object adaptive value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "value",
            "camelCaseFunctionLabel": "metas",
            "brief": "Return a list of the result of calling meta() for each value in a list or object adaptive value",
            "afwCamelCaseFunctionLabel": "afwMetas"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ends_with_string",
                "objectId": "ends_with_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ends_with_string",
            "functionId": "ends_with<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks whether string value ends with a string and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 5,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "endsWithString",
            "brief": "Checks whether value ends with a string",
            "afwCamelCaseFunctionLabel": "afwEndsWithString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_base64Binary",
                "objectId": "ne_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_base64Binary",
            "functionId": "ne<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Checks for base64Binary arg1 is not equal to base64Binary arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "neBase64Binary",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_yearMonthDuration",
                "objectId": "to_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a yearMonthDuration value.",
                "dataType": "yearMonthDuration"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_yearMonthDuration",
            "functionId": "to_yearMonthDuration",
            "description": "Converts <dataType> arg to yearMonthDuration.",
            "deprecated": false,
            "dataTypeMethodNumber": 72,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toYearMonthDuration",
            "brief": "Converts string to yearMonthDuration",
            "afwCamelCaseFunctionLabel": "afwToYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/stringify",
                "objectId": "stringify",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "Evaluated and decompiled value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to stringify."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "replacer",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "Optional replacer function."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "whitespace",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "Add whitespace for readability if present and not 0.  This parameter can be an integer between 0 and 10 or a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used.",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "stringify",
            "functionId": "stringify",
            "description": "Evaluate and decompile an adaptive value to string.  For most values this has the effect of producing a string containing json.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "stringify",
            "brief": "Evaluate and decompile a value",
            "afwCamelCaseFunctionLabel": "afwStringify"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/le_time",
                "objectId": "le_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                }
            ],
            "op": "<=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "le_time",
            "functionId": "le<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 is less than or equal to time arg2 and return the boolean result.\n\nIt is illegal to compare a time that includes a time-zone value with one that does not.  In such cases, the in_range<time> function should be used.",
            "deprecated": false,
            "dataTypeMethodNumber": 34,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "leTime",
            "brief": "Checks for less than or equal",
            "afwCamelCaseFunctionLabel": "afwLeTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/generate_uuid",
                "objectId": "generate_uuid",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "generate_uuid",
            "functionId": "generate_uuid",
            "description": "Generate a UUID.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "generateUuid",
            "brief": "Generate UUID",
            "afwCamelCaseFunctionLabel": "afwGenerateUuid"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_dayTimeDuration",
                "objectId": "subset_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "description": "The first list.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "description": "The second list.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_dayTimeDuration",
            "functionId": "subset<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Returns boolean true if the unique values in dayTimeDuration list1 are all in dayTimeDuration list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "subsetDayTimeDuration",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_rfc822Name",
                "objectId": "is_in_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_rfc822Name",
            "functionId": "is_in<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Checks whether rfc822Name value is in list of rfc822Name list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "isInRfc822Name",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_boolean",
                "objectId": "bag_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of boolean value.",
                "dataTypeParameter": "boolean",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of boolean value that can be specified 0 or more times.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_boolean",
            "functionId": "bag<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Takes any number of boolean args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "bagBoolean",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_double_integer",
                "objectId": "to_double_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_double_integer",
            "functionId": "to_double<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Converts integer arg to double and returns double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 52,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "toDoubleInteger",
            "brief": "Converts to double",
            "afwCamelCaseFunctionLabel": "afwToDoubleInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex",
                "objectId": "nex",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex",
            "functionId": "nex",
            "description": "Checks for <dataType> arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "nex",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNex"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_anyURI",
                "objectId": "subset_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "description": "The first list.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "description": "The second list.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_anyURI",
            "functionId": "subset<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns boolean true if the unique values in anyURI list1 are all in anyURI list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "subsetAnyURI",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_string",
                "objectId": "at_least_one_member_of_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The first list.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The second list.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_string",
            "functionId": "at_least_one_member_of<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns boolean true if at least one value in string list1 is in string list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "atLeastOneMemberOfString",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_dnsName",
                "objectId": "bag_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of dnsName value.",
                "dataTypeParameter": "dnsName",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of dnsName value that can be specified 0 or more times.",
                    "dataTypeParameter": "dnsName",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_dnsName",
            "functionId": "bag<dnsName>",
            "details": "The dnsName:: prefix is optional.",
            "description": "Takes any number of dnsName args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "dnsName",
            "category": "dnsName",
            "camelCaseFunctionLabel": "bagDnsName",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/expression",
                "objectId": "expression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an expression value.",
                "description": "Converted value",
                "dataType": "script"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "expression",
            "functionId": "expression",
            "description": "Converts arg to data type expression returning expression result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "expression",
            "camelCaseFunctionLabel": "expression",
            "afwCamelCaseFunctionLabel": "afwExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/gt_string",
                "objectId": "gt_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "op": ">",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "gt_string",
            "functionId": "gt<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is greater than string arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 33,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "gtString",
            "brief": "Checks for greater than",
            "afwCamelCaseFunctionLabel": "afwGtString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/starts_with_anyURI",
                "objectId": "starts_with_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "starts_with_anyURI",
            "functionId": "starts_with<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks whether anyURI value starts with a subString and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 23,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "startsWithAnyURI",
            "brief": "Checks whether value starts with a string",
            "afwCamelCaseFunctionLabel": "afwStartsWithAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_date_string",
                "objectId": "to_date_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "dataType": "date"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_date_string",
            "functionId": "to_date<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to date.",
            "deprecated": false,
            "dataTypeMethodNumber": 64,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toDateString",
            "brief": "Converts string to date",
            "afwCamelCaseFunctionLabel": "afwToDateString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/multiply_double",
                "objectId": "multiply_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 2,
                    "details": "This parameter is a double value that can be specified 2 or more times.",
                    "dataType": "double"
                }
            ],
            "op": "*",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "multiply_double",
            "functionId": "multiply<double>",
            "details": "The double:: prefix is optional.",
            "description": "Multiply 2 or more double args and return the double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 45,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "multiplyDouble",
            "brief": "Multiply numbers",
            "afwCamelCaseFunctionLabel": "afwMultiplyDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_integer",
                "objectId": "is_in_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_integer",
            "functionId": "is_in<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks whether integer value is in list of integer list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "isInInteger",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_string",
                "objectId": "bag_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of string value.",
                "dataTypeParameter": "string",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of string value that can be specified 0 or more times.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_string",
            "functionId": "bag<string>",
            "details": "The string:: prefix is optional.",
            "description": "Takes any number of string args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "bagString",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/get_object_with_uri",
                "objectId": "get_object_with_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Object retrieved or NULL if not found.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URI of object to retrieve.  If a URI begins with a single slash ('/'), it is the local object path.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveObjectOptions_ value that is optional.",
                    "description": "Object view options.  See /afw/_AdaptiveObjectType_/_AdaptiveObjectOptions_ for more information.",
                    "dataTypeParameter": "_AdaptiveObjectOptions_",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_get_object\n\nwhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "get_object_with_uri",
            "functionId": "get_object_with_uri",
            "description": "Get an object with a given URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "getObjectWithUri",
            "brief": "Get adaptive object with URI",
            "afwCamelCaseFunctionLabel": "afwGetObjectWithUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_base64Binary",
                "objectId": "to_string_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "description": "A base64Binary value.",
                    "dataType": "base64Binary"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_base64Binary",
            "functionId": "to_string<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Converts base64Binary arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "toStringBase64Binary",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_anyURI",
                "objectId": "nex_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_anyURI",
            "functionId": "nex<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks for anyURI arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "nexAnyURI",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/model_default_replace_object_action",
                "objectId": "model_default_replace_object_action",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveAction_ value.",
                "description": "The default action object.",
                "dataTypeParameter": "_AdaptiveAction_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptorId of a model adaptor.  Variable custom::adaptorId can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptive object type of object being replaced.  Variable custom::objectType can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The objectId of object to replace.  Variable custom::objectId can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "This is the object to replace.  Variable custom::object can be used to access this value in model expressions.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "modelId",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "This specifics a modelId of model to use for producing results.  If not specified, the adaptor's current model will be used.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "context",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "This specifies additional context information available to model expressions.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "model_default_replace_object_action",
            "functionId": "model_default_replace_object_action",
            "description": "This function returns a _AdaptiveAction_ object for the default action performed if a onReplaceObject parameter is not specified on the associated _AdaptiveModelObjectType_.  The action is not performed, but be aware that functions called while producing the _AdaptiveAction_ object may cause side effects.  This function can be called as part of a onReplace expression or for testing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "model",
            "camelCaseFunctionLabel": "modelDefaultReplaceObjectAction",
            "brief": "Produce a default _AdaptiveAction_ object for an replace object request to a model adaptor.",
            "afwCamelCaseFunctionLabel": "afwModelDefaultReplaceObjectAction"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_date",
                "objectId": "union_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of date value.",
                "dataTypeParameter": "date",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of date value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_date",
            "functionId": "union<date>",
            "details": "The date:: prefix is optional.",
            "description": "Returns a list of date contains all of the unique values in two or more list of date args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "unionDate",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/filter",
                "objectId": "filter",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "This is the resulting filtered list.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(...) value.",
                    "description": "This is a boolean function that is called to determine if a list entry should be included in the returned list.",
                    "dataTypeParameter": "(boolean)(...)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is an untyped value that can be specified 1 or more times.",
                    "description": "These are the args passed to the predicate with the exception that the first list is passed as the single current value from the list.  At least one list is required."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "filter",
            "functionId": "filter",
            "description": "This produces a list containing only values from another list that pass a predicate test.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "filter",
            "brief": "Filter a list",
            "afwCamelCaseFunctionLabel": "afwFilter"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/round",
                "objectId": "round",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "round",
            "functionId": "round",
            "description": "Determine the integer closest to <dataType> arg and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 48,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "round",
            "brief": "Round to nearest integer",
            "afwCamelCaseFunctionLabel": "afwRound"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_dayTimeDuration_string",
                "objectId": "to_dayTimeDuration_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dayTimeDuration value.",
                "dataType": "dayTimeDuration"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_dayTimeDuration_string",
            "functionId": "to_dayTimeDuration<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to dayTimeDuration.",
            "deprecated": false,
            "dataTypeMethodNumber": 66,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toDayTimeDurationString",
            "brief": "Converts string to dayTimeDuration",
            "afwCamelCaseFunctionLabel": "afwToDayTimeDurationString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_date",
                "objectId": "eqx_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_date",
            "functionId": "eqx<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "eqxDate",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/mod_integer",
                "objectId": "mod_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "dividend",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "divisor",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "%",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "mod_integer",
            "functionId": "mod<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Divide integer dividend by integer divisor and return the integer remainder.",
            "deprecated": false,
            "dataTypeMethodNumber": 51,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "modInteger",
            "brief": "Remainder of dividing numbers",
            "afwCamelCaseFunctionLabel": "afwModInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/divide_double",
                "objectId": "divide_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "dividend",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "divisor",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "/",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "divide_double",
            "functionId": "divide<double>",
            "details": "The double:: prefix is optional.",
            "description": "Divide double dividend by double divisor and return the double quotient.",
            "deprecated": false,
            "dataTypeMethodNumber": 43,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "divideDouble",
            "brief": "Divide numbers",
            "afwCamelCaseFunctionLabel": "afwDivideDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_x500Name",
                "objectId": "to_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a x500Name value.",
                "dataType": "x500Name"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_x500Name",
            "functionId": "to_x500Name",
            "description": "Converts <dataType> arg to x500Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 71,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toX500Name",
            "brief": "Converts string to x500Name",
            "afwCamelCaseFunctionLabel": "afwToX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_object",
                "objectId": "is_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is object.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_object",
            "functionId": "is<object>",
            "description": "Test arg returning boolean True if it is data type object.  Use is_list_of_object() instead to test for a list of object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "isObject",
            "brief": "Checks whether value is dataType object",
            "afwCamelCaseFunctionLabel": "afwIsObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_date",
                "objectId": "subset_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "description": "The first list.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "description": "The second list.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_date",
            "functionId": "subset<date>",
            "details": "The date:: prefix is optional.",
            "description": "Returns boolean true if the unique values in date list1 are all in date list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "subsetDate",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_double_string",
                "objectId": "to_double_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_double_string",
            "functionId": "to_double<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to double and returns double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 52,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toDoubleString",
            "brief": "Converts to double",
            "afwCamelCaseFunctionLabel": "afwToDoubleString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only",
                "objectId": "one_and_only",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "dnsName",
                "double",
                "hexBinary",
                "integer",
                "ipAddress",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only",
            "functionId": "one_and_only",
            "description": "This converts a list list  that contains one value to a data type <dataType> value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "oneAndOnly",
            "brief": "Converts a one value list to a <dataType> value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnly"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/get_object",
                "objectId": "get_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Object retrieved or NULL if not found.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor containing object to retrieve.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of object to retrieve.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of object to retrieve.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveObjectOptions_ value that is optional.",
                    "description": "Object view options.  See /afw/_AdaptiveObjectType_/_AdaptiveObjectOptions_ for more information.",
                    "dataTypeParameter": "_AdaptiveObjectOptions_",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_get_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "get_object",
            "functionId": "get_object",
            "description": "Get an adaptive object from the adaptor, specified by adaptorId, objectType and objectId.  Optional view options and adaptor-specific options may be supplied to influence how the object is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "getObject",
            "brief": "Get adaptive object",
            "afwCamelCaseFunctionLabel": "afwGetObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/url_encode_anyURI",
                "objectId": "url_encode_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "URI encoded string.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "unencoded",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URL encode a single value.  See the url_encode method for the data type of more details.",
                    "dataType": "anyURI"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "url_encode_anyURI",
            "functionId": "url_encode<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "URL encode a value or bag of values.",
            "deprecated": false,
            "dataTypeMethodNumber": 28,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "urlEncodeAnyURI",
            "brief": "URI encode",
            "afwCamelCaseFunctionLabel": "afwUrlEncodeAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/test_expression_tuple",
                "objectId": "test_expression_tuple",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Test results.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "id",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "description",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Description of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expression",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Expression tuple to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expected",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Expected result."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "test_expression_tuple",
            "functionId": "test_expression_tuple",
            "description": "Compile and evaluate an adaptive expression tuple and compare the results to an expected value.  Return object with the test's results.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "testExpressionTuple",
            "brief": "Test expression tuple",
            "afwCamelCaseFunctionLabel": "afwTestExpressionTuple"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/flag_modify_defaults",
                "objectId": "flag_modify_defaults",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "flagId",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The flagId of flags to be added or removed.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "add",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "Specify true to add and false to remove flags.  If not specified, flags are added.",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "flag_modify_defaults",
            "functionId": "flag_modify_defaults",
            "description": "Add or remove flags from the list of the flagId of flags that are used to determine the default active flags when a scope (request) is created.  This list can contain the flagId of flags that have not yet been registered.  These flags and the flags they include are set as the active default flags.\n\nThis change only lasts for the life of the current adaptive environment (e.g. until the adaptive server or afw command ends).  If you want the change to persist, change the defaultFlags property in the application config.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "flagModifyDefaults",
            "brief": "Add or remove flags used to determine the default active flags",
            "afwCamelCaseFunctionLabel": "afwFlagModifyDefaults"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_anyURI",
                "objectId": "to_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_anyURI",
            "functionId": "to_anyURI",
            "description": "Converts <dataType> arg to anyURI.",
            "deprecated": false,
            "dataTypeMethodNumber": 62,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toAnyURI",
            "brief": "Converts string to anyURI",
            "afwCamelCaseFunctionLabel": "afwToAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/lt_double",
                "objectId": "lt_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "<",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "lt_double",
            "functionId": "lt<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 is less that double arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 35,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "ltDouble",
            "brief": "Checks for less than",
            "afwCamelCaseFunctionLabel": "afwLtDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ge_time",
                "objectId": "ge_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "op": ">=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ge_time",
            "functionId": "ge<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 is greater than or equal to time arg2 and return the boolean result.\n\nIt is illegal to compare a time that includes a time-zone value with one that does not.  In such cases, the in_range<time> function should be used.",
            "deprecated": false,
            "dataTypeMethodNumber": 32,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "geTime",
            "brief": "Checks for greater than or equal",
            "afwCamelCaseFunctionLabel": "afwGeTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_dayTimeDuration",
                "objectId": "add_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "dateTime"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_dayTimeDuration",
            "functionId": "add_dayTimeDuration",
            "description": "Add <dataType> arg1 to dayTimeDuration arg2 and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 30,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "addDayTimeDuration",
            "brief": "Add duration",
            "afwCamelCaseFunctionLabel": "afwAddDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_replace_anyURI",
                "objectId": "regexp_replace_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "description": "A anyURI value with the matched string(s) replaced.",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "The original anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "A regular expression to use for search.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "replacement",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The replacement string.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum times to replace.  The default is 1.  Specify -1 to replace all occurrences.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_replace_anyURI",
            "functionId": "regexp_replace<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Replace matched values for a regular expression in a anyURI value.",
            "deprecated": false,
            "dataTypeMethodNumber": 18,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "regexpReplaceAnyURI",
            "brief": "Replace strings matching a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpReplaceAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/le_dateTime",
                "objectId": "le_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                }
            ],
            "op": "<=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "le_dateTime",
            "functionId": "le<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 is less than or equal to dateTime arg2 and return the boolean result.\n\nIf a dateTime value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 34,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "leDateTime",
            "brief": "Checks for less than or equal",
            "afwCamelCaseFunctionLabel": "afwLeDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_objectId",
                "objectId": "is_objectId",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is objectId.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_objectId",
            "functionId": "is<objectId>",
            "description": "Test arg returning boolean True if it is data type objectId.  Use is_list_of_objectId() instead to test for a list of objectId.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "objectId",
            "camelCaseFunctionLabel": "isObjectId",
            "brief": "Checks whether value is dataType objectId",
            "afwCamelCaseFunctionLabel": "afwIsObjectId"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_hexBinary",
                "objectId": "eq_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_hexBinary",
            "functionId": "eq<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Checks for hexBinary arg1 is equal to hexBinary arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "eqHexBinary",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/encode_as_base64Binary_string",
                "objectId": "encode_as_base64Binary_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a base64Binary value.",
                "description": "A base64Binary value.",
                "dataType": "base64Binary"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string value to encode.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "encode_as_base64Binary_string",
            "functionId": "encode_as_base64Binary<string>",
            "details": "The string:: prefix is optional.",
            "description": "Encode a value as a base64Binary.  The effect is to create a base64Binary value with an internal value of the value passed.",
            "deprecated": false,
            "dataTypeMethodNumber": 55,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "encodeAsBase64BinaryString",
            "brief": "Encode to a base64Binary value",
            "afwCamelCaseFunctionLabel": "afwEncodeAsBase64BinaryString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/min",
                "objectId": "min",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime",
                "double",
                "integer",
                "string",
                "time"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a <dataType> value that can be specified 1 or more times."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "min",
            "functionId": "min",
            "description": "Return the <dataType> arg that is less than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 37,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "min",
            "brief": "Minimum value",
            "afwCamelCaseFunctionLabel": "afwMin"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compile_template",
                "objectId": "compile_template",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "An unevaluated template value ready for use by function evaluate() or a string containing the compiler listing."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "template",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The template to compile",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "listing",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If specified, a compiler listing is produced instead of an unevaluated template value.\n\nThis parameter can be an integer between 0 and 10 of a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compile_template",
            "functionId": "compile_template",
            "description": "Compile a string containing adaptive template syntax and return either an unevaluated template adaptive value or a string containing the compiler listing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "compileTemplate",
            "brief": "Compile template",
            "afwCamelCaseFunctionLabel": "afwCompileTemplate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_hexBinary",
                "objectId": "is_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is hexBinary.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_hexBinary",
            "functionId": "is<hexBinary>",
            "description": "Test arg returning boolean True if it is data type hexBinary.  Use is_list_of_hexBinary() instead to test for a list of hexBinary.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "hexBinary",
            "camelCaseFunctionLabel": "isHexBinary",
            "brief": "Checks whether value is dataType hexBinary",
            "afwCamelCaseFunctionLabel": "afwIsHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_dateTime",
                "objectId": "is_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is dateTime.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_dateTime",
            "functionId": "is<dateTime>",
            "description": "Test arg returning boolean True if it is data type dateTime.  Use is_list_of_dateTime() instead to test for a list of dateTime.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "dateTime",
            "camelCaseFunctionLabel": "isDateTime",
            "brief": "Checks whether value is dataType dateTime",
            "afwCamelCaseFunctionLabel": "afwIsDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_password",
                "objectId": "to_string_password",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a password value.",
                    "description": "A password value.",
                    "dataType": "password"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_password",
            "functionId": "to_string<password>",
            "details": "The password:: prefix is optional.",
            "description": "Converts password arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "password",
            "category": "password",
            "camelCaseFunctionLabel": "toStringPassword",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringPassword"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_expression",
                "objectId": "is_expression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is expression.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_expression",
            "functionId": "is<expression>",
            "description": "Test arg returning boolean True if it is data type expression.  Use is_list_of_expression() instead to test for a list of expression.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "expression",
            "camelCaseFunctionLabel": "isExpression",
            "brief": "Checks whether value is dataType expression",
            "afwCamelCaseFunctionLabel": "afwIsExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_string",
                "objectId": "intersection_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of string value.",
                "dataTypeParameter": "string",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The first list.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The second list.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_string",
            "functionId": "intersection<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns a list of string with the values that are common to both list of string list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "intersectionString",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_time",
                "objectId": "to_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a time value.",
                "dataType": "time"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_time",
            "functionId": "to_time",
            "description": "Converts <dataType> arg to time.",
            "deprecated": false,
            "dataTypeMethodNumber": 70,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toTime",
            "brief": "Converts string to time",
            "afwCamelCaseFunctionLabel": "afwToTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_null",
                "objectId": "to_string_null",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a null value.",
                    "description": "A null value.",
                    "dataType": "null"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_null",
            "functionId": "to_string<null>",
            "details": "The null:: prefix is optional.",
            "description": "Converts null arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "null",
            "category": "null",
            "camelCaseFunctionLabel": "toStringNull",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringNull"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/abs",
                "objectId": "abs",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double",
                "integer"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "abs",
            "functionId": "abs",
            "description": "Compute the absolute value of the <dataType> arg and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 40,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "abs",
            "brief": "Absolute value",
            "afwCamelCaseFunctionLabel": "afwAbs"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_double",
                "objectId": "is_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is double.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_double",
            "functionId": "is<double>",
            "description": "Test arg returning boolean True if it is data type double.  Use is_list_of_double() instead to test for a list of double.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "double",
            "camelCaseFunctionLabel": "isDouble",
            "brief": "Checks whether value is dataType double",
            "afwCamelCaseFunctionLabel": "afwIsDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_list",
                "objectId": "is_list",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is list.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_list",
            "functionId": "is<list>",
            "description": "Test arg returning boolean True if it is data type list.  Use is_list_of_list() instead to test for a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "array",
            "camelCaseFunctionLabel": "isList",
            "brief": "Checks whether value is dataType list",
            "afwCamelCaseFunctionLabel": "afwIsList"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_hexBinary",
                "objectId": "eqx_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_hexBinary",
            "functionId": "eqx<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Checks for hexBinary arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "eqxHexBinary",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/rfc822Name",
                "objectId": "rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a rfc822Name value.",
                "description": "Converted value",
                "dataType": "rfc822Name"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "rfc822Name",
            "functionId": "rfc822Name",
            "description": "Converts arg to data type rfc822Name returning rfc822Name result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "rfc822Name",
            "afwCamelCaseFunctionLabel": "afwRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/list",
                "objectId": "array",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "Converted value",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is an untyped value that can be specified 1 or more times.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "array",
            "functionId": "array",
            "description": "Converts 1 or more args to a list.  If an arg is a list, its individual values are included.\n\nIf the data types of all values in the resulting list are the same, the list will be a list of that data type.  Otherwise, the resulting list will be untyped.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "array",
            "camelCaseFunctionLabel": "array",
            "afwCamelCaseFunctionLabel": "afwList"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/any_of",
                "objectId": "any_of",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(...) value.",
                    "description": "This function is called for each value in the first list in args or until true is returned.  If no calls return true, the result is false.",
                    "dataTypeParameter": "(boolean)(...)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is an untyped value that can be specified 1 or more times.",
                    "description": "These are the parameters passed to predicate with the exception that the first list is passed one value at a time.  At least one list is required."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "any_of",
            "functionId": "any_of",
            "description": "Returns true if any value in a list pass the predicate test.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "anyOf",
            "brief": "Any values pass a test",
            "afwCamelCaseFunctionLabel": "afwAnyOf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_hybrid",
                "objectId": "is_hybrid",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is hybrid.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_hybrid",
            "functionId": "is<hybrid>",
            "description": "Test arg returning boolean True if it is data type hybrid.  Use is_list_of_hybrid() instead to test for a list of hybrid.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "hybrid",
            "camelCaseFunctionLabel": "isHybrid",
            "brief": "Checks whether value is dataType hybrid",
            "afwCamelCaseFunctionLabel": "afwIsHybrid"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_integer",
                "objectId": "one_and_only_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_integer",
            "functionId": "one_and_only<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type integer value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "oneAndOnlyInteger",
            "brief": "Converts a one value list to a integer value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_double",
                "objectId": "union_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of double value.",
                "dataTypeParameter": "double",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of double value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_double",
            "functionId": "union<double>",
            "details": "The double:: prefix is optional.",
            "description": "Returns a list of double contains all of the unique values in two or more list of double args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "unionDouble",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_time",
                "objectId": "set_equals_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_time",
            "functionId": "set_equals<time>",
            "details": "The time:: prefix is optional.",
            "description": "Returns boolean true if time list1 and time list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "setEqualsTime",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/decode_to_string_hexBinary",
                "objectId": "decode_to_string_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The decoded string.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "description": "The hexBinary value to decode.",
                    "dataType": "hexBinary"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "decode_to_string_hexBinary",
            "functionId": "decode_to_string<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Decode hexBinary value to string.  An error is thrown if decoded value is not valid UTF-8.",
            "deprecated": false,
            "dataTypeMethodNumber": 29,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "decodeToStringHexBinary",
            "brief": "Decode hexBinary to string",
            "afwCamelCaseFunctionLabel": "afwDecodeToStringHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/sort",
                "objectId": "sort",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "This the the resulting sorted list.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "compareFunction",
                    "minArgs": -1,
                    "details": "This parameter is a function (integer)(value1, value2) value.",
                    "description": "This function is called with two value from list.",
                    "dataTypeParameter": "(integer)(value1, value2)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "This is the list to sort.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "sort",
            "functionId": "sort",
            "description": "This produces a list with values sorted based on result of compareFunction.  The compareFunction is passed two values from the list and must return an integer less than 0 if the first value is less than the second value, 0 if they are equal, and a integer greater than 0 if the first value is greater than the second value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "sort",
            "brief": "Sort values in a list",
            "afwCamelCaseFunctionLabel": "afwSort"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_object_with_uri",
                "objectId": "add_object_with_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.  Property \"objectId\" is the objectId assigned by the adaptor.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URI of object to add.  If a URI begins with a single slash ('/'), it is the local object path.  In the case of a local path, an optional preferred objectId of object can be including in URI which the adaptor may ignore.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object to add.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_add_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_object_with_uri",
            "functionId": "add_object_with_uri",
            "description": "Add an adaptive object with a given URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "addObjectWithUri",
            "brief": "Add adaptive object with URI",
            "afwCamelCaseFunctionLabel": "afwAddObjectWithUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag",
                "objectId": "bag",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": true,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of <dataType> value.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "dnsName",
                "double",
                "hexBinary",
                "integer",
                "ipAddress",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of <dataType> value that can be specified 0 or more times.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag",
            "functionId": "bag",
            "description": "Takes any number of <dataType> args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "bag",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBag"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_dayTimeDuration",
                "objectId": "to_string_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "description": "A dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_dayTimeDuration",
            "functionId": "to_string<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Converts dayTimeDuration arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "toStringDayTimeDuration",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/negative_double",
                "objectId": "negative_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "-",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "negative_double",
            "functionId": "negative<double>",
            "details": "The double:: prefix is optional.",
            "description": "Return negative of double arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 46,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "negativeDouble",
            "brief": "Negative of a number",
            "afwCamelCaseFunctionLabel": "afwNegativeDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/max_integer",
                "objectId": "max_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is an integer value that can be specified 1 or more times.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "max_integer",
            "functionId": "max<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Return the integer arg that is greater than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 36,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "maxInteger",
            "brief": "Maximum value",
            "afwCamelCaseFunctionLabel": "afwMaxInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_hexBinary",
                "objectId": "bag_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of hexBinary value.",
                "dataTypeParameter": "hexBinary",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of hexBinary value that can be specified 0 or more times.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_hexBinary",
            "functionId": "bag<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Takes any number of hexBinary args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "bagHexBinary",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_date",
                "objectId": "to_string_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "description": "A date value.",
                    "dataType": "date"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_date",
            "functionId": "to_string<date>",
            "details": "The date:: prefix is optional.",
            "description": "Converts date arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "toStringDate",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_boolean_string",
                "objectId": "to_boolean_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_boolean_string",
            "functionId": "to_boolean<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to boolean.",
            "deprecated": false,
            "dataTypeMethodNumber": 63,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toBooleanString",
            "brief": "Converts string to boolean",
            "afwCamelCaseFunctionLabel": "afwToBooleanString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_integer",
                "objectId": "eqx_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_integer",
            "functionId": "eqx<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "eqxInteger",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/extension_load",
                "objectId": "extension_load",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "The loading of the extension may add environment registry entries as well as make other changes."
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "If false the extension was already loaded.  If true, the extension was successfully loaded which might have caused side effects such as environment registry changes.  An error is thrown if there is a problem.",
                "dataType": "boolean"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "extension_id",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the object id of a /afw/_AdaptiveManifest_/ object.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "extension_load",
            "functionId": "extension_load",
            "description": "Load an extension if it is not already loaded.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "extensionLoad",
            "brief": "Load extension",
            "afwCamelCaseFunctionLabel": "afwExtensionLoad"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_integer",
                "objectId": "ne_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_integer",
            "functionId": "ne<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 is not equal to integer arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "neInteger",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/test_hybrid",
                "objectId": "test_hybrid",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Test results.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "id",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "description",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Description of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "hybrid",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Hybrid to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expected",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Expected evaluated result."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "test_hybrid",
            "functionId": "test_hybrid",
            "description": "Compile and evaluate a string containing adaptive hybrid syntax which can be an adaptive template or adaptive expression tuple and then compare the results to an expected value.  Return object with the test's results.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "testHybrid",
            "brief": "Test hybrid",
            "afwCamelCaseFunctionLabel": "afwTestHybrid"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract_double",
                "objectId": "subtract_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "-",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract_double",
            "functionId": "subtract<double>",
            "details": "The double:: prefix is optional.",
            "description": "Subtract double arg2 from double arg1 and return the double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 49,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "subtractDouble",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtractDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_integer",
                "objectId": "set_equals_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of integer value.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_integer",
            "functionId": "set_equals<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Returns boolean true if integer list1 and integer list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "setEqualsInteger",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/variable_get",
                "objectId": "variable_get",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated variable value or default."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Name of variable to get.  The name can optionally be preceded with a qualifier followed by \"::\".",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "defaultValue",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "The default value of variable if it does not exist in object.  If not specified, null value is the default."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "variable_get",
            "functionId": "variable_get",
            "description": "Return the value of a variable.  If variable is not available, return a default or null value.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "variableGet",
            "brief": "Get a variable value",
            "afwCamelCaseFunctionLabel": "afwVariableGet"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_replace",
                "objectId": "regexp_replace",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value.",
                "description": "A <dataType> value with the matched string(s) replaced."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The original <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "A regular expression to use for search.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "replacement",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The replacement string.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum times to replace.  The default is 1.  Specify -1 to replace all occurrences.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_replace",
            "functionId": "regexp_replace",
            "description": "Replace matched values for a regular expression in a <dataType> value.",
            "deprecated": false,
            "dataTypeMethodNumber": 18,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "regexpReplace",
            "brief": "Replace strings matching a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpReplace"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add",
                "objectId": "add",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double",
                "integer"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "args",
                    "minArgs": 2,
                    "details": "This parameter is a <dataType> value that can be specified 2 or more times."
                }
            ],
            "op": "+",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add",
            "functionId": "add",
            "description": "Add 2 or more <dataType> args and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 41,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "add",
            "brief": "Add numbers",
            "afwCamelCaseFunctionLabel": "afwAdd"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/encode_as_base64Binary",
                "objectId": "encode_as_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a base64Binary value.",
                "description": "A base64Binary value.",
                "dataType": "base64Binary"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to encode."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "encode_as_base64Binary",
            "functionId": "encode_as_base64Binary",
            "description": "Encode a value as a base64Binary.  The effect is to create a base64Binary value with an internal value of the value passed.",
            "deprecated": false,
            "dataTypeMethodNumber": 55,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "encodeAsBase64Binary",
            "brief": "Encode to a base64Binary value",
            "afwCamelCaseFunctionLabel": "afwEncodeAsBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/index_create",
                "objectId": "index_create",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Object response from the indexing process",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "key",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Name of the property index to be created.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Expression to calculate the index value(s).",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Object Type(s) this index may apply to.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "filter",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Expression to determine if this index applies to a particular object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Indexing options.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "retroactive",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "Retroactively generate indexes for existing objects.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "test",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "Test create (don't actually perform).",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "index_create",
            "functionId": "index_create",
            "description": "Create an index definition.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "indexes",
            "camelCaseFunctionLabel": "indexCreate",
            "brief": "Create index definition",
            "afwCamelCaseFunctionLabel": "afwIndexCreate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_string",
                "objectId": "subset_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The first list.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The second list.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_string",
            "functionId": "subset<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns boolean true if the unique values in string list1 are all in string list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "subsetString",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_base64Binary",
                "objectId": "bag_size_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_base64Binary",
            "functionId": "bag_size<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "bagSizeBase64Binary",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_match_anyURI",
                "objectId": "regexp_match_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_match_anyURI",
            "functionId": "regexp_match<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks whether anyURI value matches the regular expression regexp and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 17,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "regexpMatchAnyURI",
            "brief": "Search for a match using a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpMatchAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_object",
                "objectId": "to_string_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "A object value.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_object",
            "functionId": "to_string<object>",
            "details": "The object:: prefix is optional.",
            "description": "Converts object arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "object",
            "category": "object",
            "camelCaseFunctionLabel": "toStringObject",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_xpathExpression",
                "objectId": "is_xpathExpression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is xpathExpression.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_xpathExpression",
            "functionId": "is<xpathExpression>",
            "description": "Test arg returning boolean True if it is data type xpathExpression.  Use is_list_of_xpathExpression() instead to test for a list of xpathExpression.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "xpathExpression",
            "camelCaseFunctionLabel": "isXpathExpression",
            "brief": "Checks whether value is dataType xpathExpression",
            "afwCamelCaseFunctionLabel": "afwIsXpathExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/starts_with_string",
                "objectId": "starts_with_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "starts_with_string",
            "functionId": "starts_with<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks whether string value starts with a subString and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 23,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "startsWithString",
            "brief": "Checks whether value starts with a string",
            "afwCamelCaseFunctionLabel": "afwStartsWithString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/xpath_node_count",
                "objectId": "xpath_node_count",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "nodeset",
                    "minArgs": -1,
                    "details": "This parameter is a xpathExpression value.",
                    "dataType": "xpathExpression"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "xpath_node_count",
            "functionId": "xpath_node_count",
            "description": "The number of nodes in a node-set.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "xpath",
            "camelCaseFunctionLabel": "xpathNodeCount",
            "brief": "Number of nodes in node-set",
            "afwCamelCaseFunctionLabel": "afwXpathNodeCount"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_rfc822Name",
                "objectId": "is_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is rfc822Name.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_rfc822Name",
            "functionId": "is<rfc822Name>",
            "description": "Test arg returning boolean True if it is data type rfc822Name.  Use is_list_of_rfc822Name() instead to test for a list of rfc822Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "isRfc822Name",
            "brief": "Checks whether value is dataType rfc822Name",
            "afwCamelCaseFunctionLabel": "afwIsRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/url_decode",
                "objectId": "url_decode",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "A string or bag of strings.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "encoded",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "URL decode a single string or a bag of string.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "url_decode",
            "functionId": "url_decode",
            "details": "The string:: prefix is optional.",
            "description": "URL decode a value or bag of values.",
            "deprecated": false,
            "dataTypeMethodNumber": 74,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "urlDecode",
            "brief": "URI decode",
            "afwCamelCaseFunctionLabel": "afwUrlDecode"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ge_integer",
                "objectId": "ge_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": ">=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ge_integer",
            "functionId": "ge<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 is greater than or equal to integer arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 32,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "geInteger",
            "brief": "Checks for greater than or equal",
            "afwCamelCaseFunctionLabel": "afwGeInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/replace_object_with_uri",
                "objectId": "replace_object_with_uri",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "uri",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "URI of object to replace.  If a URI begins with a single slash ('/'), it is the local object path.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Replacement object.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_replace_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "replace_object_with_uri",
            "functionId": "replace_object_with_uri",
            "description": "Replace an adaptive object with a given URI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "replaceObjectWithUri",
            "brief": "Replace adaptive object with URI",
            "afwCamelCaseFunctionLabel": "afwReplaceObjectWithUri"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/encode_as_hexBinary_string",
                "objectId": "encode_as_hexBinary_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a hexBinary value.",
                "description": "A hexBinary value.",
                "dataType": "hexBinary"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string value to encode.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "encode_as_hexBinary_string",
            "functionId": "encode_as_hexBinary<string>",
            "details": "The string:: prefix is optional.",
            "description": "Encode a value as a hexBinary.  The effect is to create a hexBinary value with an internal value of the value passed.",
            "deprecated": false,
            "dataTypeMethodNumber": 56,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "encodeAsHexBinaryString",
            "brief": "Encode to a hexBinary value",
            "afwCamelCaseFunctionLabel": "afwEncodeAsHexBinaryString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_string",
                "objectId": "nex_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_string",
            "functionId": "nex<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "nexString",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_time",
                "objectId": "one_and_only_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a time value.",
                "dataType": "time"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_time",
            "functionId": "one_and_only<time>",
            "details": "The time:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type time value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "oneAndOnlyTime",
            "brief": "Converts a one value list to a time value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_dayTimeDuration",
                "objectId": "is_in_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_dayTimeDuration",
            "functionId": "is_in<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Checks whether dayTimeDuration value is in list of dayTimeDuration list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "isInDayTimeDuration",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ends_with",
                "objectId": "ends_with",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ends_with",
            "functionId": "ends_with",
            "description": "Checks whether <dataType> value ends with a <dataType> and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 5,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "endsWith",
            "brief": "Checks whether value ends with a string",
            "afwCamelCaseFunctionLabel": "afwEndsWith"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_boolean",
                "objectId": "nex_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_boolean",
            "functionId": "nex<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Checks for boolean arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "nexBoolean",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/do_while",
                "objectId": "do_while",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 5,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The last value evaluated in body or null if the body is empty."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "condition",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "description": "While this condition is true, the loop will continue.  This is evaluated in the loop's scope.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "body",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "This is a list of values that are evaluated for each iteration of the loop.  Each value in body is evaluated in order until the end of the list or until a \"break\", \"continue\", \"return\" or \"throw\" function is encountered.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "do_while",
            "functionId": "do_while",
            "description": "This creates a new structured block with a new nested variable scope.\n\nThis function will evaluate a list of values at least once while a condition is true.  See the related functions \"break\", \"continue\", \"return\" and \"throw\".",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "doWhile",
            "brief": "Evaluate a list of values at least once while a condition is true",
            "afwCamelCaseFunctionLabel": "afwDoWhile"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/variable_is_not_null",
                "objectId": "variable_is_not_null",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if variable exists and is not null.",
                "dataType": "boolean"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Name of variable to check.  The name can optionally be preceded with a qualifier followed by \"::\".",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "variable_is_not_null",
            "functionId": "variable_is_not_null",
            "description": "Return the true if the named variable exists and is not null.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "variableIsNotNull",
            "brief": "Determine if a variable exists and is not null",
            "afwCamelCaseFunctionLabel": "afwVariableIsNotNull"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/smtp_send",
                "objectId": "smtp_send",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "url",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "SMTP Server Url.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "mail_from",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "From Address.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "mail_recipients",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "To Addresses.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "payload",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Email Payload, or body of the message.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "CURL Options",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "smtp_send",
            "functionId": "smtp_send",
            "description": "Sends an eMail using SMTP protocol with cURL.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "smtp",
            "camelCaseFunctionLabel": "smtpSend",
            "afwCamelCaseFunctionLabel": "afwSmtpSend"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_password",
                "objectId": "is_password",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is password.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_password",
            "functionId": "is<password>",
            "description": "Test arg returning boolean True if it is data type password.  Use is_list_of_password() instead to test for a list of password.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "password",
            "camelCaseFunctionLabel": "isPassword",
            "brief": "Checks whether value is dataType password",
            "afwCamelCaseFunctionLabel": "afwIsPassword"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_double",
                "objectId": "one_and_only_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_double",
            "functionId": "one_and_only<double>",
            "details": "The double:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type double value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "oneAndOnlyDouble",
            "brief": "Converts a one value list to a double value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_double",
                "objectId": "set_equals_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_double",
            "functionId": "set_equals<double>",
            "details": "The double:: prefix is optional.",
            "description": "Returns boolean true if double list1 and double list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "setEqualsDouble",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/journal_get_by_cursor",
                "objectId": "journal_get_by_cursor",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Response object.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "cursor",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Journal entry cursor.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "journal_get_by_cursor",
            "functionId": "journal_get_by_cursor",
            "description": "Get journal entry specified by entry_cursor parameter.\n\nThis option will set response properties \"entry\" and \"cursor\" if there is an entry to retrieve.  If an entry with the supplied cursor does not exist, a not_found error is thrown.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "journal",
            "camelCaseFunctionLabel": "journalGetByCursor",
            "brief": "Get journal entry at cursor",
            "afwCamelCaseFunctionLabel": "afwJournalGetByCursor"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_ipAddress",
                "objectId": "one_and_only_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an ipAddress value.",
                "dataType": "ipAddress"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_ipAddress",
            "functionId": "one_and_only<ipAddress>",
            "details": "The ipAddress:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type ipAddress value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "ipAddress",
            "category": "ipAddress",
            "camelCaseFunctionLabel": "oneAndOnlyIpAddress",
            "brief": "Converts a one value list to a ipAddress value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_anyURI",
                "objectId": "is_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is anyURI.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_anyURI",
            "functionId": "is<anyURI>",
            "description": "Test arg returning boolean True if it is data type anyURI.  Use is_list_of_anyURI() instead to test for a list of anyURI.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "anyURI",
            "camelCaseFunctionLabel": "isAnyURI",
            "brief": "Checks whether value is dataType anyURI",
            "afwCamelCaseFunctionLabel": "afwIsAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_double",
                "objectId": "to_string_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "description": "A double value.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_double",
            "functionId": "to_string<double>",
            "details": "The double:: prefix is optional.",
            "description": "Converts double arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "toStringDouble",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_base64Binary",
                "objectId": "nex_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_base64Binary",
            "functionId": "nex<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Checks for base64Binary arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "nexBase64Binary",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_integer",
                "objectId": "add_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 2,
                    "details": "This parameter is an integer value that can be specified 2 or more times.",
                    "dataType": "integer"
                }
            ],
            "op": "+",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_integer",
            "functionId": "add<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Add 2 or more integer args and return the integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 41,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "addInteger",
            "brief": "Add numbers",
            "afwCamelCaseFunctionLabel": "afwAddInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/url_encode_string",
                "objectId": "url_encode_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "URI encoded string.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "unencoded",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "URL encode a single value.  See the url_encode method for the data type of more details.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "url_encode_string",
            "functionId": "url_encode<string>",
            "details": "The string:: prefix is optional.",
            "description": "URL encode a value or bag of values.",
            "deprecated": false,
            "dataTypeMethodNumber": 28,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "urlEncodeString",
            "brief": "URI encode",
            "afwCamelCaseFunctionLabel": "afwUrlEncodeString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/journal_get_next_for_consumer_after_cursor",
                "objectId": "journal_get_next_for_consumer_after_cursor",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Response object.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "consumerId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The consumerId property value of the associated _AdaptiveProvisioningPeer_ object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "cursor",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Journal entry cursor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "The maximum number of entries that will be scanned for an entry where the consumerFilter expression in the associated _AdaptiveProvisioningPeer_ object evaluates to true.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "journal_get_next_for_consumer_after_cursor",
            "functionId": "journal_get_next_for_consumer_after_cursor",
            "description": "Get the next journal entry for a consumer referenced by the consumer_id after the one specified by the entry_cursor parameter. The limit parameter specifies the maximum number of entries to scan for an applicable entry for consumer before returning.\n\nThis option will set response properties \"entry\" and \"cursor\" if an applicable entry is retrieved.\n\nThe properties of the _AdaptiveProvisioningPeer_ object associated with the consumer_id are used in the following way:\n\nThe consumerFilter expression is used to determine if an entry is applicable.\n\nUnlike option get_next_for_consumer, no other properties are referenced or modified.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "journal",
            "camelCaseFunctionLabel": "journalGetNextForConsumerAfterCursor",
            "brief": "Get next journal entry for consumer after cursor",
            "afwCamelCaseFunctionLabel": "afwJournalGetNextForConsumerAfterCursor"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/evaluate_hybrid",
                "objectId": "evaluate_hybrid",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated adaptive hybrid."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "hybrid",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Hybrid to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveHybridPropertiesObjects_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveHybridPropertiesObjects_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "evaluate_hybrid",
            "functionId": "evaluate_hybrid",
            "description": "Compile a string containing adaptive hybrid syntax which can be an adaptive template or adaptive expression tuple and then evaluate the result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "evaluateHybrid",
            "brief": "Evaluate hybrid",
            "afwCamelCaseFunctionLabel": "afwEvaluateHybrid"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/while",
                "objectId": "while",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 11,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The last value evaluated in body or null if condition evaluates to false the first time."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "condition",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "description": "While this condition is true, the loop will continue.  This is evaluated in the loop's scope.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "body",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "This is a list of values that are evaluated for each iteration of the loop.  Each value in body is evaluated in order until the end of the list or until a \"break\", \"continue\", \"return\" or \"throw\" function is encountered.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "while",
            "functionId": "while",
            "description": "This creates a new structured block with a new nested variable scope.\n\nThis function will evaluate a list of values while a condition is true.  The condition is tested at the beginning of the loop.  If the condition is false for the first iteration, the loop returns a null value.  See the related functions \"break\", \"continue\", \"return\" and \"throw\".",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "while",
            "brief": "Evaluate a list of values while a condition is true",
            "afwCamelCaseFunctionLabel": "afwWhile"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string",
                "objectId": "to_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "dnsName",
                "double",
                "expression",
                "hexBinary",
                "hybrid",
                "ia5String",
                "integer",
                "ipAddress",
                "array",
                "null",
                "object",
                "objectId",
                "objectPath",
                "password",
                "rfc822Name",
                "string",
                "template",
                "time",
                "x500Name",
                "xpathExpression",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "A <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string",
            "functionId": "to_string",
            "description": "Converts <dataType> arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toString",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_hybrid",
                "objectId": "to_string_hybrid",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a hybrid value.",
                    "description": "A hybrid value.",
                    "dataType": "template"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_hybrid",
            "functionId": "to_string<hybrid>",
            "details": "The hybrid:: prefix is optional.",
            "description": "Converts hybrid arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "template",
            "category": "hybrid",
            "camelCaseFunctionLabel": "toStringHybrid",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringHybrid"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_x500Name",
                "objectId": "eqx_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_x500Name",
            "functionId": "eqx<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Checks for x500Name arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "eqxX500Name",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_replace_string",
                "objectId": "regexp_replace_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "A string value with the matched string(s) replaced.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The original string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "A regular expression to use for search.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "replacement",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The replacement string.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum times to replace.  The default is 1.  Specify -1 to replace all occurrences.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_replace_string",
            "functionId": "regexp_replace<string>",
            "details": "The string:: prefix is optional.",
            "description": "Replace matched values for a regular expression in a string value.",
            "deprecated": false,
            "dataTypeMethodNumber": 18,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "regexpReplaceString",
            "brief": "Replace strings matching a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpReplaceString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/let",
                "objectId": "let",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 9,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The value assigned."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "name",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "description": "The name of one or more variables to declared in the current block.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "This is the initial value of the variable(s).  If not specified, the variable will have a value of undefined."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "type",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveValueMeta_ value that is optional.",
                    "description": "The type of the variable(s).",
                    "dataTypeParameter": "_AdaptiveValueMeta_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "let",
            "functionId": "let",
            "description": "Declare one or more statically scoped variable locations local to the current script block and optionally assign them an initial value.  These variables can be accessed and assigned different values from the current block and inner blocks.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "let",
            "brief": "Declare one or more variables in the current block",
            "afwCamelCaseFunctionLabel": "afwLoc"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_anyURI",
                "objectId": "union_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of anyURI value.",
                "dataTypeParameter": "anyURI",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of anyURI value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_anyURI",
            "functionId": "union<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns a list of anyURI contains all of the unique values in two or more list of anyURI args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "unionAnyURI",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_function",
                "objectId": "is_function",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is function.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_function",
            "functionId": "is<function>",
            "description": "Test arg returning boolean True if it is data type function.  Use is_list_of_function() instead to test for a list of function.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "function",
            "camelCaseFunctionLabel": "isFunction",
            "brief": "Checks whether value is dataType function",
            "afwCamelCaseFunctionLabel": "afwIsFunction"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/log",
                "objectId": "log",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "Value written to log"
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to log."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "log",
            "functionId": "log",
            "description": "Evaluate and convert arg to String and log it.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "log",
            "brief": "Log value",
            "afwCamelCaseFunctionLabel": "afwLog"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_x500Name",
                "objectId": "subset_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "description": "The first list.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "description": "The second list.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_x500Name",
            "functionId": "subset<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Returns boolean true if the unique values in x500Name list1 are all in x500Name list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "subsetX500Name",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_x500Name",
                "objectId": "intersection_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of x500Name value.",
                "dataTypeParameter": "x500Name",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "description": "The first list.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "description": "The second list.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_x500Name",
            "functionId": "intersection<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Returns a list of x500Name with the values that are common to both list of x500Name list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "intersectionX500Name",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_yearMonthDuration",
                "objectId": "union_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of yearMonthDuration value.",
                "dataTypeParameter": "yearMonthDuration",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of yearMonthDuration value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_yearMonthDuration",
            "functionId": "union<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Returns a list of yearMonthDuration contains all of the unique values in two or more list of yearMonthDuration args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "unionYearMonthDuration",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/scope_create_time_utc",
                "objectId": "scope_create_time_utc",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "scope_create_time_utc",
            "functionId": "scope_create_time_utc",
            "description": "Return UTC dateTime when scope was created.  This will usually be the start of request time.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "scopeCreateTimeUtc",
            "brief": "Scope local dataTime",
            "afwCamelCaseFunctionLabel": "afwScopeCreateTimeUtc"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_rfc822Name",
                "objectId": "ne_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_rfc822Name",
            "functionId": "ne<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Checks for rfc822Name arg1 is not equal to rfc822Name arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "neRfc822Name",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_double",
                "objectId": "is_in_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_double",
            "functionId": "is_in<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks whether double value is in list of double list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "isInDouble",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/le_date",
                "objectId": "le_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value."
                }
            ],
            "op": "<=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "le_date",
            "functionId": "le<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 is less than or equal to date arg2 and return the boolean result.\n\nIf a date value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 34,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "leDate",
            "brief": "Checks for less than or equal",
            "afwCamelCaseFunctionLabel": "afwLeDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/reader_check",
                "objectId": "reader_check",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Number of stale slots that were cleared.",
                "dataType": "integer"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Adaptor Id.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "reader_check",
            "functionId": "reader_check",
            "description": "Check for stale entries in the reader lock table.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "lmdb",
            "camelCaseFunctionLabel": "readerCheck",
            "afwCamelCaseFunctionLabel": "afwReaderCheck"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_yearMonthDuration",
                "objectId": "eq_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_yearMonthDuration",
            "functionId": "eq<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Checks for yearMonthDuration arg1 is equal to yearMonthDuration arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "eqYearMonthDuration",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/any_of_all",
                "objectId": "any_of_all",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(value1, value2) value.",
                    "description": "The predicate is passed two parameters, the first is a value from list1 and the second is a value from list2.",
                    "dataTypeParameter": "(boolean)(value1, value2)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "any_of_all",
            "functionId": "any_of_all",
            "description": "Returns true if the result of calling predicate with all of the combination of values from list2 and any of the values of list1 returns true.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "anyOfAll",
            "brief": "Combinations of any in list1 and all in list2 true",
            "afwCamelCaseFunctionLabel": "afwAnyOfAll"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/safe_evaluate",
                "objectId": "safe_evaluate",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated adaptive value or error value."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to evaluated"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "error",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to evaluate and return if exception occurs.  If an error occurs evaluating this value, the exception will continue."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "safe_evaluate",
            "functionId": "safe_evaluate",
            "description": "Return the evaluated adaptive value.  If an exception occurs, return evaluated error instead.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "safeEvaluate",
            "brief": "Safe evaluate",
            "afwCamelCaseFunctionLabel": "afwSafeEvaluate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_boolean",
                "objectId": "eq_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_boolean",
            "functionId": "eq<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Checks for boolean arg1 is equal to boolean arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "eqBoolean",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_base64Binary",
                "objectId": "eqx_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a base64Binary value.",
                    "dataType": "base64Binary"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_base64Binary",
            "functionId": "eqx<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Checks for base64Binary arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "eqxBase64Binary",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_double",
                "objectId": "bag_size_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of double value.",
                    "dataTypeParameter": "double",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_double",
            "functionId": "bag_size<double>",
            "details": "The double:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "bagSizeDouble",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_base64Binary",
                "objectId": "subset_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "description": "The first list.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "description": "The second list.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_base64Binary",
            "functionId": "subset<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Returns boolean true if the unique values in base64Binary list1 are all in base64Binary list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "subsetBase64Binary",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_x500Name",
                "objectId": "is_in_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_x500Name",
            "functionId": "is_in<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Checks whether x500Name value is in list of x500Name list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "isInX500Name",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/http_get",
                "objectId": "http_get",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Returns an object describing the response from the HTTP GET request.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "url",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "HTTP Url.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "headers",
                    "minArgs": -1,
                    "details": "This parameter is a list value that is optional.",
                    "description": "HTTP Headers.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "CURL Options",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "http_get",
            "functionId": "http_get",
            "description": "Makes a HTTP GET Request.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "http",
            "camelCaseFunctionLabel": "httpGet",
            "afwCamelCaseFunctionLabel": "afwHttpGet"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compile_json",
                "objectId": "compile_json",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "An unevaluated JSON value ready for use by function evaluate() or a string containing the compiler listing."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "json",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "JSON string to compile.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "listing",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If specified, a compiler listing is produced instead of an unevaluated JSON value.\n\nThis parameter can be an integer between 0 and 10 of a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compile_json",
            "functionId": "compile_json",
            "description": "Compile a string containing adaptive JSON syntax and return either an unevaluated JSON adaptive value or a string containing the compiler listing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "compileJson",
            "brief": "Compile JSON",
            "afwCamelCaseFunctionLabel": "afwCompileJson"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_boolean",
                "objectId": "bag_size_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_boolean",
            "functionId": "bag_size<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "bagSizeBoolean",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/match_rfc822Name",
                "objectId": "match_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a rfc822Name value.",
                    "dataType": "rfc822Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "match_rfc822Name",
            "functionId": "match<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Returns true if arg1 matches some terminal sequence of RDNs from arg2 when compared using equal_rfc822Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 59,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "matchRfc822Name",
            "brief": "Checks if x500Name matches",
            "afwCamelCaseFunctionLabel": "afwMatchRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_integer",
                "objectId": "to_string_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "A integer value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_integer",
            "functionId": "to_string<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Converts integer arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "toStringInteger",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_integer",
                "objectId": "is_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is integer.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_integer",
            "functionId": "is<integer>",
            "description": "Test arg returning boolean True if it is data type integer.  Use is_list_of_integer() instead to test for a list of integer.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "integer",
            "camelCaseFunctionLabel": "isInteger",
            "brief": "Checks whether value is dataType integer",
            "afwCamelCaseFunctionLabel": "afwIsInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_dayTimeDuration",
                "objectId": "intersection_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of dayTimeDuration value.",
                "dataTypeParameter": "dayTimeDuration",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "description": "The first list.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "description": "The second list.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_dayTimeDuration",
            "functionId": "intersection<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Returns a list of dayTimeDuration with the values that are common to both list of dayTimeDuration list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "intersectionDayTimeDuration",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_dnsName",
                "objectId": "bag_size_dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of dnsName value.",
                    "dataTypeParameter": "dnsName",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_dnsName",
            "functionId": "bag_size<dnsName>",
            "details": "The dnsName:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "dnsName",
            "category": "dnsName",
            "camelCaseFunctionLabel": "bagSizeDnsName",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/encode_as_hexBinary",
                "objectId": "encode_as_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a hexBinary value.",
                "description": "A hexBinary value.",
                "dataType": "hexBinary"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to encode."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "encode_as_hexBinary",
            "functionId": "encode_as_hexBinary",
            "description": "Encode a value as a hexBinary.  The effect is to create a hexBinary value with an internal value of the value passed.",
            "deprecated": false,
            "dataTypeMethodNumber": 56,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "encodeAsHexBinary",
            "brief": "Encode to a hexBinary value",
            "afwCamelCaseFunctionLabel": "afwEncodeAsHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/reconcile_object",
                "objectId": "reconcile_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "An object that has been retrieved with object options reconcilable, and whose properties have been modified.  A modify_object request will be produced reflecting the difference between the original object and this unmodified object.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "checkOnly",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "Produce the modify_object request but don't execute it.  The returned journal enter will contain the modify_object request.",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "reconcile_object",
            "functionId": "reconcile_object",
            "description": "Reconcile an adaptive object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "reconcileObject",
            "brief": "Reconcile adaptive object",
            "afwCamelCaseFunctionLabel": "afwReconcileObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_yearMonthDuration",
                "objectId": "eqx_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_yearMonthDuration",
            "functionId": "eqx<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Checks for yearMonthDuration arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "eqxYearMonthDuration",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_rfc822Name",
                "objectId": "subset_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "description": "The first list.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "description": "The second list.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_rfc822Name",
            "functionId": "subset<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Returns boolean true if the unique values in rfc822Name list1 are all in rfc822Name list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "subsetRfc822Name",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/in_range_time",
                "objectId": "in_range_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "time",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "startTime",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "endTime",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "in_range_time",
            "functionId": "in_range<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks if time is between startTime and endTime, inclusive.  Regardless of endTime value, it is always considered to be equal to, but less than 24 hours greater than startTime.  If no time zone is specified for time, the default time zone is used.  If no time zone is specified for startTime or endTime, the time zone of time is used.",
            "deprecated": false,
            "dataTypeMethodNumber": 58,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "inRangeTime",
            "brief": "Checks if time in range",
            "afwCamelCaseFunctionLabel": "afwInRangeTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_match_ipAddress",
                "objectId": "regexp_match_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an ipAddress value.",
                    "dataType": "ipAddress"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_match_ipAddress",
            "functionId": "regexp_match<ipAddress>",
            "details": "The ipAddress:: prefix is optional.",
            "description": "Checks whether ipAddress value matches the regular expression regexp and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 17,
            "dataType": "ipAddress",
            "category": "ipAddress",
            "camelCaseFunctionLabel": "regexpMatchIpAddress",
            "brief": "Search for a match using a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpMatchIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/service_restart",
                "objectId": "service_restart",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveService_ value.",
                "description": "_AdaptiveService_ object for the service which will contain the current status of the service.  If there is an error, the status property value will be \"error\" and \"statusMessage\" contain an error message.",
                "dataTypeParameter": "_AdaptiveService_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "serviceId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The serviceId of the service to restart.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "service_restart",
            "functionId": "service_restart",
            "description": "Restart a service.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "serviceRestart",
            "brief": "Restart service",
            "afwCamelCaseFunctionLabel": "afwServiceRestart"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/last_index_of_anyURI",
                "objectId": "last_index_of_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "The anyURI value to search.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Substring to search for.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "startIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "Optional start index for search if different than start of string.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "last_index_of_anyURI",
            "functionId": "last_index_of<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns the zero-based index into anyURI value of the last occurrence of a subString.  If subString is not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 11,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "lastIndexOfAnyURI",
            "brief": "Returns index of last occurrence",
            "afwCamelCaseFunctionLabel": "afwLastIndexOfAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_dayTimeDuration",
                "objectId": "bag_size_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_dayTimeDuration",
            "functionId": "bag_size<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "bagSizeDayTimeDuration",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_ipAddress_string",
                "objectId": "to_ipAddress_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an ipAddress value.",
                "dataType": "ipAddress"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_ipAddress_string",
            "functionId": "to_ipAddress<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to ipAddress.",
            "deprecated": false,
            "dataTypeMethodNumber": 68,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toIpAddressString",
            "brief": "Converts string to ipAddress",
            "afwCamelCaseFunctionLabel": "afwToIpAddressString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_hexBinary",
                "objectId": "is_in_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_hexBinary",
            "functionId": "is_in<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Checks whether hexBinary value is in list of hexBinary list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "isInHexBinary",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/template",
                "objectId": "template",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a template value.",
                "description": "Converted value",
                "dataType": "template"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "template",
            "functionId": "template",
            "description": "Converts arg to data type template returning template result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "template",
            "camelCaseFunctionLabel": "template",
            "afwCamelCaseFunctionLabel": "afwTemplate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/mod",
                "objectId": "mod",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "integer"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "dividend",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "divisor",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "%",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "mod",
            "functionId": "mod",
            "description": "Divide <dataType> dividend by <dataType> divisor and return the <dataType> remainder.",
            "deprecated": false,
            "dataTypeMethodNumber": 51,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "mod",
            "brief": "Remainder of dividing numbers",
            "afwCamelCaseFunctionLabel": "afwMod"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_dayTimeDuration",
                "objectId": "eqx_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_dayTimeDuration",
            "functionId": "eqx<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Checks for dayTimeDuration arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "eqxDayTimeDuration",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq_dateTime",
                "objectId": "eq_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq_dateTime",
            "functionId": "eq<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 is equal to dateTime arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "eqDateTime",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEqDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_x500Name",
                "objectId": "at_least_one_member_of_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "description": "The first list.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "description": "The second list.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_x500Name",
            "functionId": "at_least_one_member_of<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Returns boolean true if at least one value in x500Name list1 is in x500Name list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "atLeastOneMemberOfX500Name",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_yearMonthDuration",
                "objectId": "bag_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of yearMonthDuration value.",
                "dataTypeParameter": "yearMonthDuration",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of yearMonthDuration value that can be specified 0 or more times.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_yearMonthDuration",
            "functionId": "bag<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Takes any number of yearMonthDuration args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "bagYearMonthDuration",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/evaluate_with_retry",
                "objectId": "evaluate_with_retry",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated value."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to evaluated"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "Maximum number to retry if an exception occurs.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "evaluate_with_retry",
            "functionId": "evaluate_with_retry",
            "description": "Evaluate a value and retry up to a limit if an exception occurs.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "evaluateWithRetry",
            "brief": "Evaluate value with retry",
            "afwCamelCaseFunctionLabel": "afwEvaluateWithRetry"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_boolean",
                "objectId": "union_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of boolean value.",
                "dataTypeParameter": "boolean",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of boolean value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_boolean",
            "functionId": "union<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Returns a list of boolean contains all of the unique values in two or more list of boolean args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "unionBoolean",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_dayTimeDuration",
                "objectId": "set_equals_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of dayTimeDuration value.",
                    "dataTypeParameter": "dayTimeDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_dayTimeDuration",
            "functionId": "set_equals<dayTimeDuration>",
            "details": "The dayTimeDuration:: prefix is optional.",
            "description": "Returns boolean true if dayTimeDuration list1 and dayTimeDuration list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "dayTimeDuration",
            "category": "dayTimeDuration",
            "camelCaseFunctionLabel": "setEqualsDayTimeDuration",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ge_date",
                "objectId": "ge_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a date value.",
                    "dataType": "date"
                }
            ],
            "op": ">=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ge_date",
            "functionId": "ge<date>",
            "details": "The date:: prefix is optional.",
            "description": "Checks for date arg1 is greater than or equal to date arg2 and return the boolean result.\n\nIf a date value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 32,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "geDate",
            "brief": "Checks for greater than or equal",
            "afwCamelCaseFunctionLabel": "afwGeDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_anyURI",
                "objectId": "one_and_only_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_anyURI",
            "functionId": "one_and_only<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type anyURI value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "oneAndOnlyAnyURI",
            "brief": "Converts a one value list to a anyURI value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_match_string",
                "objectId": "regexp_match_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_match_string",
            "functionId": "regexp_match<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks whether string value matches the regular expression regexp and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 17,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "regexpMatchString",
            "brief": "Search for a match using a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpMatchString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_anyURI",
                "objectId": "set_equals_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_anyURI",
            "functionId": "set_equals<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Returns boolean true if anyURI list1 and anyURI list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "setEqualsAnyURI",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_double",
                "objectId": "ne_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_double",
            "functionId": "ne<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 is not equal to double arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "neDouble",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_anyURI",
                "objectId": "to_string_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "A anyURI value.",
                    "dataType": "anyURI"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_anyURI",
            "functionId": "to_string<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Converts anyURI arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "toStringAnyURI",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/max_dateTime",
                "objectId": "max_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a dateTime value that can be specified 1 or more times.",
                    "dataType": "dateTime"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "max_dateTime",
            "functionId": "max<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Return the dateTime arg that is greater than or equal to the others.\n\nIf a dateTime value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 36,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "maxDateTime",
            "brief": "Maximum value",
            "afwCamelCaseFunctionLabel": "afwMaxDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_time",
                "objectId": "bag_size_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_time",
            "functionId": "bag_size<time>",
            "details": "The time:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "bagSizeTime",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/test_script",
                "objectId": "test_script",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Test results.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "id",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "description",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Description of test",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "script",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Script to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expected",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Expected result."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "test_script",
            "functionId": "test_script",
            "description": "Compile and evaluate an adaptive script and compare the results to an expected value.  Return object with the test's results.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "testScript",
            "brief": "Test an adaptive script",
            "afwCamelCaseFunctionLabel": "afwTestScript"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/lt_string",
                "objectId": "lt_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "op": "<",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "lt_string",
            "functionId": "lt<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks for string arg1 is less that string arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 35,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "ltString",
            "brief": "Checks for less than",
            "afwCamelCaseFunctionLabel": "afwLtString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract_dayTimeDuration",
                "objectId": "subtract_dayTimeDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "dateTime"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract_dayTimeDuration",
            "functionId": "subtract_dayTimeDuration",
            "description": "Subtract dayTimeDuration arg2 from <dataType> arg1 and return the <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 38,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "subtractDayTimeDuration",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtractDayTimeDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_rfc822Name",
                "objectId": "bag_size_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_rfc822Name",
            "functionId": "bag_size<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "bagSizeRfc822Name",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/starts_with",
                "objectId": "starts_with",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "starts_with",
            "functionId": "starts_with",
            "description": "Checks whether <dataType> value starts with a subString and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 23,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "startsWith",
            "brief": "Checks whether value starts with a string",
            "afwCamelCaseFunctionLabel": "afwStartsWith"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_base64Binary",
                "objectId": "one_and_only_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a base64Binary value.",
                "dataType": "base64Binary"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_base64Binary",
            "functionId": "one_and_only<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type base64Binary value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "oneAndOnlyBase64Binary",
            "brief": "Converts a one value list to a base64Binary value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_date",
                "objectId": "to_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "dataType": "date"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_date",
            "functionId": "to_date",
            "description": "Converts <dataType> arg to date.",
            "deprecated": false,
            "dataTypeMethodNumber": 64,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toDate",
            "brief": "Converts string to date",
            "afwCamelCaseFunctionLabel": "afwToDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_ipAddress",
                "objectId": "to_ipAddress",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an ipAddress value.",
                "dataType": "ipAddress"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_ipAddress",
            "functionId": "to_ipAddress",
            "description": "Converts <dataType> arg to ipAddress.",
            "deprecated": false,
            "dataTypeMethodNumber": 68,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toIpAddress",
            "brief": "Converts string to ipAddress",
            "afwCamelCaseFunctionLabel": "afwToIpAddress"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/journal_mark_consumed",
                "objectId": "journal_mark_consumed",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "consumerId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The consumerId property value of the associated _AdaptiveProvisioningPeer_ object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "cursor",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Journal entry cursor.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "journal_mark_consumed",
            "functionId": "journal_mark_consumed",
            "description": "Mark a journal entry returned by get_next_for_consumer() as consumed.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "journal",
            "camelCaseFunctionLabel": "journalMarkConsumed",
            "brief": "Mark journal entry consumed",
            "afwCamelCaseFunctionLabel": "afwJournalMarkConsumed"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/any_of_any",
                "objectId": "any_of_any",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(value1, value2) value.",
                    "description": "The predicate is passed two parameters, the first is a value from list1 and the second is a value from list2.",
                    "dataTypeParameter": "(boolean)(value1, value2)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "any_of_any",
            "functionId": "any_of_any",
            "description": "This function returns true if the result of calling predicate with any of the combination of values from list1 and list2 returns true.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "anyOfAny",
            "brief": "Any combinations true",
            "afwCamelCaseFunctionLabel": "afwAnyOfAny"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_x500Name_string",
                "objectId": "to_x500Name_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a x500Name value.",
                "dataType": "x500Name"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_x500Name_string",
            "functionId": "to_x500Name<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to x500Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 71,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toX500NameString",
            "brief": "Converts string to x500Name",
            "afwCamelCaseFunctionLabel": "afwToX500NameString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_anyURI",
                "objectId": "is_in_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_anyURI",
            "functionId": "is_in<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks whether anyURI value is in list of anyURI list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "isInAnyURI",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/lt_dateTime",
                "objectId": "lt_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                }
            ],
            "op": "<",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "lt_dateTime",
            "functionId": "lt<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Checks for dateTime arg1 is less that dateTime arg2 and return the boolean result.\n\nIf a dateTime value does not include a time-zone value, then the local time-zone value will be assigned.",
            "deprecated": false,
            "dataTypeMethodNumber": 35,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "ltDateTime",
            "brief": "Checks for less than",
            "afwCamelCaseFunctionLabel": "afwLtDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/multiply_integer",
                "objectId": "multiply_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 2,
                    "details": "This parameter is an integer value that can be specified 2 or more times.",
                    "dataType": "integer"
                }
            ],
            "op": "*",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "multiply_integer",
            "functionId": "multiply<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Multiply 2 or more integer args and return the integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 45,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "multiplyInteger",
            "brief": "Multiply numbers",
            "afwCamelCaseFunctionLabel": "afwMultiplyInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_rfc822Name",
                "objectId": "intersection_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of rfc822Name value.",
                "dataTypeParameter": "rfc822Name",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "description": "The first list.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of rfc822Name value.",
                    "description": "The second list.",
                    "dataTypeParameter": "rfc822Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_rfc822Name",
            "functionId": "intersection<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "Returns a list of rfc822Name with the values that are common to both list of rfc822Name list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "intersectionRfc822Name",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/evaluate_expression_tuple",
                "objectId": "evaluate_expression_tuple",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated adaptive expression tuple."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expression_tuple",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Expression tuple to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveHybridPropertiesObjects_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveHybridPropertiesObjects_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "evaluate_expression_tuple",
            "functionId": "evaluate_expression_tuple",
            "description": "Compile a string containing adaptive expression tuple syntax and then evaluate the result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "evaluateExpressionTuple",
            "brief": "Evaluate expression tuple",
            "afwCamelCaseFunctionLabel": "afwEvaluateExpressionTuple"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_string",
                "objectId": "is_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "True if arg is string.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to check"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_string",
            "functionId": "is<string>",
            "description": "Test arg returning boolean True if it is data type string.  Use is_list_of_string() instead to test for a list of string.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "string",
            "camelCaseFunctionLabel": "isString",
            "brief": "Checks whether value is dataType string",
            "afwCamelCaseFunctionLabel": "afwIsString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/replace_object",
                "objectId": "replace_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor containing object to replace.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of object to replace.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of object to replace.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Replacement object.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_replace_object\n\nWhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "replace_object",
            "functionId": "replace_object",
            "description": "Replace an adaptive object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "replaceObject",
            "brief": "Replace adaptive object",
            "afwCamelCaseFunctionLabel": "afwReplaceObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_hexBinary",
                "objectId": "union_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of hexBinary value.",
                "dataTypeParameter": "hexBinary",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of hexBinary value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_hexBinary",
            "functionId": "union<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Returns a list of hexBinary contains all of the unique values in two or more list of hexBinary args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "unionHexBinary",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_date",
                "objectId": "set_equals_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_date",
            "functionId": "set_equals<date>",
            "details": "The date:: prefix is optional.",
            "description": "Returns boolean true if date list1 and date list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "setEqualsDate",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eq",
                "objectId": "eq",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eq",
            "functionId": "eq",
            "description": "Checks for <dataType> arg1 is equal to <dataType> arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 6,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "eq",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwEq"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection",
                "objectId": "intersection",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": true,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of <dataType> value.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "base64Binary",
                "boolean",
                "date",
                "dateTime",
                "dayTimeDuration",
                "double",
                "hexBinary",
                "integer",
                "rfc822Name",
                "string",
                "time",
                "x500Name",
                "yearMonthDuration"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "description": "The first list.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": true,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of <dataType> value.",
                    "description": "The second list.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection",
            "functionId": "intersection",
            "description": "Returns a list of <dataType> with the values that are common to both list of <dataType> list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "intersection",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersection"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/concat",
                "objectId": "concat",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 2,
                    "details": "This parameter is an untyped value that can be specified 2 or more times."
                }
            ],
            "op": "..",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "concat",
            "functionId": "concat",
            "details": "The string:: prefix is optional.",
            "description": "Concatenate the string value of two or more args of any dataType and return the string result.  An arg with an undefined value is represented by '<undefined>'.",
            "deprecated": false,
            "dataTypeMethodNumber": 73,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "concat",
            "brief": "Concatenate string values",
            "afwCamelCaseFunctionLabel": "afwConcat"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_anyURI",
                "objectId": "bag_size_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of anyURI value.",
                    "dataTypeParameter": "anyURI",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_anyURI",
            "functionId": "bag_size<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "bagSizeAnyURI",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/union_string",
                "objectId": "union_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of string value.",
                "dataTypeParameter": "string",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "lists",
                    "minArgs": 2,
                    "details": "This parameter is a list of string value that can be specified 2 or more times.",
                    "description": "Two or more lists.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "union_string",
            "functionId": "union<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns a list of string contains all of the unique values in two or more list of string args.",
            "deprecated": false,
            "dataTypeMethodNumber": 27,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "unionString",
            "brief": "Returns union of two or more string lists",
            "afwCamelCaseFunctionLabel": "afwUnionString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/boolean",
                "objectId": "boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "Converted value",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "boolean",
            "functionId": "boolean",
            "description": "Converts arg to data type boolean returning boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "boolean",
            "camelCaseFunctionLabel": "boolean",
            "afwCamelCaseFunctionLabel": "afwBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/length",
                "objectId": "length",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "Returns number of code points in single <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "length",
            "functionId": "length",
            "description": "This is a polymorphic function where <dataType> can be any of the supported data types.  Return the integer number of codepoints in arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 12,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "length",
            "brief": "Returns number of codepoints in value",
            "afwCamelCaseFunctionLabel": "afwLength"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/round_double",
                "objectId": "round_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "round_double",
            "functionId": "round<double>",
            "details": "The double:: prefix is optional.",
            "description": "Determine the integer closest to double arg and return the double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 48,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "roundDouble",
            "brief": "Round to nearest integer",
            "afwCamelCaseFunctionLabel": "afwRoundDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/dnsName",
                "objectId": "dnsName",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dnsName value.",
                "description": "Converted value",
                "dataType": "dnsName"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "dnsName",
            "functionId": "dnsName",
            "description": "Converts arg to data type dnsName returning dnsName result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "dnsName",
            "camelCaseFunctionLabel": "dnsName",
            "afwCamelCaseFunctionLabel": "afwDnsName"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/evaluate_script",
                "objectId": "evaluate_script",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated adaptive script."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "script",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "script to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveHybridPropertiesObjects_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveHybridPropertiesObjects_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "evaluate_script",
            "functionId": "evaluate_script",
            "description": "Compile a string containing adaptive script syntax and then evaluate the result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "evaluateScript",
            "brief": "Evaluate script",
            "afwCamelCaseFunctionLabel": "afwEvaluateScript"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/print",
                "objectId": "print",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "Value written"
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to print."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "print",
            "functionId": "print",
            "description": "Evaluate and convert arg to String and print it.  An arg with an undefined value is represented by '<undefined>'.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "print",
            "brief": "Print value",
            "afwCamelCaseFunctionLabel": "afwPrint"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/lt_integer",
                "objectId": "lt_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "op": "<",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "lt_integer",
            "functionId": "lt<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Checks for integer arg1 is less that integer arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 35,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "ltInteger",
            "brief": "Checks for less than",
            "afwCamelCaseFunctionLabel": "afwLtInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_integer",
                "objectId": "to_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_integer",
            "functionId": "to_integer",
            "description": "Truncate <dataType> arg to a whole number and returns integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 50,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toInteger",
            "brief": "Converts to integer",
            "afwCamelCaseFunctionLabel": "afwToInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_rfc822Name_string",
                "objectId": "to_rfc822Name_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a rfc822Name value.",
                "dataType": "rfc822Name"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_rfc822Name_string",
            "functionId": "to_rfc822Name<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to rfc822Name.",
            "deprecated": false,
            "dataTypeMethodNumber": 69,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toRfc822NameString",
            "brief": "Converts string to rfc822Name",
            "afwCamelCaseFunctionLabel": "afwToRfc822NameString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/not",
                "objectId": "not",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "dataType": "boolean"
                }
            ],
            "op": "!",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "not",
            "functionId": "not",
            "description": "Evaluates boolean arg1 returning boolean true if arg1 evaluates to false and false if arg1 evaluates to true.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "logical",
            "camelCaseFunctionLabel": "not",
            "brief": "Logical not",
            "afwCamelCaseFunctionLabel": "afwNot"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/nex_hexBinary",
                "objectId": "nex_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                }
            ],
            "op": "!==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "nex_hexBinary",
            "functionId": "nex<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Checks for hexBinary arg1 not equal to value or data type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 14,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "nexHexBinary",
            "brief": "Checks for not equal value or type",
            "afwCamelCaseFunctionLabel": "afwNexHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_index_of",
                "objectId": "regexp_index_of",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to search."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "A regular expression to use for search.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_index_of",
            "functionId": "regexp_index_of",
            "description": "Search <dataType> value for a regular expression and return index.  If not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 16,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "regexpIndexOf",
            "brief": "Returns index of first match of regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpIndexOf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/normalize_to_lower_case",
                "objectId": "normalize_to_lower_case",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "normalize_to_lower_case",
            "functionId": "normalize_to_lower_case",
            "description": "Normalize <dataType> arg to lower case and returns <dataType> result.",
            "deprecated": false,
            "dataTypeMethodNumber": 61,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "normalizeToLowerCase",
            "brief": "Converts to lower case",
            "afwCamelCaseFunctionLabel": "afwNormalizeToLowerCase"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_x500Name",
                "objectId": "bag_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of x500Name value.",
                "dataTypeParameter": "x500Name",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of x500Name value that can be specified 0 or more times.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_x500Name",
            "functionId": "bag<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Takes any number of x500Name args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "bagX500Name",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compile_expression",
                "objectId": "compile_expression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "An unevaluated expression value ready for use by function evaluate() or a string containing the compiler listing."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expression",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Expression to compile",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "listing",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If specified, a compiler listing is produced instead of an unevaluated expression value.\n\nThis parameter can be an integer between 0 and 10 of a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compile_expression",
            "functionId": "compile_expression",
            "description": "Compile a string containing adaptive expression syntax and return either an unevaluated expression adaptive value or a string containing the compiler listing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "compileExpression",
            "brief": "Compile adaptive expression",
            "afwCamelCaseFunctionLabel": "afwCompileExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/splunk_log",
                "objectId": "splunk_log",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "url",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Splunk URL",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "hecToken",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Splunk client authentication hecToken",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "requestChannel",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Splunk request channel ID for raw message.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "message",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Message to log to splunk.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "splunk_log",
            "functionId": "splunk_log",
            "description": "Sends a raw message to splunk.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "splunk",
            "camelCaseFunctionLabel": "splunkLog",
            "afwCamelCaseFunctionLabel": "afwSplunkLog"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/contains",
                "objectId": "contains",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "anyURI",
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "contains",
            "functionId": "contains",
            "description": "Checks whether <dataType> value contains a <dataType> and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 4,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "contains",
            "brief": "Checks whether <dataType> value includes a string",
            "afwCamelCaseFunctionLabel": "afwContains"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subset_hexBinary",
                "objectId": "subset_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "description": "The first list.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "description": "The second list.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subset_hexBinary",
            "functionId": "subset<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Returns boolean true if the unique values in hexBinary list1 are all in hexBinary list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 24,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "subsetHexBinary",
            "brief": "Determines if the first list is a subset of second list",
            "afwCamelCaseFunctionLabel": "afwSubsetHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_base64Binary",
                "objectId": "intersection_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of base64Binary value.",
                "dataTypeParameter": "base64Binary",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "description": "The first list.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "description": "The second list.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_base64Binary",
            "functionId": "intersection<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Returns a list of base64Binary with the values that are common to both list of base64Binary list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "intersectionBase64Binary",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_x500Name",
                "objectId": "ne_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_x500Name",
            "functionId": "ne<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Checks for x500Name arg1 is not equal to x500Name arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "neX500Name",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/find",
                "objectId": "find",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The first value that passes the test is returned."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "predicate",
                    "minArgs": -1,
                    "details": "This parameter is a function (boolean)(...) value.",
                    "description": "This is a boolean function that is called to determine if a list entry passes the test.",
                    "dataTypeParameter": "(boolean)(...)",
                    "dataType": "function"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is an untyped value that can be specified 1 or more times.",
                    "description": "These are the args passed to the predicate with the exception that the first list is passed as the single current value from the list.  At least one list is required."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "find",
            "functionId": "find",
            "description": "The predicate is called for each value in the first list in args until true is returned, then that value is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "higher_order_array",
            "camelCaseFunctionLabel": "find",
            "brief": "Returns the first value in a list that passes a test",
            "afwCamelCaseFunctionLabel": "afwFind"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/subtract_dayTimeDuration_dateTime",
                "objectId": "subtract_dayTimeDuration_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "subtract_dayTimeDuration_dateTime",
            "functionId": "subtract_dayTimeDuration<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Subtract dayTimeDuration arg2 from dateTime arg1 and return the dateTime result.",
            "deprecated": false,
            "dataTypeMethodNumber": 38,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "subtractDayTimeDurationDateTime",
            "brief": "Subtract numbers",
            "afwCamelCaseFunctionLabel": "afwSubtractDayTimeDurationDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/debug",
                "objectId": "debug",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "Value written"
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to print."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "detail",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If true the value will only print if the debug:function_active:detail flag is on."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "debug",
            "functionId": "debug",
            "description": "Print the value if the debug:function_active or debug:function_active:detail is flag on.  A undefined value is represented by '<undefined>'.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "debug",
            "brief": "Print value if a debug:print* flag is on",
            "afwCamelCaseFunctionLabel": "afwDebug"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_anyURI",
                "objectId": "ne_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "dataType": "anyURI"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_anyURI",
            "functionId": "ne<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Checks for anyURI arg1 is not equal to anyURI arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "neAnyURI",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_integer_double",
                "objectId": "to_integer_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_integer_double",
            "functionId": "to_integer<double>",
            "details": "The double:: prefix is optional.",
            "description": "Truncate double arg to a whole number and returns integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 50,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "toIntegerDouble",
            "brief": "Converts to integer",
            "afwCamelCaseFunctionLabel": "afwToIntegerDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_rfc822Name",
                "objectId": "one_and_only_rfc822Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a rfc822Name value.",
                "dataType": "rfc822Name"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_rfc822Name",
            "functionId": "one_and_only<rfc822Name>",
            "details": "The rfc822Name:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type rfc822Name value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "rfc822Name",
            "category": "rfc822Name",
            "camelCaseFunctionLabel": "oneAndOnlyRfc822Name",
            "brief": "Converts a one value list to a rfc822Name value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyRfc822Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ge",
                "objectId": "ge",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime",
                "double",
                "integer",
                "string",
                "time"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": ">=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ge",
            "functionId": "ge",
            "description": "Checks for <dataType> arg1 is greater than or equal to <dataType> arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 32,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "ge",
            "brief": "Checks for greater than or equal",
            "afwCamelCaseFunctionLabel": "afwGe"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/lt_time",
                "objectId": "lt_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "op": "<",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "lt_time",
            "functionId": "lt<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 is less that time arg2 and return the boolean result.\n\nIt is illegal to compare a time that includes a time-zone value with one that does not.  In such cases, the in_range<time> function should be used.",
            "deprecated": false,
            "dataTypeMethodNumber": 35,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "ltTime",
            "brief": "Checks for less than",
            "afwCamelCaseFunctionLabel": "afwLtTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/x500Name",
                "objectId": "x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a x500Name value.",
                "description": "Converted value",
                "dataType": "x500Name"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "x500Name",
            "functionId": "x500Name",
            "description": "Converts arg to data type x500Name returning x500Name result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "x500Name",
            "camelCaseFunctionLabel": "x500Name",
            "afwCamelCaseFunctionLabel": "afwX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_x500Name",
                "objectId": "bag_size_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_x500Name",
            "functionId": "bag_size<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "bagSizeX500Name",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_date",
                "objectId": "one_and_only_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a date value.",
                "dataType": "date"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_date",
            "functionId": "one_and_only<date>",
            "details": "The date:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type date value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "oneAndOnlyDate",
            "brief": "Converts a one value list to a date value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_list",
                "objectId": "to_string_list",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "A list value.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_list",
            "functionId": "to_string<list>",
            "details": "The list:: prefix is optional.",
            "description": "Converts list arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "array",
            "category": "array",
            "camelCaseFunctionLabel": "toStringList",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringList"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/last_index_of_string",
                "objectId": "last_index_of_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "Zero-based index of subString or -1 if not found.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string value to search.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "subString",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Substring to search for.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "startIndex",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "Optional start index for search if different than start of string.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "last_index_of_string",
            "functionId": "last_index_of<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns the zero-based index into string value of the last occurrence of a subString.  If subString is not found, -1 is returned.",
            "deprecated": false,
            "dataTypeMethodNumber": 11,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "lastIndexOfString",
            "brief": "Returns index of last occurrence",
            "afwCamelCaseFunctionLabel": "afwLastIndexOfString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/object",
                "objectId": "object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Converted value",
                "dataType": "object"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "object",
            "functionId": "object",
            "description": "Converts arg to data type object returning object result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "object",
            "afwCamelCaseFunctionLabel": "afwObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/length_anyURI",
                "objectId": "length_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "Returns number of code points in single anyURI value.",
                    "dataType": "anyURI"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "length_anyURI",
            "functionId": "length<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "This is a polymorphic function where anyURI can be any of the supported data types.  Return the integer number of codepoints in arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 12,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "lengthAnyURI",
            "brief": "Returns number of codepoints in value",
            "afwCamelCaseFunctionLabel": "afwLengthAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/gt",
                "objectId": "gt",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "date",
                "dateTime",
                "double",
                "integer",
                "string",
                "time"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": ">",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "gt",
            "functionId": "gt",
            "description": "Checks for <dataType> arg1 is greater than <dataType> arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 33,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "gt",
            "brief": "Checks for greater than",
            "afwCamelCaseFunctionLabel": "afwGt"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/perform",
                "objectId": "perform",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveResponse_ value.",
                "description": "Response object.",
                "dataTypeParameter": "_AdaptiveResponse_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "request",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveActions_ value.",
                    "description": "See /afw/_AdaptiveObjectType_/_AdaptiveActions_ for more information.",
                    "dataTypeParameter": "_AdaptiveActions_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "perform",
            "functionId": "perform",
            "description": "Perform actions right away.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "miscellaneous",
            "camelCaseFunctionLabel": "perform",
            "brief": "Perform actions",
            "afwCamelCaseFunctionLabel": "afwPerform"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/reverse",
                "objectId": "reverse",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list value.",
                "description": "A list with elements reversed.",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "A list to reverse.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "reverse",
            "functionId": "reverse",
            "details": "The list:: prefix is optional.",
            "description": "Reverse the order of the elements in a list.  If the list is typed, the resulting list will be the same type.",
            "deprecated": false,
            "dataTypeMethodNumber": 54,
            "dataType": "array",
            "category": "array",
            "camelCaseFunctionLabel": "reverse",
            "brief": "Return list with elements reversed",
            "afwCamelCaseFunctionLabel": "afwReverse"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_hexBinary",
                "objectId": "intersection_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of hexBinary value.",
                "dataTypeParameter": "hexBinary",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "description": "The first list.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of hexBinary value.",
                    "description": "The second list.",
                    "dataTypeParameter": "hexBinary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_hexBinary",
            "functionId": "intersection<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Returns a list of hexBinary with the values that are common to both list of hexBinary list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "intersectionHexBinary",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_time",
                "objectId": "is_in_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of time value.",
                    "dataTypeParameter": "time",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_time",
            "functionId": "is_in<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks whether time value is in list of time list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "isInTime",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_time",
                "objectId": "ne_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_time",
            "functionId": "ne<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 is not equal to time arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "neTime",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_x500Name",
                "objectId": "one_and_only_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a x500Name value.",
                "dataType": "x500Name"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_x500Name",
            "functionId": "one_and_only<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type x500Name value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "oneAndOnlyX500Name",
            "brief": "Converts a one value list to a x500Name value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/abs_integer",
                "objectId": "abs_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "abs_integer",
            "functionId": "abs<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Compute the absolute value of the integer arg and return the integer result.",
            "deprecated": false,
            "dataTypeMethodNumber": 40,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "absInteger",
            "brief": "Absolute value",
            "afwCamelCaseFunctionLabel": "afwAbsInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/regexp_match_x500Name",
                "objectId": "regexp_match_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a x500Name value.",
                    "dataType": "x500Name"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "regexp",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "regexp_match_x500Name",
            "functionId": "regexp_match<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Checks whether x500Name value matches the regular expression regexp and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 17,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "regexpMatchX500Name",
            "brief": "Search for a match using a regular expression",
            "afwCamelCaseFunctionLabel": "afwRegexpMatchX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/delete_object",
                "objectId": "delete_object",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveJournalEntry_ value.",
                "description": "Resulting journal entry.",
                "dataTypeParameter": "_AdaptiveJournalEntry_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptor containing object to delete.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of adaptive object type of object to delete.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Id of object to delete.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "journal",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "The properties of this object will be added to the associated journal entry.  Refer to /afw/_AdaptiveObjectType_/_AdaptiveJournalEntry_ for property names to avoid and for ones that have specific semantics.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "adaptorTypeSpecific",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "This is an optional object parameter with an objectType determined by the adaptorType associated with the adaptorId parameter.  If the adaptorType supports this parameter, adaptor afw will have an adaptive object type with an id of:\n\n_AdaptiveAdaptorTypeSpecific_${adaptorType}_delete_object\n\nwhere ${adaptorType} is the adaptor type id.",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "delete_object",
            "functionId": "delete_object",
            "description": "Delete an adaptive object.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "adaptor",
            "camelCaseFunctionLabel": "deleteObject",
            "brief": "Delete adaptive object",
            "afwCamelCaseFunctionLabel": "afwDeleteObject"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_string",
                "objectId": "one_and_only_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_string",
            "functionId": "one_and_only<string>",
            "details": "The string:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type string value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "oneAndOnlyString",
            "brief": "Converts a one value list to a string value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_string",
                "objectId": "set_equals_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_string",
            "functionId": "set_equals<string>",
            "details": "The string:: prefix is optional.",
            "description": "Returns boolean true if string list1 and string list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "setEqualsString",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_xpathExpression",
                "objectId": "to_string_xpathExpression",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a xpathExpression value.",
                    "description": "A xpathExpression value.",
                    "dataType": "xpathExpression"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_xpathExpression",
            "functionId": "to_string<xpathExpression>",
            "details": "The xpathExpression:: prefix is optional.",
            "description": "Converts xpathExpression arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "xpathExpression",
            "category": "xpathExpression",
            "camelCaseFunctionLabel": "toStringXpathExpression",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringXpathExpression"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_yearMonthDuration",
                "objectId": "is_in_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a yearMonthDuration value.",
                    "dataType": "yearMonthDuration"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_yearMonthDuration",
            "functionId": "is_in<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Checks whether yearMonthDuration value is in list of yearMonthDuration list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "isInYearMonthDuration",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_dateTime",
                "objectId": "to_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_dateTime",
            "functionId": "to_dateTime",
            "description": "Converts <dataType> arg to dateTime.",
            "deprecated": false,
            "dataTypeMethodNumber": 65,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "toDateTime",
            "brief": "Converts string to dateTime",
            "afwCamelCaseFunctionLabel": "afwToDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_string",
                "objectId": "to_string_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "A string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_string",
            "functionId": "to_string<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toStringString",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/one_and_only_yearMonthDuration",
                "objectId": "one_and_only_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a yearMonthDuration value.",
                "dataType": "yearMonthDuration"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of list value.",
                    "dataTypeParameter": "array",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "one_and_only_yearMonthDuration",
            "functionId": "one_and_only<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "This converts a list list  that contains one value to a data type yearMonthDuration value.",
            "deprecated": false,
            "dataTypeMethodNumber": 15,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "oneAndOnlyYearMonthDuration",
            "brief": "Converts a one value list to a yearMonthDuration value",
            "afwCamelCaseFunctionLabel": "afwOneAndOnlyYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/evaluate_template",
                "objectId": "evaluate_template",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "Evaluated adaptive template."
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "template",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Template to compile and evaluate.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "additionalContext",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveHybridPropertiesObjects_ value that is optional.",
                    "description": "Additional context to use first during evaluation.",
                    "dataTypeParameter": "_AdaptiveHybridPropertiesObjects_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "evaluate_template",
            "functionId": "evaluate_template",
            "description": "Compile a string containing adaptive template syntax and then evaluate the result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "evaluateTemplate",
            "brief": "Evaluate template",
            "afwCamelCaseFunctionLabel": "afwEvaluateTemplate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_yearMonthDuration",
                "objectId": "at_least_one_member_of_yearMonthDuration",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "description": "The first list.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of yearMonthDuration value.",
                    "description": "The second list.",
                    "dataTypeParameter": "yearMonthDuration",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_yearMonthDuration",
            "functionId": "at_least_one_member_of<yearMonthDuration>",
            "details": "The yearMonthDuration:: prefix is optional.",
            "description": "Returns boolean true if at least one value in yearMonthDuration list1 is in yearMonthDuration list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "yearMonthDuration",
            "category": "yearMonthDuration",
            "camelCaseFunctionLabel": "atLeastOneMemberOfYearMonthDuration",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfYearMonthDuration"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ia5String",
                "objectId": "ia5String",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an ia5String value.",
                "description": "Converted value",
                "dataType": "ia5String"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ia5String",
            "functionId": "ia5String",
            "description": "Converts arg to data type ia5String returning ia5String result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "ia5String",
            "camelCaseFunctionLabel": "ia5String",
            "afwCamelCaseFunctionLabel": "afwIa5String"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_integer",
                "objectId": "bag_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of integer value.",
                "dataTypeParameter": "integer",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a list of integer value that can be specified 0 or more times.",
                    "dataTypeParameter": "integer",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_integer",
            "functionId": "bag<integer>",
            "details": "The integer:: prefix is optional.",
            "description": "Takes any number of integer args and returns a list of list.",
            "deprecated": false,
            "dataTypeMethodNumber": 2,
            "dataType": "integer",
            "category": "integer",
            "camelCaseFunctionLabel": "bagInteger",
            "brief": "Makes a list from args",
            "afwCamelCaseFunctionLabel": "afwBagInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/double",
                "objectId": "double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "description": "Converted value",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "double",
            "functionId": "double",
            "description": "Converts arg to data type double returning double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "double",
            "camelCaseFunctionLabel": "double",
            "afwCamelCaseFunctionLabel": "afwDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/ne_hexBinary",
                "objectId": "ne_hexBinary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a hexBinary value.",
                    "dataType": "hexBinary"
                }
            ],
            "op": "!=",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "ne_hexBinary",
            "functionId": "ne<hexBinary>",
            "details": "The hexBinary:: prefix is optional.",
            "description": "Checks for hexBinary arg1 is not equal to hexBinary arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 13,
            "dataType": "hexBinary",
            "category": "hexBinary",
            "camelCaseFunctionLabel": "neHexBinary",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwNeHexBinary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/hybrid",
                "objectId": "hybrid",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a hybrid value.",
                "description": "Converted value",
                "dataType": "template"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value.",
                    "description": "Value to convert"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "hybrid",
            "functionId": "hybrid",
            "description": "Converts arg to data type hybrid returning hybrid result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "hybrid",
            "camelCaseFunctionLabel": "hybrid",
            "afwCamelCaseFunctionLabel": "afwHybrid"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_dateTime_string",
                "objectId": "to_dateTime_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_dateTime_string",
            "functionId": "to_dateTime<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to dateTime.",
            "deprecated": false,
            "dataTypeMethodNumber": 65,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toDateTimeString",
            "brief": "Converts string to dateTime",
            "afwCamelCaseFunctionLabel": "afwToDateTimeString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/add_dayTimeDuration_dateTime",
                "objectId": "add_dayTimeDuration_dateTime",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dateTime value.",
                "dataType": "dateTime"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a dateTime value.",
                    "dataType": "dateTime"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a dayTimeDuration value.",
                    "dataType": "dayTimeDuration"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "add_dayTimeDuration_dateTime",
            "functionId": "add_dayTimeDuration<dateTime>",
            "details": "The dateTime:: prefix is optional.",
            "description": "Add dateTime arg1 to dayTimeDuration arg2 and return the dateTime result.",
            "deprecated": false,
            "dataTypeMethodNumber": 30,
            "dataType": "dateTime",
            "category": "dateTime",
            "camelCaseFunctionLabel": "addDayTimeDurationDateTime",
            "brief": "Add duration",
            "afwCamelCaseFunctionLabel": "afwAddDayTimeDurationDateTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/is_in_string",
                "objectId": "is_in_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "array",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "is_in_string",
            "functionId": "is_in<string>",
            "details": "The string:: prefix is optional.",
            "description": "Checks whether string value is in list of string list and returns the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 10,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "isInString",
            "brief": "Checks whether a value is in a list",
            "afwCamelCaseFunctionLabel": "afwIsInString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/eqx_double",
                "objectId": "eqx_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "op": "===",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "eqx_double",
            "functionId": "eqx<double>",
            "details": "The double:: prefix is optional.",
            "description": "Checks for double arg1 is equal to value and type of arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 7,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "eqxDouble",
            "brief": "Checks for equal and type",
            "afwCamelCaseFunctionLabel": "afwEqxDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/gt_time",
                "objectId": "gt_time",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a time value.",
                    "dataType": "time"
                }
            ],
            "op": ">",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "gt_time",
            "functionId": "gt<time>",
            "details": "The time:: prefix is optional.",
            "description": "Checks for time arg1 is greater than time arg2 and return the boolean result.\n\nIt is illegal to compare a time that includes a time-zone value with one that does not.  In such cases, the in_range<time> function should be used.",
            "deprecated": false,
            "dataTypeMethodNumber": 33,
            "dataType": "time",
            "category": "time",
            "camelCaseFunctionLabel": "gtTime",
            "brief": "Checks for greater than",
            "afwCamelCaseFunctionLabel": "afwGtTime"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_ia5String",
                "objectId": "to_string_ia5String",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an ia5String value.",
                    "description": "A ia5String value.",
                    "dataType": "ia5String"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_ia5String",
            "functionId": "to_string<ia5String>",
            "details": "The ia5String:: prefix is optional.",
            "description": "Converts ia5String arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "ia5String",
            "category": "ia5String",
            "camelCaseFunctionLabel": "toStringIa5String",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringIa5String"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/if",
                "objectId": "if",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 8,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "The result of evaluating \"then\" or \"else\""
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "condition",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value.",
                    "description": "If true, parameter \"then\" is evaluated for result.  If false, parameter \"else\" is evaluated.",
                    "dataType": "boolean"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "then",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "This is the body of a structured block that is evaluated if \"condition\" is true.  See the \"body\" parameter of the \"block\" function for information on how the body is processed.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "else",
                    "minArgs": -1,
                    "details": "This parameter is a list value that is optional.",
                    "description": "This is the body of a structured block that is evaluated if \"condition\" is false.  If not specified and condition is false, a null value is returned.  See the \"body\" parameter of the \"block\" function for information on how the body is processed.",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "if",
            "functionId": "if",
            "description": "Evaluate one of two different values depending on test condition.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "script",
            "camelCaseFunctionLabel": "if",
            "brief": "If/then/else function",
            "afwCamelCaseFunctionLabel": "afwIf"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/abs_double",
                "objectId": "abs_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a double value.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "abs_double",
            "functionId": "abs<double>",
            "details": "The double:: prefix is optional.",
            "description": "Compute the absolute value of the double arg and return the double result.",
            "deprecated": false,
            "dataTypeMethodNumber": 40,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "absDouble",
            "brief": "Absolute value",
            "afwCamelCaseFunctionLabel": "afwAbsDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/negative",
                "objectId": "negative",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double",
                "integer"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value."
                }
            ],
            "op": "-",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "negative",
            "functionId": "negative",
            "description": "Return negative of <dataType> arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 46,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "negative",
            "brief": "Negative of a number",
            "afwCamelCaseFunctionLabel": "afwNegative"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/replace_anyURI",
                "objectId": "replace_anyURI",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an anyURI value.",
                "description": "A anyURI value with the matched string(s) replaced.",
                "dataType": "anyURI"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is an anyURI value.",
                    "description": "The original anyURI value.",
                    "dataType": "anyURI"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "match",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The string to replace.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "replacement",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The replacement string.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "limit",
                    "minArgs": -1,
                    "details": "This parameter is an integer value that is optional.",
                    "description": "This is the maximum times to replace.  The default is 1.  Specify -1 to replace all occurrences.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "replace_anyURI",
            "functionId": "replace<anyURI>",
            "details": "The anyURI:: prefix is optional.",
            "description": "Replace string(s) in a anyURI value.",
            "deprecated": false,
            "dataTypeMethodNumber": 20,
            "dataType": "anyURI",
            "category": "anyURI",
            "camelCaseFunctionLabel": "replaceAnyURI",
            "brief": "Replace strings",
            "afwCamelCaseFunctionLabel": "afwReplaceAnyURI"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_string",
                "objectId": "bag_size_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of string value.",
                    "dataTypeParameter": "string",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_string",
            "functionId": "bag_size<string>",
            "details": "The string:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "bagSizeString",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/service_start",
                "objectId": "service_start",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveService_ value.",
                "description": "_AdaptiveService_ object for the service which will contain the current status of the service.  If there is an error, the status property value will be \"error\" and \"statusMessage\" contain an error message.",
                "dataTypeParameter": "_AdaptiveService_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "serviceId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "The serviceId of the service to start",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "service_start",
            "functionId": "service_start",
            "description": "Start a service.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "serviceStart",
            "brief": "Start service",
            "afwCamelCaseFunctionLabel": "afwServiceStart"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/registry_key_check",
                "objectId": "registry_key_check",
                "objectType": "_AdaptiveFunction_"
            },
            "sideEffects": [
                "The loading of the extension may add environment registry entries as well as make other changes."
            ],
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "description": "If false the extension was already loaded.  If true, the extension was successfully loaded which might have caused side effects such as environment registry changes.  An error is thrown if there is a problem.",
                "dataType": "boolean"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "registryType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the registry type, which is the object id of a /afw/_AdaptiveEnvironmentRegistryType_/ object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "key",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is a key to check for existence in the specified registryType.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "loadExtension",
                    "minArgs": -1,
                    "details": "This parameter is a boolean value that is optional.",
                    "description": "Specifying true for this optional parameter will cause the associated extension to be loaded if needed.",
                    "dataType": "boolean"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "registry_key_check",
            "functionId": "registry_key_check",
            "description": "This will check to see if a registry key exists for a specified registry type and optionally load it's associated extension if needed.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "administrative",
            "camelCaseFunctionLabel": "registryKeyCheck",
            "brief": "Check to see if a registry key exists",
            "afwCamelCaseFunctionLabel": "afwRegistryKeyCheck"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_dnsName_string",
                "objectId": "to_dnsName_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a dnsName value.",
                "dataType": "dnsName"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_dnsName_string",
            "functionId": "to_dnsName<string>",
            "details": "The string:: prefix is optional.",
            "description": "Converts string arg to dnsName.",
            "deprecated": false,
            "dataTypeMethodNumber": 67,
            "dataType": "string",
            "category": "string",
            "camelCaseFunctionLabel": "toDnsNameString",
            "brief": "Converts string to dnsName",
            "afwCamelCaseFunctionLabel": "afwToDnsNameString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/xpath_node_eq",
                "objectId": "xpath_node_eq",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg1",
                    "minArgs": -1,
                    "details": "This parameter is a xpathExpression value.",
                    "dataType": "xpathExpression"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg2",
                    "minArgs": -1,
                    "details": "This parameter is a xpathExpression value.",
                    "dataType": "xpathExpression"
                }
            ],
            "op": "==",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "xpath_node_eq",
            "functionId": "xpath_node_eq",
            "description": "Checks for xpathExpression arg1 is equal to xpathExpression arg2 and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "xpath",
            "camelCaseFunctionLabel": "xpathNodeEq",
            "brief": "Checks for equal",
            "afwCamelCaseFunctionLabel": "afwXpathNodeEq"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/url_encode",
                "objectId": "url_encode",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "URI encoded string.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "string",
                "anyURI"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "unencoded",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "URL encode a single value.  See the url_encode method for the data type of more details."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "url_encode",
            "functionId": "url_encode",
            "description": "URL encode a value or bag of values.",
            "deprecated": false,
            "dataTypeMethodNumber": 28,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "urlEncode",
            "brief": "URI encode",
            "afwCamelCaseFunctionLabel": "afwUrlEncode"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_x500Name",
                "objectId": "set_equals_x500Name",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of x500Name value.",
                    "dataTypeParameter": "x500Name",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_x500Name",
            "functionId": "set_equals<x500Name>",
            "details": "The x500Name:: prefix is optional.",
            "description": "Returns boolean true if x500Name list1 and x500Name list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "x500Name",
            "category": "x500Name",
            "camelCaseFunctionLabel": "setEqualsX500Name",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsX500Name"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/random_integer",
                "objectId": "random_integer",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "description": "A random integer.",
                "dataType": "integer"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "min",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "Minimum integer inclusive.",
                    "dataType": "integer"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "max",
                    "minArgs": -1,
                    "details": "This parameter is an integer value.",
                    "description": "Maximum integer inclusive.",
                    "dataType": "integer"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "random_integer",
            "functionId": "random_integer",
            "description": "This returns a random integer between specified values inclusive.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "random",
            "camelCaseFunctionLabel": "randomInteger",
            "brief": "Generate a random integer between specified values",
            "afwCamelCaseFunctionLabel": "afwRandomInteger"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/model_default_modify_object_action",
                "objectId": "model_default_modify_object_action",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object _AdaptiveAction_ value.",
                "description": "The default action object.",
                "dataTypeParameter": "_AdaptiveAction_",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptorId of a model adaptor.  Variable custom::adaptorId can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the adaptive object type of object being modified.  Variable custom::objectType can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "This is the objectId of object to modify.  Variable custom::objectId can be used to access this value in model expressions.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "entries",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "This is a list of modifications.  Variable custom::actions can be used to access this value in model expressions.  Entries are of the form:\n\n    [\n        \"add_value\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]\n\n    [\n        \"remove_property\",\n        \"property name\" or [\"property name\", ... ]\n    ]\n\n    [\n        \"remove_value\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]\n\n    [\n        \"set_property\",\n        \"property name\" or [\"property name\", ... ],\n        value\n    ]",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "modelId",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "This specifics a modelId of model to use for producing results.  If not specified, the adaptor's current model will be used.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "context",
                    "minArgs": -1,
                    "details": "This parameter is an object _AdaptiveContextType_ value that is optional.",
                    "description": "This specifies additional context information available to model expressions.",
                    "dataTypeParameter": "_AdaptiveContextType_",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "model_default_modify_object_action",
            "functionId": "model_default_modify_object_action",
            "description": "This function returns a _AdaptiveAction_ object for the default action performed if a onModifyObject parameter is not specified on the associated _AdaptiveModelObjectType_.  The action is not performed, but be aware that functions called while producing the _AdaptiveAction_ object may cause side effects.  This function can be called as part of a onModify expression or for testing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "model",
            "camelCaseFunctionLabel": "modelDefaultModifyObjectAction",
            "brief": "Produce a default _AdaptiveAction_ object for an modify object request to a model adaptor.",
            "afwCamelCaseFunctionLabel": "afwModelDefaultModifyObjectAction"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/local_object_meta_set_ids",
                "objectId": "local_object_meta_set_ids",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a null value.",
                "dataType": "null"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "object",
                    "minArgs": -1,
                    "details": "This parameter is an object value.",
                    "description": "Object to set ids in.",
                    "dataType": "object"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "adaptorId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Adaptor id for object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectType",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Object type id for object.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "objectId",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "Object id for object.",
                    "dataType": "string"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "local_object_meta_set_ids",
            "functionId": "local_object_meta_set_ids",
            "description": "This is used to set the ids in a local mutable object.  The ids are used to construct a local path.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "object",
            "camelCaseFunctionLabel": "localObjectMetaSetIds",
            "brief": "Set ids in a local mutable object",
            "afwCamelCaseFunctionLabel": "afwLocalObjectMetaSetIds"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/and",
                "objectId": "and",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 0,
                    "details": "This parameter is a boolean value that can be specified 0 or more times.",
                    "dataType": "boolean"
                }
            ],
            "op": "&&",
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "and",
            "functionId": "and",
            "description": "Evaluates 0 or more boolean args returning boolean true if there are no args and boolean false if any args evaluate to false.  All args after the first false remain unevaluated.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "logical",
            "camelCaseFunctionLabel": "and",
            "brief": "Logical and",
            "afwCamelCaseFunctionLabel": "afwAnd"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/pow",
                "objectId": "pow",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": true,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a <dataType> value.",
                "description": "Base raised to the power exponent."
            },
            "pure": true,
            "polymorphicDataTypes": [
                "double"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "base",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "Base value."
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "exponent",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "Exponent value."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "pow",
            "functionId": "pow",
            "description": "This returns the value of base raised to a power.",
            "deprecated": false,
            "dataTypeMethodNumber": 47,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "pow",
            "brief": "Base raised to a power",
            "afwCamelCaseFunctionLabel": "afwPow"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/intersection_boolean",
                "objectId": "intersection_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a list of boolean value.",
                "dataTypeParameter": "boolean",
                "dataType": "array"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "description": "The first list.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "description": "The second list.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "intersection_boolean",
            "functionId": "intersection<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Returns a list of boolean with the values that are common to both list of boolean list1 and list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 9,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "intersectionBoolean",
            "brief": "Returns intersection of two lists",
            "afwCamelCaseFunctionLabel": "afwIntersectionBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/at_least_one_member_of_boolean",
                "objectId": "at_least_one_member_of_boolean",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "description": "The first list.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of boolean value.",
                    "description": "The second list.",
                    "dataTypeParameter": "boolean",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "at_least_one_member_of_boolean",
            "functionId": "at_least_one_member_of<boolean>",
            "details": "The boolean:: prefix is optional.",
            "description": "Returns boolean true if at least one value in boolean list1 is in boolean list2.",
            "deprecated": false,
            "dataTypeMethodNumber": 1,
            "dataType": "boolean",
            "category": "boolean",
            "camelCaseFunctionLabel": "atLeastOneMemberOfBoolean",
            "brief": "Checks for at least one value in common",
            "afwCamelCaseFunctionLabel": "afwAtLeastOneMemberOfBoolean"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/decode_to_string",
                "objectId": "decode_to_string",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The decoded string.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphicDataTypes": [
                "base64Binary",
                "hexBinary"
            ],
            "polymorphic": true,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": true,
                    "optional": false,
                    "name": "value",
                    "minArgs": -1,
                    "details": "This parameter is a <dataType> value.",
                    "description": "The <dataType> value to decode."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "decode_to_string",
            "functionId": "decode_to_string",
            "description": "Decode <dataType> value to string.  An error is thrown if decoded value is not valid UTF-8.",
            "deprecated": false,
            "dataTypeMethodNumber": 29,
            "category": "polymorphic",
            "camelCaseFunctionLabel": "decodeToString",
            "brief": "Decode <dataType> to string",
            "afwCamelCaseFunctionLabel": "afwDecodeToString"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/to_string_objectPath",
                "objectId": "to_string_objectPath",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a string value.",
                "description": "The string representation of the value.",
                "dataType": "string"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is an objectPath value.",
                    "description": "A objectPath value.",
                    "dataType": "objectPath"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "to_string_objectPath",
            "functionId": "to_string<objectPath>",
            "details": "The objectPath:: prefix is optional.",
            "description": "Converts objectPath arg to string.  For list values, the to_string() value for each entry is returned separated with commas.",
            "deprecated": false,
            "dataTypeMethodNumber": 26,
            "dataType": "objectPath",
            "category": "objectPath",
            "camelCaseFunctionLabel": "toStringObjectPath",
            "brief": "Converts value to string",
            "afwCamelCaseFunctionLabel": "afwToStringObjectPath"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/min_double",
                "objectId": "min_double",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a double value.",
                "dataType": "double"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "args",
                    "minArgs": 1,
                    "details": "This parameter is a double value that can be specified 1 or more times.",
                    "dataType": "double"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "min_double",
            "functionId": "min<double>",
            "details": "The double:: prefix is optional.",
            "description": "Return the double arg that is less than or equal to the others.",
            "deprecated": false,
            "dataTypeMethodNumber": 37,
            "dataType": "double",
            "category": "double",
            "camelCaseFunctionLabel": "minDouble",
            "brief": "Minimum value",
            "afwCamelCaseFunctionLabel": "afwMinDouble"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/set_equals_base64Binary",
                "objectId": "set_equals_base64Binary",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns a boolean value.",
                "dataType": "boolean"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list1",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "list2",
                    "minArgs": -1,
                    "details": "This parameter is a list of base64Binary value.",
                    "dataTypeParameter": "base64Binary",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "set_equals_base64Binary",
            "functionId": "set_equals<base64Binary>",
            "details": "The base64Binary:: prefix is optional.",
            "description": "Returns boolean true if base64Binary list1 and base64Binary list2 are subsets of each other and return the boolean result.",
            "deprecated": false,
            "dataTypeMethodNumber": 21,
            "dataType": "base64Binary",
            "category": "base64Binary",
            "camelCaseFunctionLabel": "setEqualsBase64Binary",
            "brief": "Checks whether two lists are subsets of each other",
            "afwCamelCaseFunctionLabel": "afwSetEqualsBase64Binary"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/compile_expression_tuple",
                "objectId": "compile_expression_tuple",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an untyped value.",
                "description": "An unevaluated expression tuple value ready for use by function evaluate() or a string containing the compiler listing."
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "expression_tuple",
                    "minArgs": -1,
                    "details": "This parameter is a list value.",
                    "description": "expression tuple to compile.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "listing",
                    "minArgs": -1,
                    "details": "This parameter is an untyped value that is optional.",
                    "description": "If specified, a compiler listing is produced instead of an unevaluated expression tuple value.\n\nThis parameter can be an integer between 0 and 10 of a string that is used for indentation.  If 0 is specified, no whitespace is added to the resulting string.  If 1 through 10 is specified, that number of spaces is used."
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "compile_expression_tuple",
            "functionId": "compile_expression_tuple",
            "description": "Compile a string containing adaptive expression tuple syntax and return either an unevaluated expression tuple adaptive value or a string containing the compiler listing.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "compiler",
            "camelCaseFunctionLabel": "compileExpressionTuple",
            "brief": "Compile expression tuple value",
            "afwCamelCaseFunctionLabel": "afwCompileExpressionTuple"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/bag_size_date",
                "objectId": "bag_size_date",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an integer value.",
                "dataType": "integer"
            },
            "pure": true,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "arg",
                    "minArgs": -1,
                    "details": "This parameter is a list of date value.",
                    "dataTypeParameter": "date",
                    "dataType": "array"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "bag_size_date",
            "functionId": "bag_size<date>",
            "details": "The date:: prefix is optional.",
            "description": "This returns the integer number of values in list bag arg.",
            "deprecated": false,
            "dataTypeMethodNumber": 3,
            "dataType": "date",
            "category": "date",
            "camelCaseFunctionLabel": "bagSizeDate",
            "brief": "Returns the number of values in a bag",
            "afwCamelCaseFunctionLabel": "afwBagSizeDate"
        },
        {
            "_meta_": {
                "path": "/afw/_AdaptiveFunction_/http_post",
                "objectId": "http_post",
                "objectType": "_AdaptiveFunction_"
            },
            "scriptSupportNumber": 0,
            "returns": {
                "_meta_": {
                    "objectType": "_AdaptiveFunctionParameter_"
                },
                "polymorphicDataTypeParameter": false,
                "polymorphicDataType": false,
                "optional": false,
                "minArgs": -1,
                "details": "This function returns an object value.",
                "description": "Returns an object describing the response from the HTTP POST request.",
                "dataType": "object"
            },
            "pure": false,
            "polymorphic": false,
            "parameters": [
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": false,
                    "name": "url",
                    "minArgs": -1,
                    "details": "This parameter is a string value.",
                    "description": "HTTP Url.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "payload",
                    "minArgs": -1,
                    "details": "This parameter is a string value that is optional.",
                    "description": "Data payload to POST to the url.",
                    "dataType": "string"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "headers",
                    "minArgs": -1,
                    "details": "This parameter is a list value that is optional.",
                    "description": "HTTP Headers.",
                    "dataType": "array"
                },
                {
                    "_meta_": {
                        "objectType": "_AdaptiveFunctionParameter_"
                    },
                    "polymorphicDataTypeParameter": false,
                    "polymorphicDataType": false,
                    "optional": true,
                    "name": "options",
                    "minArgs": -1,
                    "details": "This parameter is an object value that is optional.",
                    "description": "CURL Options",
                    "dataType": "object"
                }
            ],
            "functionPrototype": "*** coming soon ***",
            "functionLabel": "http_post",
            "functionId": "http_post",
            "description": "Makes a HTTP Post Request.",
            "deprecated": false,
            "dataTypeMethodNumber": 0,
            "category": "http",
            "camelCaseFunctionLabel": "httpPost",
            "afwCamelCaseFunctionLabel": "afwHttpPost"
        }
    ],
    "status": "success"
}