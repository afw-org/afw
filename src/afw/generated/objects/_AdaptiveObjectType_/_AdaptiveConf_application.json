{
    "allowEntity": true,
    "collectionURIs": [
        "/afw/_AdaptiveCollection_/core"
    ],
    "description": "Adaptive Framework configuration component for type=application. There is only one application conf entry per Adaptive Framework instance.\n\nUse path /afw/_AdaptiveConf_application/current to access this entry at run time.",
    "objectType": "_AdaptiveConf_application",
    "propertyTypes": {
        "_meta_": {
            "parentPaths": [
                "/afw/_AdaptiveObjectType_/_AdaptiveConf_/propertyTypes"
            ]
        },
        "applicationId": {
            "allowQuery": true,
            "allowWrite": false,
            "brief": "This is the id of the application",
            "dataType": "string",
            "description": "This is id of the application. The default applicationId is 'application'. This property can only be specified in the type=application entry of the conf file.",
            "label": "Application Id"
        },
        "authorizationControl": {
            "allowQuery": false,
            "brief": "This defines how authorization checking occurs in this application",
            "dataType": "object",
            "dataTypeParameter": "_AdaptiveAuthorizationControl_",
            "description": "This defines how authorization checking occurs in this application.",
            "label": "Authorization"
        },
        "confAdaptorId": {
            "allowQuery": true,
            "allowWrite": false,
            "brief": "Optional adaptorId of the running adaptor that contains configuration related objects",
            "dataType": "string",
            "description": "This is the optional adaptorId of the running adaptor that contains configuration related objects. This property can only be specified in the type=application entry of the conf file.\n\nThe runtime /afw/_AdaptiveApplication_/current object will consist of properties from the type=application entry of the conf file plus unique properties from the optional /<confAdaptorId>/_AdaptiveConf_application/<applicationId> object.\n\nAll services defined by _AdaptiveServiceConf_ objects in <confAdaptorId> with startup 'permanent' or 'immediate' will be started when the type=application conf entry is processed.",
            "label": "Conf Adaptor"
        },
        "defaultAdaptorId": {
            "allowQuery": true,
            "brief": "This is the adaptorId chosen by default for user interface select components",
            "dataType": "string",
            "description": "This is the adaptorId chosen by default for user interface select components.",
            "label": "Default Adaptor",
            "required": false
        },
        "defaultFlags": {
            "brief": "List of default flags to be set when an execution context (xctx) is created.",
            "dataType": "array",
            "dataTypeParameter": "string",
            "description": "This is a list of the flagId of default flags that will be set when an execution context (xctx) is created. Flags in this list that are not yet registered will be set as a default when/if they are registered. Each registered flagId is the objectId of an object in /afw/_AdaptiveFlag_/.",
            "label": "Default Flags",
            "required": false
        },
        "defaultModelAdaptorId": {
            "allowQuery": true,
            "brief": "The default adaptorId to select for model storage",
            "dataType": "string",
            "description": "When presented with multiple model adaptors, this is the default adaptorId to use. This will be the default selected adaptor chosen by user interface components.",
            "label": "Default Model Adaptor",
            "required": false
        },
        "description": {
            "allowQuery": true,
            "brief": "The description of the application",
            "dataType": "string",
            "dataTypeParameter": "text/plain",
            "description": "The description of the application.",
            "label": "Description",
            "required": false
        },
        "extensionModulePaths": {
            "brief": "List of modulePaths of extensions to load at startup",
            "dataType": "array",
            "dataTypeParameter": "string",
            "description": "This is a list of modulePaths of extensions to load at startup. If there is already an extension manifest that has the extensionId, use the extensions property instead. This property is most useful for loading the extension manifest of an AFW package.",
            "label": "Extension Module Paths",
            "required": false
        },
        "extensions": {
            "brief": "List of extensionIds to load at startup",
            "dataType": "array",
            "dataTypeParameter": "string",
            "description": "This is a list of extensionId of extensions to load at startup. Each extensionId must be the objectId of an object in /afw/_AdaptiveManifest_/.",
            "label": "Extensions",
            "required": false
        },
        "layoutsAdaptorId": {
            "allowQuery": true,
            "brief": "The default adaptorId to select for layout component objects",
            "dataType": "string",
            "description": "This is the adaptorId that locates Adaptive Layout Component objects.",
            "label": "Layouts Adaptor",
            "required": false
        },
        "onApplicationStartupComplete": {
            "allowQuery": true,
            "brief": "Script to run when application startup completes",
            "contextType": "application",
            "dataType": "script",
            "dataTypeParameter": "integer",
            "description": "This is an optional script to run after this application has completed startup but before starting to process requests. The script can perform additional startup functions or request that the application terminate. All permanent and immediate services will have been started before the script is called. If the script fails or explicitly returns a value other than 0, the application will terminate.",
            "label": "Application Startup Complete"
        },
        "qualifiedVariables": {
            "brief": "Qualified set of variables",
            "dataType": "object",
            "dataTypeParameter": "_AdaptiveHybridPropertiesObjects_",
            "description": "The name of each property in this object corresponds to a qualifier that is available in processing associated with this application. The qualifier can not be an empty string. The properties of these 'qualifier objects' are hybrid values that are accessible as qualified variables. These variables are evaluated once per execution context (xctx) as they are accessed.\n\nSome qualifiers are restricted.",
            "label": "Qualified Variables"
        },
        "rootFilePaths": {
            "allowQuery": false,
            "brief": "Root file paths",
            "dataType": "object",
            "dataTypeParameter": "_AdaptiveRootFilePaths_",
            "description": "The properties of this object are the root file paths used by open_file().",
            "label": "Root File Paths",
            "required": false
        },
        "title": {
            "allowQuery": true,
            "brief": "The title of the application",
            "dataType": "string",
            "description": "The title of the application. This is used as the title of the Adaptive Framework Web App and is available for use in other places as appropriate.",
            "label": "Title",
            "required": false
        }
    }
}