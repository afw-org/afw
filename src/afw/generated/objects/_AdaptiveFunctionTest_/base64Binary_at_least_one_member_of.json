{
    "description": "Tests for at_least_one_member_of<base64Binary> function.",
    "functionId": "at_least_one_member_of<base64Binary>",
    "implemented": true,
    "tests": [
        {
            "arguments": [
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": []
                },
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": []
                }
            ],
            "description": "\n            base64Binary at least one member of test for bags:\n            { },\n            { }\n        ",
            "result": {
                "dataType": "boolean",
                "value": "false"
            }
        },
        {
            "arguments": [
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0fa8",
                        "0fa80f+9",
                        "0F+40A=="
                    ]
                },
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0FB8",
                        "0FB80F+9",
                        "0F+41A=="
                    ]
                }
            ],
            "description": "\n            base64Binary at least one member of test for bags:\n            { 0FA8, 0 fa8 0f+9, 0F+40A== },\n            { 0FB8, 0 FB8 0F+9, 0F+41A== }\n        ",
            "result": {
                "dataType": "boolean",
                "value": "false"
            }
        },
        {
            "arguments": [
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0F+41A==",
                        "0fa80f+9",
                        "0FB8"
                    ]
                },
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0FB8",
                        "0FB80F+9",
                        "0F+40A=="
                    ]
                }
            ],
            "description": "\n            base64Binary at least one member of case sensitivity test for bags:\n            { 0F+41A==, 0 fa8 0f+9, 0fb8 },\n            { 0FB8, 0 FB8 0F+9, 0F+40A== }\n        ",
            "result": {
                "dataType": "boolean",
                "value": "true"
            }
        },
        {
            "arguments": [
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0F+41A==",
                        "0fb80f+9",
                        "0FA8"
                    ]
                },
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0FA8",
                        "0FB80F+9",
                        "0F+40A=="
                    ]
                }
            ],
            "description": "\n            base64Binary at least one member of case sensitivity test for bags:\n            { 0F+41A==, 0 fb8 0f+9, 0FA8 },\n            { 0FB8, 0 FB8 0F+9, 0F+40A== }\n        ",
            "result": {
                "dataType": "boolean",
                "value": "true"
            }
        },
        {
            "arguments": [
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0f+40a=="
                    ]
                },
                {
                    "dataType": "bag",
                    "dataTypeParameter": "base64Binary",
                    "value": [
                        "0FB8",
                        "0FB80F+9",
                        "0f+40a=="
                    ]
                }
            ],
            "description": "\n            base64Binary at least one member of invalid argument test for bags:\n            { 0f+40a== },\n            { 0FB8, 0 FB8 0F+9, 0F+40A== }\n        ",
            "implemented": false,
            "result": {
                "error": true
            }
        }
    ]
}