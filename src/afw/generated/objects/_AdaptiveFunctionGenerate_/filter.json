{
    "afwCamelCaseFunctionLabel": "afwFilter",
    "brief": "Filter a list",
    "camelCaseFunctionLabel": "filter",
    "category": "higher_order_array",
    "description": "This produces a list containing only values from another list that pass a predicate test.",
    "functionId": "filter",
    "functionLabel": "filter",
    "parameters": [
        {
            "dataType": "function",
            "dataTypeParameter": "(... values: any): boolean",
            "description": "This is a boolean function that is called to determine if a list entry should be included in the returned list.",
            "name": "predicate"
        },
        {
            "description": "These are the values passed to the predicate with the exception that the first list is passed as the single current value from the list. At least one list is required.",
            "minArgs": 1,
            "name": "values"
        }
    ],
    "pure": true,
    "returns": {
        "dataType": "array",
        "description": "This is the resulting filtered list."
    }
}