// See the 'COPYING' file in the project root for licensing information.
/*
 * Adaptive Framework (afw_) Strings Header
 *
 * Copyright (c) 2010-2023 Clemson University
 *
 */

/*  ----------------------------- N O T E -------------------------------------
 *
 * This file is generated by "afwdev generate afw".
 *
 * Do not change this file directly or the changes will be lost the next time
 * this file is regenerated.
 *
 * -------------------------------------------------------------------------*/


#ifndef __AFW_STRINGS_H__
#define __AFW_STRINGS_H__


/**
 * @file afw_strings.h
 * @brief Adaptive Framework (afw_) strings header.
 */

#include "afw_interface.h"
#include "afw_declare_helpers.h"


/** @brief define for quoted string 200 */
#define AFW_Q_200 "200"

/** @brief afw_utf8_t for string 200 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_200;

/** @brief define for quoted string 201 */
#define AFW_Q_201 "201"

/** @brief afw_utf8_t for string 201 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_201;

/** @brief define for quoted string 400 */
#define AFW_Q_400 "400"

/** @brief afw_utf8_t for string 400 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_400;

/** @brief define for quoted string 403 */
#define AFW_Q_403 "403"

/** @brief afw_utf8_t for string 403 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_403;

/** @brief define for quoted string 404 */
#define AFW_Q_404 "404"

/** @brief afw_utf8_t for string 404 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_404;

/** @brief define for quoted string 500 */
#define AFW_Q_500 "500"

/** @brief afw_utf8_t for string 500 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_500;

/** @brief define for quoted string ACCEPT */
#define AFW_Q_ACCEPT "ACCEPT"

/** @brief afw_utf8_t for string ACCEPT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ACCEPT;

/** @brief define for quoted string AUTH_TYPE */
#define AFW_Q_AUTH_TYPE "AUTH_TYPE"

/** @brief afw_utf8_t for string AUTH_TYPE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_AUTH_TYPE;

/** @brief define for quoted string Adaptive */
#define AFW_Q_Adaptive "Adaptive"

/** @brief afw_utf8_t for string Adaptive */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_Adaptive;

/** @brief define for quoted string B */
#define AFW_Q_B "B"

/** @brief afw_utf8_t for string B */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_B;

/** @brief define for quoted string BOOL */
#define AFW_Q_BOOL "BOOL"

/** @brief afw_utf8_t for string BOOL */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_BOOL;

/** @brief define for quoted string BS */
#define AFW_Q_BS "BS"

/** @brief afw_utf8_t for string BS */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_BS;

/** @brief define for quoted string CONTENT_LENGTH */
#define AFW_Q_CONTENT_LENGTH "CONTENT_LENGTH"

/** @brief afw_utf8_t for string CONTENT_LENGTH */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_CONTENT_LENGTH;

/** @brief define for quoted string CONTENT_TYPE */
#define AFW_Q_CONTENT_TYPE "CONTENT_TYPE"

/** @brief afw_utf8_t for string CONTENT_TYPE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_CONTENT_TYPE;

/** @brief define for quoted string Configuration */
#define AFW_Q_Configuration "Configuration"

/** @brief afw_utf8_t for string Configuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_Configuration;

/** @brief define for quoted string Created */
#define AFW_Q_Created "Created"

/** @brief afw_utf8_t for string Created */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_Created;

/** @brief define for quoted string DELETE */
#define AFW_Q_DELETE "DELETE"

/** @brief afw_utf8_t for string DELETE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_DELETE;

/** @brief define for quoted string DOCUMENT_ROOT */
#define AFW_Q_DOCUMENT_ROOT "DOCUMENT_ROOT"

/** @brief afw_utf8_t for string DOCUMENT_ROOT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_DOCUMENT_ROOT;

/** @brief define for quoted string DataType */
#define AFW_Q_DataType "DataType"

/** @brief afw_utf8_t for string DataType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_DataType;

/** @brief define for quoted string FCGI_ROLE */
#define AFW_Q_FCGI_ROLE "FCGI_ROLE"

/** @brief afw_utf8_t for string FCGI_ROLE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_FCGI_ROLE;

/** @brief define for quoted string GATEWAY_INTERFACE */
#define AFW_Q_GATEWAY_INTERFACE "GATEWAY_INTERFACE"

/** @brief afw_utf8_t for string GATEWAY_INTERFACE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_GATEWAY_INTERFACE;

/** @brief define for quoted string GET */
#define AFW_Q_GET "GET"

/** @brief afw_utf8_t for string GET */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_GET;

/** @brief define for quoted string GNU */
#define AFW_Q_GNU "GNU"

/** @brief afw_utf8_t for string GNU */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_GNU;

/** @brief define for quoted string HTTPS */
#define AFW_Q_HTTPS "HTTPS"

/** @brief afw_utf8_t for string HTTPS */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTPS;

/** @brief define for quoted string HTTP_ACCEPT */
#define AFW_Q_HTTP_ACCEPT "HTTP_ACCEPT"

/** @brief afw_utf8_t for string HTTP_ACCEPT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_ACCEPT;

/** @brief define for quoted string HTTP_ACCEPT_CHARSET */
#define AFW_Q_HTTP_ACCEPT_CHARSET "HTTP_ACCEPT_CHARSET"

/** @brief afw_utf8_t for string HTTP_ACCEPT_CHARSET */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_ACCEPT_CHARSET;

/** @brief define for quoted string HTTP_ACCEPT_ENCODING */
#define AFW_Q_HTTP_ACCEPT_ENCODING "HTTP_ACCEPT_ENCODING"

/** @brief afw_utf8_t for string HTTP_ACCEPT_ENCODING */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_ACCEPT_ENCODING;

/** @brief define for quoted string HTTP_ACCEPT_LANGUAGE */
#define AFW_Q_HTTP_ACCEPT_LANGUAGE "HTTP_ACCEPT_LANGUAGE"

/** @brief afw_utf8_t for string HTTP_ACCEPT_LANGUAGE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_ACCEPT_LANGUAGE;

/** @brief define for quoted string HTTP_COOKIE */
#define AFW_Q_HTTP_COOKIE "HTTP_COOKIE"

/** @brief afw_utf8_t for string HTTP_COOKIE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_COOKIE;

/** @brief define for quoted string HTTP_FROM */
#define AFW_Q_HTTP_FROM "HTTP_FROM"

/** @brief afw_utf8_t for string HTTP_FROM */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_FROM;

/** @brief define for quoted string HTTP_HOST */
#define AFW_Q_HTTP_HOST "HTTP_HOST"

/** @brief afw_utf8_t for string HTTP_HOST */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_HOST;

/** @brief define for quoted string HTTP_REFERER */
#define AFW_Q_HTTP_REFERER "HTTP_REFERER"

/** @brief afw_utf8_t for string HTTP_REFERER */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_REFERER;

/** @brief define for quoted string HTTP_USER_AGENT */
#define AFW_Q_HTTP_USER_AGENT "HTTP_USER_AGENT"

/** @brief afw_utf8_t for string HTTP_USER_AGENT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_HTTP_USER_AGENT;

/** @brief define for quoted string INF */
#define AFW_Q_INF "INF"

/** @brief afw_utf8_t for string INF */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_INF;

/** @brief define for quoted string Infinity */
#define AFW_Q_Infinity "Infinity"

/** @brief afw_utf8_t for string Infinity */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_Infinity;

/** @brief define for quoted string JeremyScript */
#define AFW_Q_JeremyScript "JeremyScript"

/** @brief afw_utf8_t for string JeremyScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_JeremyScript;

/** @brief define for quoted string L */
#define AFW_Q_L "L"

/** @brief afw_utf8_t for string L */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_L;

/** @brief define for quoted string M */
#define AFW_Q_M "M"

/** @brief afw_utf8_t for string M */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_M;

/** @brief define for quoted string N */
#define AFW_Q_N "N"

/** @brief afw_utf8_t for string N */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_N;

/** @brief define for quoted string NS */
#define AFW_Q_NS "NS"

/** @brief afw_utf8_t for string NS */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_NS;

/** @brief define for quoted string NULL */
#define AFW_Q_NULL "NULL"

/** @brief afw_utf8_t for string NULL */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_NULL;

/** @brief define for quoted string NaN */
#define AFW_Q_NaN "NaN"

/** @brief afw_utf8_t for string NaN */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_NaN;

/** @brief define for quoted string OK */
#define AFW_Q_OK "OK"

/** @brief afw_utf8_t for string OK */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_OK;

/** @brief define for quoted string ObjectType */
#define AFW_Q_ObjectType "ObjectType"

/** @brief afw_utf8_t for string ObjectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ObjectType;

/** @brief define for quoted string PATCH */
#define AFW_Q_PATCH "PATCH"

/** @brief afw_utf8_t for string PATCH */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_PATCH;

/** @brief define for quoted string PATH_INFO */
#define AFW_Q_PATH_INFO "PATH_INFO"

/** @brief afw_utf8_t for string PATH_INFO */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_PATH_INFO;

/** @brief define for quoted string PATH_TRANSLATED */
#define AFW_Q_PATH_TRANSLATED "PATH_TRANSLATED"

/** @brief afw_utf8_t for string PATH_TRANSLATED */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_PATH_TRANSLATED;

/** @brief define for quoted string POST */
#define AFW_Q_POST "POST"

/** @brief afw_utf8_t for string POST */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_POST;

/** @brief define for quoted string PUT */
#define AFW_Q_PUT "PUT"

/** @brief afw_utf8_t for string PUT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_PUT;

/** @brief define for quoted string PropertyType */
#define AFW_Q_PropertyType "PropertyType"

/** @brief afw_utf8_t for string PropertyType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_PropertyType;

/** @brief define for quoted string QUERY_STRING */
#define AFW_Q_QUERY_STRING "QUERY_STRING"

/** @brief afw_utf8_t for string QUERY_STRING */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_QUERY_STRING;

/** @brief define for quoted string REMOTE_ADDR */
#define AFW_Q_REMOTE_ADDR "REMOTE_ADDR"

/** @brief afw_utf8_t for string REMOTE_ADDR */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REMOTE_ADDR;

/** @brief define for quoted string REMOTE_HOST */
#define AFW_Q_REMOTE_HOST "REMOTE_HOST"

/** @brief afw_utf8_t for string REMOTE_HOST */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REMOTE_HOST;

/** @brief define for quoted string REMOTE_IDENT */
#define AFW_Q_REMOTE_IDENT "REMOTE_IDENT"

/** @brief afw_utf8_t for string REMOTE_IDENT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REMOTE_IDENT;

/** @brief define for quoted string REMOTE_PORT */
#define AFW_Q_REMOTE_PORT "REMOTE_PORT"

/** @brief afw_utf8_t for string REMOTE_PORT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REMOTE_PORT;

/** @brief define for quoted string REMOTE_USER */
#define AFW_Q_REMOTE_USER "REMOTE_USER"

/** @brief afw_utf8_t for string REMOTE_USER */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REMOTE_USER;

/** @brief define for quoted string REQUEST_METHOD */
#define AFW_Q_REQUEST_METHOD "REQUEST_METHOD"

/** @brief afw_utf8_t for string REQUEST_METHOD */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REQUEST_METHOD;

/** @brief define for quoted string REQUEST_SCHEME */
#define AFW_Q_REQUEST_SCHEME "REQUEST_SCHEME"

/** @brief afw_utf8_t for string REQUEST_SCHEME */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REQUEST_SCHEME;

/** @brief define for quoted string REQUEST_URI */
#define AFW_Q_REQUEST_URI "REQUEST_URI"

/** @brief afw_utf8_t for string REQUEST_URI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_REQUEST_URI;

/** @brief define for quoted string S */
#define AFW_Q_S "S"

/** @brief afw_utf8_t for string S */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_S;

/** @brief define for quoted string SCHEME */
#define AFW_Q_SCHEME "SCHEME"

/** @brief afw_utf8_t for string SCHEME */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SCHEME;

/** @brief define for quoted string SCRIPT_NAME */
#define AFW_Q_SCRIPT_NAME "SCRIPT_NAME"

/** @brief afw_utf8_t for string SCRIPT_NAME */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SCRIPT_NAME;

/** @brief define for quoted string SERVER_ADDR */
#define AFW_Q_SERVER_ADDR "SERVER_ADDR"

/** @brief afw_utf8_t for string SERVER_ADDR */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SERVER_ADDR;

/** @brief define for quoted string SERVER_ADMIN */
#define AFW_Q_SERVER_ADMIN "SERVER_ADMIN"

/** @brief afw_utf8_t for string SERVER_ADMIN */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SERVER_ADMIN;

/** @brief define for quoted string SERVER_NAME */
#define AFW_Q_SERVER_NAME "SERVER_NAME"

/** @brief afw_utf8_t for string SERVER_NAME */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SERVER_NAME;

/** @brief define for quoted string SERVER_PORT */
#define AFW_Q_SERVER_PORT "SERVER_PORT"

/** @brief afw_utf8_t for string SERVER_PORT */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SERVER_PORT;

/** @brief define for quoted string SERVER_PROTOCOL */
#define AFW_Q_SERVER_PROTOCOL "SERVER_PROTOCOL"

/** @brief afw_utf8_t for string SERVER_PROTOCOL */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SERVER_PROTOCOL;

/** @brief define for quoted string SERVER_SIGNATURE */
#define AFW_Q_SERVER_SIGNATURE "SERVER_SIGNATURE"

/** @brief afw_utf8_t for string SERVER_SIGNATURE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SERVER_SIGNATURE;

/** @brief define for quoted string SERVER_SOFTWARE */
#define AFW_Q_SERVER_SOFTWARE "SERVER_SOFTWARE"

/** @brief afw_utf8_t for string SERVER_SOFTWARE */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SERVER_SOFTWARE;

/** @brief define for quoted string SS */
#define AFW_Q_SS "SS"

/** @brief afw_utf8_t for string SS */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SS;

/** @brief define for quoted string SSL_CLIENT_M_SERIAL */
#define AFW_Q_SSL_CLIENT_M_SERIAL "SSL_CLIENT_M_SERIAL"

/** @brief afw_utf8_t for string SSL_CLIENT_M_SERIAL */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_M_SERIAL;

/** @brief define for quoted string SSL_CLIENT_M_VERSION */
#define AFW_Q_SSL_CLIENT_M_VERSION "SSL_CLIENT_M_VERSION"

/** @brief afw_utf8_t for string SSL_CLIENT_M_VERSION */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_M_VERSION;

/** @brief define for quoted string SSL_CLIENT_S_DN */
#define AFW_Q_SSL_CLIENT_S_DN "SSL_CLIENT_S_DN"

/** @brief afw_utf8_t for string SSL_CLIENT_S_DN */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_S_DN;

/** @brief define for quoted string SSL_CLIENT_S_DN_CN */
#define AFW_Q_SSL_CLIENT_S_DN_CN "SSL_CLIENT_S_DN_CN"

/** @brief afw_utf8_t for string SSL_CLIENT_S_DN_CN */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_S_DN_CN;

/** @brief define for quoted string SSL_CLIENT_VERIFY */
#define AFW_Q_SSL_CLIENT_VERIFY "SSL_CLIENT_VERIFY"

/** @brief afw_utf8_t for string SSL_CLIENT_VERIFY */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_VERIFY;

/** @brief define for quoted string SSL_CLIENT_V_END */
#define AFW_Q_SSL_CLIENT_V_END "SSL_CLIENT_V_END"

/** @brief afw_utf8_t for string SSL_CLIENT_V_END */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_V_END;

/** @brief define for quoted string SSL_CLIENT_V_REMAIN */
#define AFW_Q_SSL_CLIENT_V_REMAIN "SSL_CLIENT_V_REMAIN"

/** @brief afw_utf8_t for string SSL_CLIENT_V_REMAIN */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_V_REMAIN;

/** @brief define for quoted string SSL_CLIENT_V_START */
#define AFW_Q_SSL_CLIENT_V_START "SSL_CLIENT_V_START"

/** @brief afw_utf8_t for string SSL_CLIENT_V_START */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_SSL_CLIENT_V_START;

/** @brief define for quoted string _Adaptive */
#define AFW_Q__Adaptive "_Adaptive"

/** @brief afw_utf8_t for string _Adaptive */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__Adaptive;

/** @brief define for quoted string _AdaptiveAction_ */
#define AFW_Q__AdaptiveAction_ "_AdaptiveAction_"

/** @brief afw_utf8_t for string _AdaptiveAction_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAction_;

/** @brief define for quoted string _AdaptiveActions_ */
#define AFW_Q__AdaptiveActions_ "_AdaptiveActions_"

/** @brief afw_utf8_t for string _AdaptiveActions_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveActions_;

/** @brief define for quoted string _AdaptiveAdaptorMetrics_ */
#define AFW_Q__AdaptiveAdaptorMetrics_ "_AdaptiveAdaptorMetrics_"

/** @brief afw_utf8_t for string _AdaptiveAdaptorMetrics_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAdaptorMetrics_;

/** @brief define for quoted string _AdaptiveAdaptorType_ */
#define AFW_Q__AdaptiveAdaptorType_ "_AdaptiveAdaptorType_"

/** @brief afw_utf8_t for string _AdaptiveAdaptorType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAdaptorType_;

/** @brief define for quoted string _AdaptiveAdaptor_ */
#define AFW_Q__AdaptiveAdaptor_ "_AdaptiveAdaptor_"

/** @brief afw_utf8_t for string _AdaptiveAdaptor_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAdaptor_;

/** @brief define for quoted string _AdaptiveAnnotation_ */
#define AFW_Q__AdaptiveAnnotation_ "_AdaptiveAnnotation_"

/** @brief afw_utf8_t for string _AdaptiveAnnotation_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAnnotation_;

/** @brief define for quoted string _AdaptiveApplicationComponents_ */
#define AFW_Q__AdaptiveApplicationComponents_ "_AdaptiveApplicationComponents_"

/** @brief afw_utf8_t for string _AdaptiveApplicationComponents_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveApplicationComponents_;

/** @brief define for quoted string _AdaptiveApplication_ */
#define AFW_Q__AdaptiveApplication_ "_AdaptiveApplication_"

/** @brief afw_utf8_t for string _AdaptiveApplication_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveApplication_;

/** @brief define for quoted string _AdaptiveAuthorizationControl_ */
#define AFW_Q__AdaptiveAuthorizationControl_ "_AdaptiveAuthorizationControl_"

/** @brief afw_utf8_t for string _AdaptiveAuthorizationControl_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAuthorizationControl_;

/** @brief define for quoted string _AdaptiveAuthorizationDecision_ */
#define AFW_Q__AdaptiveAuthorizationDecision_ "_AdaptiveAuthorizationDecision_"

/** @brief afw_utf8_t for string _AdaptiveAuthorizationDecision_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAuthorizationDecision_;

/** @brief define for quoted string _AdaptiveAuthorizationHandlerType_ */
#define AFW_Q__AdaptiveAuthorizationHandlerType_ "_AdaptiveAuthorizationHandlerType_"

/** @brief afw_utf8_t for string _AdaptiveAuthorizationHandlerType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAuthorizationHandlerType_;

/** @brief define for quoted string _AdaptiveAuthorizationHandler_ */
#define AFW_Q__AdaptiveAuthorizationHandler_ "_AdaptiveAuthorizationHandler_"

/** @brief afw_utf8_t for string _AdaptiveAuthorizationHandler_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAuthorizationHandler_;

/** @brief define for quoted string _AdaptiveAuthorizationMode_ */
#define AFW_Q__AdaptiveAuthorizationMode_ "_AdaptiveAuthorizationMode_"

/** @brief afw_utf8_t for string _AdaptiveAuthorizationMode_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAuthorizationMode_;

/** @brief define for quoted string _AdaptiveAuthorizationResult_ */
#define AFW_Q__AdaptiveAuthorizationResult_ "_AdaptiveAuthorizationResult_"

/** @brief afw_utf8_t for string _AdaptiveAuthorizationResult_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveAuthorizationResult_;

/** @brief define for quoted string _AdaptiveCollection_ */
#define AFW_Q__AdaptiveCollection_ "_AdaptiveCollection_"

/** @brief afw_utf8_t for string _AdaptiveCollection_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveCollection_;

/** @brief define for quoted string _AdaptiveConfType_ */
#define AFW_Q__AdaptiveConfType_ "_AdaptiveConfType_"

/** @brief afw_utf8_t for string _AdaptiveConfType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConfType_;

/** @brief define for quoted string _AdaptiveConf_ */
#define AFW_Q__AdaptiveConf_ "_AdaptiveConf_"

/** @brief afw_utf8_t for string _AdaptiveConf_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_;

/** @brief define for quoted string _AdaptiveConf_adaptor */
#define AFW_Q__AdaptiveConf_adaptor "_AdaptiveConf_adaptor"

/** @brief afw_utf8_t for string _AdaptiveConf_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_adaptor;

/** @brief define for quoted string _AdaptiveConf_adaptor_afw_runtime */
#define AFW_Q__AdaptiveConf_adaptor_afw_runtime "_AdaptiveConf_adaptor_afw_runtime"

/** @brief afw_utf8_t for string _AdaptiveConf_adaptor_afw_runtime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_adaptor_afw_runtime;

/** @brief define for quoted string _AdaptiveConf_adaptor_file */
#define AFW_Q__AdaptiveConf_adaptor_file "_AdaptiveConf_adaptor_file"

/** @brief afw_utf8_t for string _AdaptiveConf_adaptor_file */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_adaptor_file;

/** @brief define for quoted string _AdaptiveConf_adaptor_model */
#define AFW_Q__AdaptiveConf_adaptor_model "_AdaptiveConf_adaptor_model"

/** @brief afw_utf8_t for string _AdaptiveConf_adaptor_model */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_adaptor_model;

/** @brief define for quoted string _AdaptiveConf_application */
#define AFW_Q__AdaptiveConf_application "_AdaptiveConf_application"

/** @brief afw_utf8_t for string _AdaptiveConf_application */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_application;

/** @brief define for quoted string _AdaptiveConf_authorizationHandler */
#define AFW_Q__AdaptiveConf_authorizationHandler "_AdaptiveConf_authorizationHandler"

/** @brief afw_utf8_t for string _AdaptiveConf_authorizationHandler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_authorizationHandler;

/** @brief define for quoted string _AdaptiveConf_authorizationHandler_script */
#define AFW_Q__AdaptiveConf_authorizationHandler_script "_AdaptiveConf_authorizationHandler_script"

/** @brief afw_utf8_t for string _AdaptiveConf_authorizationHandler_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_authorizationHandler_script;

/** @brief define for quoted string _AdaptiveConf_extension */
#define AFW_Q__AdaptiveConf_extension "_AdaptiveConf_extension"

/** @brief afw_utf8_t for string _AdaptiveConf_extension */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_extension;

/** @brief define for quoted string _AdaptiveConf_log */
#define AFW_Q__AdaptiveConf_log "_AdaptiveConf_log"

/** @brief afw_utf8_t for string _AdaptiveConf_log */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_log;

/** @brief define for quoted string _AdaptiveConf_log_event_log */
#define AFW_Q__AdaptiveConf_log_event_log "_AdaptiveConf_log_event_log"

/** @brief afw_utf8_t for string _AdaptiveConf_log_event_log */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_log_event_log;

/** @brief define for quoted string _AdaptiveConf_log_standard */
#define AFW_Q__AdaptiveConf_log_standard "_AdaptiveConf_log_standard"

/** @brief afw_utf8_t for string _AdaptiveConf_log_standard */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_log_standard;

/** @brief define for quoted string _AdaptiveConf_log_syslog */
#define AFW_Q__AdaptiveConf_log_syslog "_AdaptiveConf_log_syslog"

/** @brief afw_utf8_t for string _AdaptiveConf_log_syslog */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_log_syslog;

/** @brief define for quoted string _AdaptiveConf_requestHandler */
#define AFW_Q__AdaptiveConf_requestHandler "_AdaptiveConf_requestHandler"

/** @brief afw_utf8_t for string _AdaptiveConf_requestHandler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_requestHandler;

/** @brief define for quoted string _AdaptiveConf_requestHandler_adaptor */
#define AFW_Q__AdaptiveConf_requestHandler_adaptor "_AdaptiveConf_requestHandler_adaptor"

/** @brief afw_utf8_t for string _AdaptiveConf_requestHandler_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveConf_requestHandler_adaptor;

/** @brief define for quoted string _AdaptiveContentType_ */
#define AFW_Q__AdaptiveContentType_ "_AdaptiveContentType_"

/** @brief afw_utf8_t for string _AdaptiveContentType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveContentType_;

/** @brief define for quoted string _AdaptiveContextType_ */
#define AFW_Q__AdaptiveContextType_ "_AdaptiveContextType_"

/** @brief afw_utf8_t for string _AdaptiveContextType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveContextType_;

/** @brief define for quoted string _AdaptiveDataTypeGenerate_ */
#define AFW_Q__AdaptiveDataTypeGenerate_ "_AdaptiveDataTypeGenerate_"

/** @brief afw_utf8_t for string _AdaptiveDataTypeGenerate_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveDataTypeGenerate_;

/** @brief define for quoted string _AdaptiveDataTypeTestCase_ */
#define AFW_Q__AdaptiveDataTypeTestCase_ "_AdaptiveDataTypeTestCase_"

/** @brief afw_utf8_t for string _AdaptiveDataTypeTestCase_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveDataTypeTestCase_;

/** @brief define for quoted string _AdaptiveDataTypeTest_ */
#define AFW_Q__AdaptiveDataTypeTest_ "_AdaptiveDataTypeTest_"

/** @brief afw_utf8_t for string _AdaptiveDataTypeTest_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveDataTypeTest_;

/** @brief define for quoted string _AdaptiveDataType_ */
#define AFW_Q__AdaptiveDataType_ "_AdaptiveDataType_"

/** @brief afw_utf8_t for string _AdaptiveDataType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveDataType_;

/** @brief define for quoted string _AdaptiveEnvironmentRegistryType_ */
#define AFW_Q__AdaptiveEnvironmentRegistryType_ "_AdaptiveEnvironmentRegistryType_"

/** @brief afw_utf8_t for string _AdaptiveEnvironmentRegistryType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveEnvironmentRegistryType_;

/** @brief define for quoted string _AdaptiveEnvironmentRegistry_ */
#define AFW_Q__AdaptiveEnvironmentRegistry_ "_AdaptiveEnvironmentRegistry_"

/** @brief afw_utf8_t for string _AdaptiveEnvironmentRegistry_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveEnvironmentRegistry_;

/** @brief define for quoted string _AdaptiveEnvironmentVariables_ */
#define AFW_Q__AdaptiveEnvironmentVariables_ "_AdaptiveEnvironmentVariables_"

/** @brief afw_utf8_t for string _AdaptiveEnvironmentVariables_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveEnvironmentVariables_;

/** @brief define for quoted string _AdaptiveErrorRVDecoder_ */
#define AFW_Q__AdaptiveErrorRVDecoder_ "_AdaptiveErrorRVDecoder_"

/** @brief afw_utf8_t for string _AdaptiveErrorRVDecoder_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveErrorRVDecoder_;

/** @brief define for quoted string _AdaptiveError_ */
#define AFW_Q__AdaptiveError_ "_AdaptiveError_"

/** @brief afw_utf8_t for string _AdaptiveError_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveError_;

/** @brief define for quoted string _AdaptiveExtension_ */
#define AFW_Q__AdaptiveExtension_ "_AdaptiveExtension_"

/** @brief afw_utf8_t for string _AdaptiveExtension_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveExtension_;

/** @brief define for quoted string _AdaptiveFlag_ */
#define AFW_Q__AdaptiveFlag_ "_AdaptiveFlag_"

/** @brief afw_utf8_t for string _AdaptiveFlag_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFlag_;

/** @brief define for quoted string _AdaptiveFunctionCategory_ */
#define AFW_Q__AdaptiveFunctionCategory_ "_AdaptiveFunctionCategory_"

/** @brief afw_utf8_t for string _AdaptiveFunctionCategory_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionCategory_;

/** @brief define for quoted string _AdaptiveFunctionDeclaration_ */
#define AFW_Q__AdaptiveFunctionDeclaration_ "_AdaptiveFunctionDeclaration_"

/** @brief afw_utf8_t for string _AdaptiveFunctionDeclaration_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionDeclaration_;

/** @brief define for quoted string _AdaptiveFunctionErrorThrown_ */
#define AFW_Q__AdaptiveFunctionErrorThrown_ "_AdaptiveFunctionErrorThrown_"

/** @brief afw_utf8_t for string _AdaptiveFunctionErrorThrown_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionErrorThrown_;

/** @brief define for quoted string _AdaptiveFunctionGenerate_ */
#define AFW_Q__AdaptiveFunctionGenerate_ "_AdaptiveFunctionGenerate_"

/** @brief afw_utf8_t for string _AdaptiveFunctionGenerate_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionGenerate_;

/** @brief define for quoted string _AdaptiveFunctionParameter_ */
#define AFW_Q__AdaptiveFunctionParameter_ "_AdaptiveFunctionParameter_"

/** @brief afw_utf8_t for string _AdaptiveFunctionParameter_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionParameter_;

/** @brief define for quoted string _AdaptiveFunctionTestArgument_ */
#define AFW_Q__AdaptiveFunctionTestArgument_ "_AdaptiveFunctionTestArgument_"

/** @brief afw_utf8_t for string _AdaptiveFunctionTestArgument_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionTestArgument_;

/** @brief define for quoted string _AdaptiveFunctionTestCase_ */
#define AFW_Q__AdaptiveFunctionTestCase_ "_AdaptiveFunctionTestCase_"

/** @brief afw_utf8_t for string _AdaptiveFunctionTestCase_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionTestCase_;

/** @brief define for quoted string _AdaptiveFunctionTestResult_ */
#define AFW_Q__AdaptiveFunctionTestResult_ "_AdaptiveFunctionTestResult_"

/** @brief afw_utf8_t for string _AdaptiveFunctionTestResult_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionTestResult_;

/** @brief define for quoted string _AdaptiveFunctionTest_ */
#define AFW_Q__AdaptiveFunctionTest_ "_AdaptiveFunctionTest_"

/** @brief afw_utf8_t for string _AdaptiveFunctionTest_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunctionTest_;

/** @brief define for quoted string _AdaptiveFunction_ */
#define AFW_Q__AdaptiveFunction_ "_AdaptiveFunction_"

/** @brief afw_utf8_t for string _AdaptiveFunction_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveFunction_;

/** @brief define for quoted string _AdaptiveHybridPropertiesObjects_ */
#define AFW_Q__AdaptiveHybridPropertiesObjects_ "_AdaptiveHybridPropertiesObjects_"

/** @brief afw_utf8_t for string _AdaptiveHybridPropertiesObjects_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveHybridPropertiesObjects_;

/** @brief define for quoted string _AdaptiveHybridProperties_ */
#define AFW_Q__AdaptiveHybridProperties_ "_AdaptiveHybridProperties_"

/** @brief afw_utf8_t for string _AdaptiveHybridProperties_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveHybridProperties_;

/** @brief define for quoted string _AdaptiveInterface_ */
#define AFW_Q__AdaptiveInterface_ "_AdaptiveInterface_"

/** @brief afw_utf8_t for string _AdaptiveInterface_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveInterface_;

/** @brief define for quoted string _AdaptiveJournalEntryRequest_ */
#define AFW_Q__AdaptiveJournalEntryRequest_ "_AdaptiveJournalEntryRequest_"

/** @brief afw_utf8_t for string _AdaptiveJournalEntryRequest_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveJournalEntryRequest_;

/** @brief define for quoted string _AdaptiveJournalEntrySource_ */
#define AFW_Q__AdaptiveJournalEntrySource_ "_AdaptiveJournalEntrySource_"

/** @brief afw_utf8_t for string _AdaptiveJournalEntrySource_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveJournalEntrySource_;

/** @brief define for quoted string _AdaptiveJournalEntry_ */
#define AFW_Q__AdaptiveJournalEntry_ "_AdaptiveJournalEntry_"

/** @brief afw_utf8_t for string _AdaptiveJournalEntry_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveJournalEntry_;

/** @brief define for quoted string _AdaptiveLayoutComponentTypeCategory_ */
#define AFW_Q__AdaptiveLayoutComponentTypeCategory_ "_AdaptiveLayoutComponentTypeCategory_"

/** @brief afw_utf8_t for string _AdaptiveLayoutComponentTypeCategory_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveLayoutComponentTypeCategory_;

/** @brief define for quoted string _AdaptiveLayoutComponentType_ */
#define AFW_Q__AdaptiveLayoutComponentType_ "_AdaptiveLayoutComponentType_"

/** @brief afw_utf8_t for string _AdaptiveLayoutComponentType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveLayoutComponentType_;

/** @brief define for quoted string _AdaptiveLayoutComponent_ */
#define AFW_Q__AdaptiveLayoutComponent_ "_AdaptiveLayoutComponent_"

/** @brief afw_utf8_t for string _AdaptiveLayoutComponent_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveLayoutComponent_;

/** @brief define for quoted string _AdaptiveLock_ */
#define AFW_Q__AdaptiveLock_ "_AdaptiveLock_"

/** @brief afw_utf8_t for string _AdaptiveLock_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveLock_;

/** @brief define for quoted string _AdaptiveLogType_ */
#define AFW_Q__AdaptiveLogType_ "_AdaptiveLogType_"

/** @brief afw_utf8_t for string _AdaptiveLogType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveLogType_;

/** @brief define for quoted string _AdaptiveLog_ */
#define AFW_Q__AdaptiveLog_ "_AdaptiveLog_"

/** @brief afw_utf8_t for string _AdaptiveLog_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveLog_;

/** @brief define for quoted string _AdaptiveManifest_ */
#define AFW_Q__AdaptiveManifest_ "_AdaptiveManifest_"

/** @brief afw_utf8_t for string _AdaptiveManifest_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveManifest_;

/** @brief define for quoted string _AdaptiveMetaPropertyType_ */
#define AFW_Q__AdaptiveMetaPropertyType_ "_AdaptiveMetaPropertyType_"

/** @brief afw_utf8_t for string _AdaptiveMetaPropertyType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveMetaPropertyType_;

/** @brief define for quoted string _AdaptiveMetaPropertyTypes_ */
#define AFW_Q__AdaptiveMetaPropertyTypes_ "_AdaptiveMetaPropertyTypes_"

/** @brief afw_utf8_t for string _AdaptiveMetaPropertyTypes_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveMetaPropertyTypes_;

/** @brief define for quoted string _AdaptiveMeta_ */
#define AFW_Q__AdaptiveMeta_ "_AdaptiveMeta_"

/** @brief afw_utf8_t for string _AdaptiveMeta_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveMeta_;

/** @brief define for quoted string _AdaptiveModelCurrentOnAddObject_ */
#define AFW_Q__AdaptiveModelCurrentOnAddObject_ "_AdaptiveModelCurrentOnAddObject_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnAddObject_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnAddObject_;

/** @brief define for quoted string _AdaptiveModelCurrentOnDeleteObject_ */
#define AFW_Q__AdaptiveModelCurrentOnDeleteObject_ "_AdaptiveModelCurrentOnDeleteObject_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnDeleteObject_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnDeleteObject_;

/** @brief define for quoted string _AdaptiveModelCurrentOnGetInitialObjectId_ */
#define AFW_Q__AdaptiveModelCurrentOnGetInitialObjectId_ "_AdaptiveModelCurrentOnGetInitialObjectId_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnGetInitialObjectId_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnGetInitialObjectId_;

/** @brief define for quoted string _AdaptiveModelCurrentOnGetInitialValue_ */
#define AFW_Q__AdaptiveModelCurrentOnGetInitialValue_ "_AdaptiveModelCurrentOnGetInitialValue_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnGetInitialValue_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnGetInitialValue_;

/** @brief define for quoted string _AdaptiveModelCurrentOnGetObject_ */
#define AFW_Q__AdaptiveModelCurrentOnGetObject_ "_AdaptiveModelCurrentOnGetObject_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnGetObject_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnGetObject_;

/** @brief define for quoted string _AdaptiveModelCurrentOnGetProperty_ */
#define AFW_Q__AdaptiveModelCurrentOnGetProperty_ "_AdaptiveModelCurrentOnGetProperty_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnGetProperty_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnGetProperty_;

/** @brief define for quoted string _AdaptiveModelCurrentOnModifyObject_ */
#define AFW_Q__AdaptiveModelCurrentOnModifyObject_ "_AdaptiveModelCurrentOnModifyObject_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnModifyObject_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnModifyObject_;

/** @brief define for quoted string _AdaptiveModelCurrentOnReplaceObject_ */
#define AFW_Q__AdaptiveModelCurrentOnReplaceObject_ "_AdaptiveModelCurrentOnReplaceObject_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnReplaceObject_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnReplaceObject_;

/** @brief define for quoted string _AdaptiveModelCurrentOnRetrieveObjects_ */
#define AFW_Q__AdaptiveModelCurrentOnRetrieveObjects_ "_AdaptiveModelCurrentOnRetrieveObjects_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnRetrieveObjects_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnRetrieveObjects_;

/** @brief define for quoted string _AdaptiveModelCurrentOnSetProperty_ */
#define AFW_Q__AdaptiveModelCurrentOnSetProperty_ "_AdaptiveModelCurrentOnSetProperty_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrentOnSetProperty_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrentOnSetProperty_;

/** @brief define for quoted string _AdaptiveModelCurrent_ */
#define AFW_Q__AdaptiveModelCurrent_ "_AdaptiveModelCurrent_"

/** @brief afw_utf8_t for string _AdaptiveModelCurrent_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelCurrent_;

/** @brief define for quoted string _AdaptiveModelObjectType_ */
#define AFW_Q__AdaptiveModelObjectType_ "_AdaptiveModelObjectType_"

/** @brief afw_utf8_t for string _AdaptiveModelObjectType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelObjectType_;

/** @brief define for quoted string _AdaptiveModelObjectTypes_ */
#define AFW_Q__AdaptiveModelObjectTypes_ "_AdaptiveModelObjectTypes_"

/** @brief afw_utf8_t for string _AdaptiveModelObjectTypes_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelObjectTypes_;

/** @brief define for quoted string _AdaptiveModelPropertyType_ */
#define AFW_Q__AdaptiveModelPropertyType_ "_AdaptiveModelPropertyType_"

/** @brief afw_utf8_t for string _AdaptiveModelPropertyType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelPropertyType_;

/** @brief define for quoted string _AdaptiveModelPropertyTypes_ */
#define AFW_Q__AdaptiveModelPropertyTypes_ "_AdaptiveModelPropertyTypes_"

/** @brief afw_utf8_t for string _AdaptiveModelPropertyTypes_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModelPropertyTypes_;

/** @brief define for quoted string _AdaptiveModel_ */
#define AFW_Q__AdaptiveModel_ "_AdaptiveModel_"

/** @brief afw_utf8_t for string _AdaptiveModel_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveModel_;

/** @brief define for quoted string _AdaptiveObjectOptions_ */
#define AFW_Q__AdaptiveObjectOptions_ "_AdaptiveObjectOptions_"

/** @brief afw_utf8_t for string _AdaptiveObjectOptions_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveObjectOptions_;

/** @brief define for quoted string _AdaptiveObjectType_ */
#define AFW_Q__AdaptiveObjectType_ "_AdaptiveObjectType_"

/** @brief afw_utf8_t for string _AdaptiveObjectType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveObjectType_;

/** @brief define for quoted string _AdaptiveObjectTypes_ */
#define AFW_Q__AdaptiveObjectTypes_ "_AdaptiveObjectTypes_"

/** @brief afw_utf8_t for string _AdaptiveObjectTypes_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveObjectTypes_;

/** @brief define for quoted string _AdaptiveObject_ */
#define AFW_Q__AdaptiveObject_ "_AdaptiveObject_"

/** @brief afw_utf8_t for string _AdaptiveObject_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveObject_;

/** @brief define for quoted string _AdaptivePackageCompileOptions_ */
#define AFW_Q__AdaptivePackageCompileOptions_ "_AdaptivePackageCompileOptions_"

/** @brief afw_utf8_t for string _AdaptivePackageCompileOptions_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptivePackageCompileOptions_;

/** @brief define for quoted string _AdaptivePackageSrcdirInfo_ */
#define AFW_Q__AdaptivePackageSrcdirInfo_ "_AdaptivePackageSrcdirInfo_"

/** @brief afw_utf8_t for string _AdaptivePackageSrcdirInfo_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptivePackageSrcdirInfo_;

/** @brief define for quoted string _AdaptivePackageSrcdirs_ */
#define AFW_Q__AdaptivePackageSrcdirs_ "_AdaptivePackageSrcdirs_"

/** @brief afw_utf8_t for string _AdaptivePackageSrcdirs_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptivePackageSrcdirs_;

/** @brief define for quoted string _AdaptivePackage_ */
#define AFW_Q__AdaptivePackage_ "_AdaptivePackage_"

/** @brief afw_utf8_t for string _AdaptivePackage_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptivePackage_;

/** @brief define for quoted string _AdaptiveParsedURI_ */
#define AFW_Q__AdaptiveParsedURI_ "_AdaptiveParsedURI_"

/** @brief afw_utf8_t for string _AdaptiveParsedURI_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveParsedURI_;

/** @brief define for quoted string _AdaptivePolymorphicFunction_ */
#define AFW_Q__AdaptivePolymorphicFunction_ "_AdaptivePolymorphicFunction_"

/** @brief afw_utf8_t for string _AdaptivePolymorphicFunction_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptivePolymorphicFunction_;

/** @brief define for quoted string _AdaptivePropertyTypes_ */
#define AFW_Q__AdaptivePropertyTypes_ "_AdaptivePropertyTypes_"

/** @brief afw_utf8_t for string _AdaptivePropertyTypes_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptivePropertyTypes_;

/** @brief define for quoted string _AdaptiveProvisioningPeer_ */
#define AFW_Q__AdaptiveProvisioningPeer_ "_AdaptiveProvisioningPeer_"

/** @brief afw_utf8_t for string _AdaptiveProvisioningPeer_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveProvisioningPeer_;

/** @brief define for quoted string _AdaptiveQualifierDefinitions_ */
#define AFW_Q__AdaptiveQualifierDefinitions_ "_AdaptiveQualifierDefinitions_"

/** @brief afw_utf8_t for string _AdaptiveQualifierDefinitions_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveQualifierDefinitions_;

/** @brief define for quoted string _AdaptiveQueryCriteriaFilter_ */
#define AFW_Q__AdaptiveQueryCriteriaFilter_ "_AdaptiveQueryCriteriaFilter_"

/** @brief afw_utf8_t for string _AdaptiveQueryCriteriaFilter_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveQueryCriteriaFilter_;

/** @brief define for quoted string _AdaptiveQueryCriteria_ */
#define AFW_Q__AdaptiveQueryCriteria_ "_AdaptiveQueryCriteria_"

/** @brief afw_utf8_t for string _AdaptiveQueryCriteria_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveQueryCriteria_;

/** @brief define for quoted string _AdaptiveRequestContext_ */
#define AFW_Q__AdaptiveRequestContext_ "_AdaptiveRequestContext_"

/** @brief afw_utf8_t for string _AdaptiveRequestContext_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRequestContext_;

/** @brief define for quoted string _AdaptiveRequestHandlerType_ */
#define AFW_Q__AdaptiveRequestHandlerType_ "_AdaptiveRequestHandlerType_"

/** @brief afw_utf8_t for string _AdaptiveRequestHandlerType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRequestHandlerType_;

/** @brief define for quoted string _AdaptiveRequestHandler_ */
#define AFW_Q__AdaptiveRequestHandler_ "_AdaptiveRequestHandler_"

/** @brief afw_utf8_t for string _AdaptiveRequestHandler_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRequestHandler_;

/** @brief define for quoted string _AdaptiveRequestProperties_ */
#define AFW_Q__AdaptiveRequestProperties_ "_AdaptiveRequestProperties_"

/** @brief afw_utf8_t for string _AdaptiveRequestProperties_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRequestProperties_;

/** @brief define for quoted string _AdaptiveResponseAction_ */
#define AFW_Q__AdaptiveResponseAction_ "_AdaptiveResponseAction_"

/** @brief afw_utf8_t for string _AdaptiveResponseAction_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveResponseAction_;

/** @brief define for quoted string _AdaptiveResponse_ */
#define AFW_Q__AdaptiveResponse_ "_AdaptiveResponse_"

/** @brief afw_utf8_t for string _AdaptiveResponse_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveResponse_;

/** @brief define for quoted string _AdaptiveRootFilePaths_ */
#define AFW_Q__AdaptiveRootFilePaths_ "_AdaptiveRootFilePaths_"

/** @brief afw_utf8_t for string _AdaptiveRootFilePaths_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRootFilePaths_;

/** @brief define for quoted string _AdaptiveRuntimeCustom_ */
#define AFW_Q__AdaptiveRuntimeCustom_ "_AdaptiveRuntimeCustom_"

/** @brief afw_utf8_t for string _AdaptiveRuntimeCustom_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRuntimeCustom_;

/** @brief define for quoted string _AdaptiveRuntimeLabels_ */
#define AFW_Q__AdaptiveRuntimeLabels_ "_AdaptiveRuntimeLabels_"

/** @brief afw_utf8_t for string _AdaptiveRuntimeLabels_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRuntimeLabels_;

/** @brief define for quoted string _AdaptiveRuntimeObjectMapInf_ */
#define AFW_Q__AdaptiveRuntimeObjectMapInf_ "_AdaptiveRuntimeObjectMapInf_"

/** @brief afw_utf8_t for string _AdaptiveRuntimeObjectMapInf_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRuntimeObjectMapInf_;

/** @brief define for quoted string _AdaptiveRuntimeObject_ */
#define AFW_Q__AdaptiveRuntimeObject_ "_AdaptiveRuntimeObject_"

/** @brief afw_utf8_t for string _AdaptiveRuntimeObject_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRuntimeObject_;

/** @brief define for quoted string _AdaptiveRuntimeProperty_ */
#define AFW_Q__AdaptiveRuntimeProperty_ "_AdaptiveRuntimeProperty_"

/** @brief afw_utf8_t for string _AdaptiveRuntimeProperty_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRuntimeProperty_;

/** @brief define for quoted string _AdaptiveRuntimeValueAccessor_ */
#define AFW_Q__AdaptiveRuntimeValueAccessor_ "_AdaptiveRuntimeValueAccessor_"

/** @brief afw_utf8_t for string _AdaptiveRuntimeValueAccessor_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveRuntimeValueAccessor_;

/** @brief define for quoted string _AdaptiveServer_ */
#define AFW_Q__AdaptiveServer_ "_AdaptiveServer_"

/** @brief afw_utf8_t for string _AdaptiveServer_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveServer_;

/** @brief define for quoted string _AdaptiveServiceConf_ */
#define AFW_Q__AdaptiveServiceConf_ "_AdaptiveServiceConf_"

/** @brief afw_utf8_t for string _AdaptiveServiceConf_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveServiceConf_;

/** @brief define for quoted string _AdaptiveServiceType_ */
#define AFW_Q__AdaptiveServiceType_ "_AdaptiveServiceType_"

/** @brief afw_utf8_t for string _AdaptiveServiceType_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveServiceType_;

/** @brief define for quoted string _AdaptiveService_ */
#define AFW_Q__AdaptiveService_ "_AdaptiveService_"

/** @brief afw_utf8_t for string _AdaptiveService_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveService_;

/** @brief define for quoted string _AdaptiveSingleton_ */
#define AFW_Q__AdaptiveSingleton_ "_AdaptiveSingleton_"

/** @brief afw_utf8_t for string _AdaptiveSingleton_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveSingleton_;

/** @brief define for quoted string _AdaptiveSystemInfo_ */
#define AFW_Q__AdaptiveSystemInfo_ "_AdaptiveSystemInfo_"

/** @brief afw_utf8_t for string _AdaptiveSystemInfo_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveSystemInfo_;

/** @brief define for quoted string _AdaptiveTag_ */
#define AFW_Q__AdaptiveTag_ "_AdaptiveTag_"

/** @brief afw_utf8_t for string _AdaptiveTag_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveTag_;

/** @brief define for quoted string _AdaptiveTestScriptResult_ */
#define AFW_Q__AdaptiveTestScriptResult_ "_AdaptiveTestScriptResult_"

/** @brief afw_utf8_t for string _AdaptiveTestScriptResult_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveTestScriptResult_;

/** @brief define for quoted string _AdaptiveTestScriptTestResult_ */
#define AFW_Q__AdaptiveTestScriptTestResult_ "_AdaptiveTestScriptTestResult_"

/** @brief afw_utf8_t for string _AdaptiveTestScriptTestResult_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveTestScriptTestResult_;

/** @brief define for quoted string _AdaptiveValueInf_ */
#define AFW_Q__AdaptiveValueInf_ "_AdaptiveValueInf_"

/** @brief afw_utf8_t for string _AdaptiveValueInf_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveValueInf_;

/** @brief define for quoted string _AdaptiveValueMeta_ */
#define AFW_Q__AdaptiveValueMeta_ "_AdaptiveValueMeta_"

/** @brief afw_utf8_t for string _AdaptiveValueMeta_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveValueMeta_;

/** @brief define for quoted string _AdaptiveValuePath_ */
#define AFW_Q__AdaptiveValuePath_ "_AdaptiveValuePath_"

/** @brief afw_utf8_t for string _AdaptiveValuePath_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveValuePath_;

/** @brief define for quoted string _AdaptiveVersionInfo_ */
#define AFW_Q__AdaptiveVersionInfo_ "_AdaptiveVersionInfo_"

/** @brief afw_utf8_t for string _AdaptiveVersionInfo_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__AdaptiveVersionInfo_;

/** @brief define for quoted string _adaptive */
#define AFW_Q__adaptive "_adaptive"

/** @brief afw_utf8_t for string _adaptive */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__adaptive;

/** @brief define for quoted string _flags_ */
#define AFW_Q__flags_ "_flags_"

/** @brief afw_utf8_t for string _flags_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__flags_;

/** @brief define for quoted string _meta_ */
#define AFW_Q__meta_ "_meta_"

/** @brief afw_utf8_t for string _meta_ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s__meta_;

/** @brief define for quoted string a_Content_dash_Type */
#define AFW_Q_a_Content_dash_Type "Content-Type"

/** @brief afw_utf8_t for string a_Content_dash_Type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_Content_dash_Type;

/** @brief define for quoted string a_Core_afw_adaptor */
#define AFW_Q_a_Core_afw_adaptor "Core afw adaptor"

/** @brief afw_utf8_t for string a_Core_afw_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_Core_afw_adaptor;

/** @brief define for quoted string a_adaptor_description */
#define AFW_Q_a_adaptor_description "This configuration type adds an adaptor and corresponding service to this Adaptive Framework environment."

/** @brief afw_utf8_t for string a_adaptor_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_adaptor_description;

/** @brief define for quoted string a_adaptor_title */
#define AFW_Q_a_adaptor_title "Adaptive Framework Adaptor Configuration"

/** @brief afw_utf8_t for string a_adaptor_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_adaptor_title;

/** @brief define for quoted string a_afw_bdb_adaptor_module_path_dll */
#define AFW_Q_a_afw_bdb_adaptor_module_path_dll "libafwbdb.dll"

/** @brief afw_utf8_t for string a_afw_bdb_adaptor_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_bdb_adaptor_module_path_dll;

/** @brief define for quoted string a_afw_bdb_adaptor_module_path_so */
#define AFW_Q_a_afw_bdb_adaptor_module_path_so "libafwbdb.so"

/** @brief afw_utf8_t for string a_afw_bdb_adaptor_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_bdb_adaptor_module_path_so;

/** @brief define for quoted string a_afw_dynamo_db_adaptor_module_path_dll */
#define AFW_Q_a_afw_dynamo_db_adaptor_module_path_dll "libafwdynamodb.dll"

/** @brief afw_utf8_t for string a_afw_dynamo_db_adaptor_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_dynamo_db_adaptor_module_path_dll;

/** @brief define for quoted string a_afw_dynamo_db_adaptor_module_path_so */
#define AFW_Q_a_afw_dynamo_db_adaptor_module_path_so "libafwdynamodb.so"

/** @brief afw_utf8_t for string a_afw_dynamo_db_adaptor_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_dynamo_db_adaptor_module_path_so;

/** @brief define for quoted string a_afw_ldap_adaptor_module_path_dll */
#define AFW_Q_a_afw_ldap_adaptor_module_path_dll "libafwldap.dll"

/** @brief afw_utf8_t for string a_afw_ldap_adaptor_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_ldap_adaptor_module_path_dll;

/** @brief define for quoted string a_afw_ldap_adaptor_module_path_so */
#define AFW_Q_a_afw_ldap_adaptor_module_path_so "libafwldap.so"

/** @brief afw_utf8_t for string a_afw_ldap_adaptor_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_ldap_adaptor_module_path_so;

/** @brief define for quoted string a_afw_lmdb_adaptor_module_path_dll */
#define AFW_Q_a_afw_lmdb_adaptor_module_path_dll "libafwlmdb.dll"

/** @brief afw_utf8_t for string a_afw_lmdb_adaptor_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_lmdb_adaptor_module_path_dll;

/** @brief define for quoted string a_afw_lmdb_adaptor_module_path_so */
#define AFW_Q_a_afw_lmdb_adaptor_module_path_so "libafwlmdb.so"

/** @brief afw_utf8_t for string a_afw_lmdb_adaptor_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_lmdb_adaptor_module_path_so;

/** @brief define for quoted string a_afw_sql_adaptor_module_path_dll */
#define AFW_Q_a_afw_sql_adaptor_module_path_dll "libafwsql.dll"

/** @brief afw_utf8_t for string a_afw_sql_adaptor_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_sql_adaptor_module_path_dll;

/** @brief define for quoted string a_afw_sql_adaptor_module_path_so */
#define AFW_Q_a_afw_sql_adaptor_module_path_so "libafwsql.so"

/** @brief afw_utf8_t for string a_afw_sql_adaptor_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_sql_adaptor_module_path_so;

/** @brief define for quoted string a_afw_ubjson_module_path_dll */
#define AFW_Q_a_afw_ubjson_module_path_dll "libafwubjson.dll"

/** @brief afw_utf8_t for string a_afw_ubjson_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_ubjson_module_path_dll;

/** @brief define for quoted string a_afw_ubjson_module_path_so */
#define AFW_Q_a_afw_ubjson_module_path_so "libafwubjson.so"

/** @brief afw_utf8_t for string a_afw_ubjson_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_ubjson_module_path_so;

/** @brief define for quoted string a_afw_xacml_module_path_dll */
#define AFW_Q_a_afw_xacml_module_path_dll "libafwxacml.dll"

/** @brief afw_utf8_t for string a_afw_xacml_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_xacml_module_path_dll;

/** @brief define for quoted string a_afw_xacml_module_path_so */
#define AFW_Q_a_afw_xacml_module_path_so "libafwxamcl.so"

/** @brief afw_utf8_t for string a_afw_xacml_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_xacml_module_path_so;

/** @brief define for quoted string a_afw_yaml_module_path_dll */
#define AFW_Q_a_afw_yaml_module_path_dll "libafwyaml.dll"

/** @brief afw_utf8_t for string a_afw_yaml_module_path_dll */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_yaml_module_path_dll;

/** @brief define for quoted string a_afw_yaml_module_path_so */
#define AFW_Q_a_afw_yaml_module_path_so "libafwyaml.so"

/** @brief afw_utf8_t for string a_afw_yaml_module_path_so */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_afw_yaml_module_path_so;

/** @brief define for quoted string a_ampersand */
#define AFW_Q_a_ampersand "&"

/** @brief afw_utf8_t for string a_ampersand */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_ampersand;

/** @brief define for quoted string a_application_description */
#define AFW_Q_a_application_description "This configuration type provides the application object for this Adaptive Framework environment.  It can only be specified once."

/** @brief afw_utf8_t for string a_application_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_application_description;

/** @brief define for quoted string a_application_json */
#define AFW_Q_a_application_json "application/json"

/** @brief afw_utf8_t for string a_application_json */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_application_json;

/** @brief define for quoted string a_application_title */
#define AFW_Q_a_application_title "Adaptive Framework Application Configuration"

/** @brief afw_utf8_t for string a_application_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_application_title;

/** @brief define for quoted string a_application_xml */
#define AFW_Q_a_application_xml "application/xml"

/** @brief afw_utf8_t for string a_application_xml */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_application_xml;

/** @brief define for quoted string a_application_yaml */
#define AFW_Q_a_application_yaml "application/x-yaml"

/** @brief afw_utf8_t for string a_application_yaml */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_application_yaml;

/** @brief define for quoted string a_asterisk */
#define AFW_Q_a_asterisk "*"

/** @brief afw_utf8_t for string a_asterisk */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_asterisk;

/** @brief define for quoted string a_authorizationHandler_description */
#define AFW_Q_a_authorizationHandler_description "This configuration type adds an authorization handler for this Adaptive Framework environment."

/** @brief afw_utf8_t for string a_authorizationHandler_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_authorizationHandler_description;

/** @brief define for quoted string a_authorizationHandler_title */
#define AFW_Q_a_authorizationHandler_title "Adaptive Framework Authorization Handler Configuration"

/** @brief afw_utf8_t for string a_authorizationHandler_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_authorizationHandler_title;

/** @brief define for quoted string a_automatic_start */
#define AFW_Q_a_automatic_start "automatic start"

/** @brief afw_utf8_t for string a_automatic_start */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_automatic_start;

/** @brief define for quoted string a_backslash */
#define AFW_Q_a_backslash "\\"

/** @brief afw_utf8_t for string a_backslash */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_backslash;

/** @brief define for quoted string a_bracketed_value */
#define AFW_Q_a_bracketed_value "[value]"

/** @brief afw_utf8_t for string a_bracketed_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_bracketed_value;

/** @brief define for quoted string a_close_angle_bracket */
#define AFW_Q_a_close_angle_bracket ">"

/** @brief afw_utf8_t for string a_close_angle_bracket */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_close_angle_bracket;

/** @brief define for quoted string a_close_brace */
#define AFW_Q_a_close_brace "}"

/** @brief afw_utf8_t for string a_close_brace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_close_brace;

/** @brief define for quoted string a_close_parenthesis */
#define AFW_Q_a_close_parenthesis ")"

/** @brief afw_utf8_t for string a_close_parenthesis */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_close_parenthesis;

/** @brief define for quoted string a_close_square_bracket */
#define AFW_Q_a_close_square_bracket "]"

/** @brief afw_utf8_t for string a_close_square_bracket */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_close_square_bracket;

/** @brief define for quoted string a_colon */
#define AFW_Q_a_colon ":"

/** @brief afw_utf8_t for string a_colon */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_colon;

/** @brief define for quoted string a_comma */
#define AFW_Q_a_comma ","

/** @brief afw_utf8_t for string a_comma */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_comma;

/** @brief define for quoted string a_compile_expect_error */
#define AFW_Q_a_compile_expect_error "Compile expect error"

/** @brief afw_utf8_t for string a_compile_expect_error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_compile_expect_error;

/** @brief define for quoted string a_compile_source_error */
#define AFW_Q_a_compile_source_error "Compile source error"

/** @brief afw_utf8_t for string a_compile_source_error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_compile_source_error;

/** @brief define for quoted string a_context_type_application_qualifier_definitions_path */
#define AFW_Q_a_context_type_application_qualifier_definitions_path "/afw/_AdaptiveContextType_/application/qualifierDefinitions"

/** @brief afw_utf8_t for string a_context_type_application_qualifier_definitions_path */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_context_type_application_qualifier_definitions_path;

/** @brief define for quoted string a_current_colon_colon_mapBackObject */
#define AFW_Q_a_current_colon_colon_mapBackObject "current::mapBackObject"

/** @brief afw_utf8_t for string a_current_colon_colon_mapBackObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_current_colon_colon_mapBackObject;

/** @brief define for quoted string a_current_colon_colon_mapObject */
#define AFW_Q_a_current_colon_colon_mapObject "current::mapObject"

/** @brief afw_utf8_t for string a_current_colon_colon_mapObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_current_colon_colon_mapObject;

/** @brief define for quoted string a_current_colon_colon_returnObject */
#define AFW_Q_a_current_colon_colon_returnObject "current::returnObject"

/** @brief afw_utf8_t for string a_current_colon_colon_returnObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_current_colon_colon_returnObject;

/** @brief define for quoted string a_dash */
#define AFW_Q_a_dash "-"

/** @brief afw_utf8_t for string a_dash */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_dash;

/** @brief define for quoted string a_dash_dash_syntax_test_script */
#define AFW_Q_a_dash_dash_syntax_test_script "--syntax test_script"

/** @brief afw_utf8_t for string a_dash_dash_syntax_test_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_dash_dash_syntax_test_script;

/** @brief define for quoted string a_dash_s_test_script */
#define AFW_Q_a_dash_s_test_script "--s test_script"

/** @brief afw_utf8_t for string a_dash_s_test_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_dash_s_test_script;

/** @brief define for quoted string a_decision_not_applicable */
#define AFW_Q_a_decision_not_applicable "notApplicable"

/** @brief afw_utf8_t for string a_decision_not_applicable */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_decision_not_applicable;

/** @brief define for quoted string a_decision_not_applicable_brief */
#define AFW_Q_a_decision_not_applicable_brief "Not applicable"

/** @brief afw_utf8_t for string a_decision_not_applicable_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_decision_not_applicable_brief;

/** @brief define for quoted string a_decision_not_applicable_description */
#define AFW_Q_a_decision_not_applicable_description "Decision is not applicable."

/** @brief afw_utf8_t for string a_decision_not_applicable_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_decision_not_applicable_description;

/** @brief define for quoted string a_decision_not_applicable_upper_camel */
#define AFW_Q_a_decision_not_applicable_upper_camel "NotApplicable"

/** @brief afw_utf8_t for string a_decision_not_applicable_upper_camel */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_decision_not_applicable_upper_camel;

/** @brief define for quoted string a_dot */
#define AFW_Q_a_dot "."

/** @brief afw_utf8_t for string a_dot */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_dot;

/** @brief define for quoted string a_dot_dot_slash */
#define AFW_Q_a_dot_dot_slash "../"

/** @brief afw_utf8_t for string a_dot_dot_slash */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_dot_dot_slash;

/** @brief define for quoted string a_dot_slash */
#define AFW_Q_a_dot_slash "./"

/** @brief afw_utf8_t for string a_dot_slash */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_dot_slash;

/** @brief define for quoted string a_double_asterisk */
#define AFW_Q_a_double_asterisk "**"

/** @brief afw_utf8_t for string a_double_asterisk */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_double_asterisk;

/** @brief define for quoted string a_double_dot */
#define AFW_Q_a_double_dot ".."

/** @brief afw_utf8_t for string a_double_dot */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_double_dot;

/** @brief define for quoted string a_empty_string */
#define AFW_Q_a_empty_string ""

/** @brief afw_utf8_t for string a_empty_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_empty_string;

/** @brief define for quoted string a_equal */
#define AFW_Q_a_equal "="

/** @brief afw_utf8_t for string a_equal */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_equal;

/** @brief define for quoted string a_evaluate_expect_error */
#define AFW_Q_a_evaluate_expect_error "Evaluate expect error"

/** @brief afw_utf8_t for string a_evaluate_expect_error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_evaluate_expect_error;

/** @brief define for quoted string a_evaluate_source_error */
#define AFW_Q_a_evaluate_source_error "Evaluate source error"

/** @brief afw_utf8_t for string a_evaluate_source_error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_evaluate_source_error;

/** @brief define for quoted string a_exclamation */
#define AFW_Q_a_exclamation "!"

/** @brief afw_utf8_t for string a_exclamation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_exclamation;

/** @brief define for quoted string a_extension_description */
#define AFW_Q_a_extension_description "This configuration type adds additional functionality this Adaptive Framework environment."

/** @brief afw_utf8_t for string a_extension_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_extension_description;

/** @brief define for quoted string a_extension_title */
#define AFW_Q_a_extension_title "Adaptive Framework Extension Configuration"

/** @brief afw_utf8_t for string a_extension_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_extension_title;

/** @brief define for quoted string a_flag_compile_noImplicitAny */
#define AFW_Q_a_flag_compile_noImplicitAny "compile:noImplicitAny"

/** @brief afw_utf8_t for string a_flag_compile_noImplicitAny */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_compile_noImplicitAny;

/** @brief define for quoted string a_flag_compile_noImplicitAny_brief */
#define AFW_Q_a_flag_compile_noImplicitAny_brief "Do not infer type any"

/** @brief afw_utf8_t for string a_flag_compile_noImplicitAny_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_compile_noImplicitAny_brief;

/** @brief define for quoted string a_flag_compile_noImplicitAny_description */
#define AFW_Q_a_flag_compile_noImplicitAny_description "If a type isn't provided where it can be, this flag triggers an error. Without this flag, 'any' is assumed."

/** @brief afw_utf8_t for string a_flag_compile_noImplicitAny_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_compile_noImplicitAny_description;

/** @brief define for quoted string a_flag_compile_noOptimize */
#define AFW_Q_a_flag_compile_noOptimize "compile:noOptimize"

/** @brief afw_utf8_t for string a_flag_compile_noOptimize */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_compile_noOptimize;

/** @brief define for quoted string a_flag_compile_noOptimize_brief */
#define AFW_Q_a_flag_compile_noOptimize_brief "Evaluate values that have not been optimized"

/** @brief afw_utf8_t for string a_flag_compile_noOptimize_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_compile_noOptimize_brief;

/** @brief define for quoted string a_flag_compile_noOptimize_description */
#define AFW_Q_a_flag_compile_noOptimize_description "Normally, the optimized version of adaptive values are evaluated. Use this flag to indicate that the value before optimization should be evaluated instead. This should only be needed when debugging afw core."

/** @brief afw_utf8_t for string a_flag_compile_noOptimize_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_compile_noOptimize_description;

/** @brief define for quoted string a_flag_debug */
#define AFW_Q_a_flag_debug "debug"

/** @brief afw_utf8_t for string a_flag_debug */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug;

/** @brief define for quoted string a_flag_debug_brief */
#define AFW_Q_a_flag_debug_brief "Basic debug flag"

/** @brief afw_utf8_t for string a_flag_debug_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_brief;

/** @brief define for quoted string a_flag_debug_description */
#define AFW_Q_a_flag_debug_description "This triggers all basic debugging."

/** @brief afw_utf8_t for string a_flag_debug_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_description;

/** @brief define for quoted string a_flag_debug_detail */
#define AFW_Q_a_flag_debug_detail "debug:detail"

/** @brief afw_utf8_t for string a_flag_debug_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_detail;

/** @brief define for quoted string a_flag_debug_detail_brief */
#define AFW_Q_a_flag_debug_detail_brief "Debug detail"

/** @brief afw_utf8_t for string a_flag_debug_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_detail_brief;

/** @brief define for quoted string a_flag_debug_detail_description */
#define AFW_Q_a_flag_debug_detail_description "This triggers all basic plus detail debugging."

/** @brief afw_utf8_t for string a_flag_debug_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_detail_description;

/** @brief define for quoted string a_flag_debug_function_active */
#define AFW_Q_a_flag_debug_function_active "debug:function_active"

/** @brief afw_utf8_t for string a_flag_debug_function_active */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_function_active;

/** @brief define for quoted string a_flag_debug_function_active_brief */
#define AFW_Q_a_flag_debug_function_active_brief "Print debug() if not detail calls"

/** @brief afw_utf8_t for string a_flag_debug_function_active_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_function_active_brief;

/** @brief define for quoted string a_flag_debug_function_active_description */
#define AFW_Q_a_flag_debug_function_active_description "This causes calls to the debug() adaptive function to print if the detail parameter is not true.  If off, debug() calls are ignored."

/** @brief afw_utf8_t for string a_flag_debug_function_active_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_function_active_description;

/** @brief define for quoted string a_flag_debug_function_active_detail */
#define AFW_Q_a_flag_debug_function_active_detail "debug:function_active:detail"

/** @brief afw_utf8_t for string a_flag_debug_function_active_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_function_active_detail;

/** @brief define for quoted string a_flag_debug_function_active_detail_brief */
#define AFW_Q_a_flag_debug_function_active_detail_brief "Print all debug() calls"

/** @brief afw_utf8_t for string a_flag_debug_function_active_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_function_active_detail_brief;

/** @brief define for quoted string a_flag_debug_function_active_detail_description */
#define AFW_Q_a_flag_debug_function_active_detail_description "This causes all calls to the debug() adaptive function to print.  If off, debug() calls with true specified for detail parameter are ignored."

/** @brief afw_utf8_t for string a_flag_debug_function_active_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_function_active_detail_description;

/** @brief define for quoted string a_flag_debug_lock */
#define AFW_Q_a_flag_debug_lock "debug:lock"

/** @brief afw_utf8_t for string a_flag_debug_lock */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_lock;

/** @brief define for quoted string a_flag_debug_lock_brief */
#define AFW_Q_a_flag_debug_lock_brief "Debug lock"

/** @brief afw_utf8_t for string a_flag_debug_lock_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_lock_brief;

/** @brief define for quoted string a_flag_debug_lock_description */
#define AFW_Q_a_flag_debug_lock_description "This triggers all lock debugging."

/** @brief afw_utf8_t for string a_flag_debug_lock_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_lock_description;

/** @brief define for quoted string a_flag_debug_pool */
#define AFW_Q_a_flag_debug_pool "debug:pool"

/** @brief afw_utf8_t for string a_flag_debug_pool */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_pool;

/** @brief define for quoted string a_flag_debug_pool_brief */
#define AFW_Q_a_flag_debug_pool_brief "Pool debug"

/** @brief afw_utf8_t for string a_flag_debug_pool_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_pool_brief;

/** @brief define for quoted string a_flag_debug_pool_description */
#define AFW_Q_a_flag_debug_pool_description "This triggers basic pool debugging."

/** @brief afw_utf8_t for string a_flag_debug_pool_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_pool_description;

/** @brief define for quoted string a_flag_debug_pool_detail */
#define AFW_Q_a_flag_debug_pool_detail "debug:pool:detail"

/** @brief afw_utf8_t for string a_flag_debug_pool_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_pool_detail;

/** @brief define for quoted string a_flag_debug_pool_detail_brief */
#define AFW_Q_a_flag_debug_pool_detail_brief "Detailed pool debug"

/** @brief afw_utf8_t for string a_flag_debug_pool_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_pool_detail_brief;

/** @brief define for quoted string a_flag_debug_pool_detail_description */
#define AFW_Q_a_flag_debug_pool_detail_description "This triggers basic and detail pool debugging."

/** @brief afw_utf8_t for string a_flag_debug_pool_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_debug_pool_detail_description;

/** @brief define for quoted string a_flag_response_console */
#define AFW_Q_a_flag_response_console "response:console"

/** @brief afw_utf8_t for string a_flag_response_console */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_console;

/** @brief define for quoted string a_flag_response_console_brief */
#define AFW_Q_a_flag_response_console_brief "The console stream will be sent to the request's response"

/** @brief afw_utf8_t for string a_flag_response_console_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_console_brief;

/** @brief define for quoted string a_flag_response_console_description */
#define AFW_Q_a_flag_response_console_description "Anything written to the console stream during a request will be sent to the request's response.  If this flag is not on, the stream will be written to the server's stdout."

/** @brief afw_utf8_t for string a_flag_response_console_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_console_description;

/** @brief define for quoted string a_flag_response_console_stream */
#define AFW_Q_a_flag_response_console_stream "response:console:stream"

/** @brief afw_utf8_t for string a_flag_response_console_stream */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_console_stream;

/** @brief define for quoted string a_flag_response_console_stream_brief */
#define AFW_Q_a_flag_response_console_stream_brief "The console stream will be sent to a stream in the request's response"

/** @brief afw_utf8_t for string a_flag_response_console_stream_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_console_stream_brief;

/** @brief define for quoted string a_flag_response_console_stream_description */
#define AFW_Q_a_flag_response_console_stream_description "Anything written to the console stream during a request will be sent to a stream in the request's response. If this flag is not on, but response:console is on, the console stream is included as the value of the \"console\" property of the response object.  If neither of these flags are on, the stream will be written to the server's stdout.  This flag requires content-type application/x-afw."

/** @brief afw_utf8_t for string a_flag_response_console_stream_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_console_stream_description;

/** @brief define for quoted string a_flag_response_error */
#define AFW_Q_a_flag_response_error "response:error"

/** @brief afw_utf8_t for string a_flag_response_error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error;

/** @brief define for quoted string a_flag_response_error_backtrace */
#define AFW_Q_a_flag_response_error_backtrace "response:error:backtrace"

/** @brief afw_utf8_t for string a_flag_response_error_backtrace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_backtrace;

/** @brief define for quoted string a_flag_response_error_backtraceEvaluation */
#define AFW_Q_a_flag_response_error_backtraceEvaluation "response:error:backtraceEvaluation"

/** @brief afw_utf8_t for string a_flag_response_error_backtraceEvaluation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_backtraceEvaluation;

/** @brief define for quoted string a_flag_response_error_backtraceEvaluation_brief */
#define AFW_Q_a_flag_response_error_backtraceEvaluation_brief "Include evaluation backtrace"

/** @brief afw_utf8_t for string a_flag_response_error_backtraceEvaluation_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_backtraceEvaluation_brief;

/** @brief define for quoted string a_flag_response_error_backtraceEvaluation_description */
#define AFW_Q_a_flag_response_error_backtraceEvaluation_description "Include evaluation backtrace in error responses."

/** @brief afw_utf8_t for string a_flag_response_error_backtraceEvaluation_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_backtraceEvaluation_description;

/** @brief define for quoted string a_flag_response_error_backtrace_brief */
#define AFW_Q_a_flag_response_error_backtrace_brief "Include backtrace"

/** @brief afw_utf8_t for string a_flag_response_error_backtrace_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_backtrace_brief;

/** @brief define for quoted string a_flag_response_error_backtrace_description */
#define AFW_Q_a_flag_response_error_backtrace_description "Include backtrace in error responses."

/** @brief afw_utf8_t for string a_flag_response_error_backtrace_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_backtrace_description;

/** @brief define for quoted string a_flag_response_error_brief */
#define AFW_Q_a_flag_response_error_brief "Include backtrace, backtraceEvaluation, and contextual"

/** @brief afw_utf8_t for string a_flag_response_error_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_brief;

/** @brief define for quoted string a_flag_response_error_contextual */
#define AFW_Q_a_flag_response_error_contextual "response:error:contextual"

/** @brief afw_utf8_t for string a_flag_response_error_contextual */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_contextual;

/** @brief define for quoted string a_flag_response_error_contextual_brief */
#define AFW_Q_a_flag_response_error_contextual_brief "Include contextual"

/** @brief afw_utf8_t for string a_flag_response_error_contextual_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_contextual_brief;

/** @brief define for quoted string a_flag_response_error_contextual_description */
#define AFW_Q_a_flag_response_error_contextual_description "Include contextual information in error responses."

/** @brief afw_utf8_t for string a_flag_response_error_contextual_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_contextual_description;

/** @brief define for quoted string a_flag_response_error_description */
#define AFW_Q_a_flag_response_error_description "Include backtrace, backtraceEvaluation, and contextual in error responses."

/** @brief afw_utf8_t for string a_flag_response_error_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_description;

/** @brief define for quoted string a_flag_response_error_hasAdditionalDetail */
#define AFW_Q_a_flag_response_error_hasAdditionalDetail "response:error:hasAdditionalDetail"

/** @brief afw_utf8_t for string a_flag_response_error_hasAdditionalDetail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_hasAdditionalDetail;

/** @brief define for quoted string a_flag_response_error_hasAdditionalDetail_brief */
#define AFW_Q_a_flag_response_error_hasAdditionalDetail_brief "Active if any other response:error flags are active"

/** @brief afw_utf8_t for string a_flag_response_error_hasAdditionalDetail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_hasAdditionalDetail_brief;

/** @brief define for quoted string a_flag_response_error_hasAdditionalDetail_description */
#define AFW_Q_a_flag_response_error_hasAdditionalDetail_description "This flag can be tested to determine if any other response:error flags are active.  This flag should not normally be directly set."

/** @brief afw_utf8_t for string a_flag_response_error_hasAdditionalDetail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_error_hasAdditionalDetail_description;

/** @brief define for quoted string a_flag_response_stderr */
#define AFW_Q_a_flag_response_stderr "response:stderr"

/** @brief afw_utf8_t for string a_flag_response_stderr */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stderr;

/** @brief define for quoted string a_flag_response_stderr_brief */
#define AFW_Q_a_flag_response_stderr_brief "The stderr stream will be sent to the request's response"

/** @brief afw_utf8_t for string a_flag_response_stderr_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stderr_brief;

/** @brief define for quoted string a_flag_response_stderr_description */
#define AFW_Q_a_flag_response_stderr_description "Anything written to the stderr stream during a request will be sent to the request's response.  If this flag is not on, the stream will be written to the server's stderr."

/** @brief afw_utf8_t for string a_flag_response_stderr_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stderr_description;

/** @brief define for quoted string a_flag_response_stderr_stream */
#define AFW_Q_a_flag_response_stderr_stream "response:stderr:stream"

/** @brief afw_utf8_t for string a_flag_response_stderr_stream */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stderr_stream;

/** @brief define for quoted string a_flag_response_stderr_stream_brief */
#define AFW_Q_a_flag_response_stderr_stream_brief "The stderr stream will be sent to a stream in the request's response"

/** @brief afw_utf8_t for string a_flag_response_stderr_stream_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stderr_stream_brief;

/** @brief define for quoted string a_flag_response_stderr_stream_description */
#define AFW_Q_a_flag_response_stderr_stream_description "Anything written to the stderr stream during a request will be sent to a stream in the request's response. If this flag is not on, but response:stderr is on, the stderr stream is included as the value of the \"stderr\" property of the response object.  If neither of these flags are on, the stream will be written to the server's stderr.  This flag requires content-type application/x-afw."

/** @brief afw_utf8_t for string a_flag_response_stderr_stream_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stderr_stream_description;

/** @brief define for quoted string a_flag_response_stdout */
#define AFW_Q_a_flag_response_stdout "response:stdout"

/** @brief afw_utf8_t for string a_flag_response_stdout */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stdout;

/** @brief define for quoted string a_flag_response_stdout_brief */
#define AFW_Q_a_flag_response_stdout_brief "The stdout stream will be sent to the request's response"

/** @brief afw_utf8_t for string a_flag_response_stdout_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stdout_brief;

/** @brief define for quoted string a_flag_response_stdout_description */
#define AFW_Q_a_flag_response_stdout_description "Anything written to the stdout stream during a request will be sent to the request's response.  If this flag is not on, the stream will be written to the server's stdout."

/** @brief afw_utf8_t for string a_flag_response_stdout_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stdout_description;

/** @brief define for quoted string a_flag_response_stdout_stream */
#define AFW_Q_a_flag_response_stdout_stream "response:stdout:stream"

/** @brief afw_utf8_t for string a_flag_response_stdout_stream */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stdout_stream;

/** @brief define for quoted string a_flag_response_stdout_stream_brief */
#define AFW_Q_a_flag_response_stdout_stream_brief "The stdout stream will be sent to a stream in the request's response"

/** @brief afw_utf8_t for string a_flag_response_stdout_stream_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stdout_stream_brief;

/** @brief define for quoted string a_flag_response_stdout_stream_description */
#define AFW_Q_a_flag_response_stdout_stream_description "Anything written to the stdout stream during a request will be sent to a stream in the request's response. If this flag is not on, but response:stdout is on, the stdout stream is included as the value of the \"stdout\" property of the response object.  If neither of these flags are on, the stream will be written to the server's stdout.  This flag requires content-type application/x-afw."

/** @brief afw_utf8_t for string a_flag_response_stdout_stream_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_response_stdout_stream_description;

/** @brief define for quoted string a_flag_trace */
#define AFW_Q_a_flag_trace "trace"

/** @brief afw_utf8_t for string a_flag_trace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace;

/** @brief define for quoted string a_flag_trace_adaptor */
#define AFW_Q_a_flag_trace_adaptor "trace:adaptor"

/** @brief afw_utf8_t for string a_flag_trace_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_adaptor;

/** @brief define for quoted string a_flag_trace_adaptor_brief */
#define AFW_Q_a_flag_trace_adaptor_brief "Basic trace for all adaptors"

/** @brief afw_utf8_t for string a_flag_trace_adaptor_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_adaptor_brief;

/** @brief define for quoted string a_flag_trace_adaptor_description */
#define AFW_Q_a_flag_trace_adaptor_description "This produces basic traces for all adaptors."

/** @brief afw_utf8_t for string a_flag_trace_adaptor_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_adaptor_description;

/** @brief define for quoted string a_flag_trace_adaptor_detail */
#define AFW_Q_a_flag_trace_adaptor_detail "trace:adaptor:detail"

/** @brief afw_utf8_t for string a_flag_trace_adaptor_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_adaptor_detail;

/** @brief define for quoted string a_flag_trace_adaptor_detail_brief */
#define AFW_Q_a_flag_trace_adaptor_detail_brief "Detail trace for all adaptors"

/** @brief afw_utf8_t for string a_flag_trace_adaptor_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_adaptor_detail_brief;

/** @brief define for quoted string a_flag_trace_adaptor_detail_description */
#define AFW_Q_a_flag_trace_adaptor_detail_description "This produces all basic plus additional detail traces for all adaptors."

/** @brief afw_utf8_t for string a_flag_trace_adaptor_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_adaptor_detail_description;

/** @brief define for quoted string a_flag_trace_authorization */
#define AFW_Q_a_flag_trace_authorization "trace:authorization"

/** @brief afw_utf8_t for string a_flag_trace_authorization */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization;

/** @brief define for quoted string a_flag_trace_authorizationHandler */
#define AFW_Q_a_flag_trace_authorizationHandler "trace:authorizationHandler"

/** @brief afw_utf8_t for string a_flag_trace_authorizationHandler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorizationHandler;

/** @brief define for quoted string a_flag_trace_authorizationHandler_brief */
#define AFW_Q_a_flag_trace_authorizationHandler_brief "Basic trace for all authorizationHandler"

/** @brief afw_utf8_t for string a_flag_trace_authorizationHandler_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorizationHandler_brief;

/** @brief define for quoted string a_flag_trace_authorizationHandler_description */
#define AFW_Q_a_flag_trace_authorizationHandler_description "This produces basic traces for all authorizationHandler."

/** @brief afw_utf8_t for string a_flag_trace_authorizationHandler_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorizationHandler_description;

/** @brief define for quoted string a_flag_trace_authorizationHandler_detail */
#define AFW_Q_a_flag_trace_authorizationHandler_detail "trace:authorizationHandler:detail"

/** @brief afw_utf8_t for string a_flag_trace_authorizationHandler_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorizationHandler_detail;

/** @brief define for quoted string a_flag_trace_authorizationHandler_detail_brief */
#define AFW_Q_a_flag_trace_authorizationHandler_detail_brief "Detail trace for all authorizationHandlers"

/** @brief afw_utf8_t for string a_flag_trace_authorizationHandler_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorizationHandler_detail_brief;

/** @brief define for quoted string a_flag_trace_authorizationHandler_detail_description */
#define AFW_Q_a_flag_trace_authorizationHandler_detail_description "This produces all basic plus additional detail traces for all authorizationHandlers."

/** @brief afw_utf8_t for string a_flag_trace_authorizationHandler_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorizationHandler_detail_description;

/** @brief define for quoted string a_flag_trace_authorization_brief */
#define AFW_Q_a_flag_trace_authorization_brief "Basic trace for authorization"

/** @brief afw_utf8_t for string a_flag_trace_authorization_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_brief;

/** @brief define for quoted string a_flag_trace_authorization_check */
#define AFW_Q_a_flag_trace_authorization_check "trace:authorization:check"

/** @brief afw_utf8_t for string a_flag_trace_authorization_check */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check;

/** @brief define for quoted string a_flag_trace_authorization_check_brief */
#define AFW_Q_a_flag_trace_authorization_check_brief "Basic trace for authorization check call"

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_brief;

/** @brief define for quoted string a_flag_trace_authorization_check_bypass */
#define AFW_Q_a_flag_trace_authorization_check_bypass "trace:authorization:bypass"

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_bypass */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_bypass;

/** @brief define for quoted string a_flag_trace_authorization_check_bypass_brief */
#define AFW_Q_a_flag_trace_authorization_check_bypass_brief "Basic trace for authorization check call bypasses"

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_bypass_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_bypass_brief;

/** @brief define for quoted string a_flag_trace_authorization_check_bypass_description */
#define AFW_Q_a_flag_trace_authorization_check_bypass_description "This produces traces for authorization check call bypasses."

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_bypass_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_bypass_description;

/** @brief define for quoted string a_flag_trace_authorization_check_description */
#define AFW_Q_a_flag_trace_authorization_check_description "This produces basic traces for authorization check call."

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_description;

/** @brief define for quoted string a_flag_trace_authorization_check_detail */
#define AFW_Q_a_flag_trace_authorization_check_detail "trace:authorization:check:detail"

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_detail;

/** @brief define for quoted string a_flag_trace_authorization_check_detail_brief */
#define AFW_Q_a_flag_trace_authorization_check_detail_brief "Detail trace for authorization check call"

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_detail_brief;

/** @brief define for quoted string a_flag_trace_authorization_check_detail_description */
#define AFW_Q_a_flag_trace_authorization_check_detail_description "This produces all basic plus additional detail traces for authorization check calls."

/** @brief afw_utf8_t for string a_flag_trace_authorization_check_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_check_detail_description;

/** @brief define for quoted string a_flag_trace_authorization_decision */
#define AFW_Q_a_flag_trace_authorization_decision "trace:authorization:decision"

/** @brief afw_utf8_t for string a_flag_trace_authorization_decision */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_decision;

/** @brief define for quoted string a_flag_trace_authorization_decision_brief */
#define AFW_Q_a_flag_trace_authorization_decision_brief "Basic trace for authorization check call's decision"

/** @brief afw_utf8_t for string a_flag_trace_authorization_decision_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_decision_brief;

/** @brief define for quoted string a_flag_trace_authorization_decision_description */
#define AFW_Q_a_flag_trace_authorization_decision_description "This produces basic traces for authorization check call's decision."

/** @brief afw_utf8_t for string a_flag_trace_authorization_decision_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_decision_description;

/** @brief define for quoted string a_flag_trace_authorization_decision_detail */
#define AFW_Q_a_flag_trace_authorization_decision_detail "trace:authorization:decision:detail"

/** @brief afw_utf8_t for string a_flag_trace_authorization_decision_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_decision_detail;

/** @brief define for quoted string a_flag_trace_authorization_decision_detail_brief */
#define AFW_Q_a_flag_trace_authorization_decision_detail_brief "Detail trace for authorization check call's decision"

/** @brief afw_utf8_t for string a_flag_trace_authorization_decision_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_decision_detail_brief;

/** @brief define for quoted string a_flag_trace_authorization_decision_detail_description */
#define AFW_Q_a_flag_trace_authorization_decision_detail_description "This produces all basic plus additional detail traces for authorization check call's decision."

/** @brief afw_utf8_t for string a_flag_trace_authorization_decision_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_decision_detail_description;

/** @brief define for quoted string a_flag_trace_authorization_description */
#define AFW_Q_a_flag_trace_authorization_description "This produces basic traces for authorization."

/** @brief afw_utf8_t for string a_flag_trace_authorization_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_description;

/** @brief define for quoted string a_flag_trace_authorization_detail */
#define AFW_Q_a_flag_trace_authorization_detail "trace:authorization:detail"

/** @brief afw_utf8_t for string a_flag_trace_authorization_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_detail;

/** @brief define for quoted string a_flag_trace_authorization_detail_brief */
#define AFW_Q_a_flag_trace_authorization_detail_brief "Detail trace for authorization"

/** @brief afw_utf8_t for string a_flag_trace_authorization_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_detail_brief;

/** @brief define for quoted string a_flag_trace_authorization_detail_description */
#define AFW_Q_a_flag_trace_authorization_detail_description "This produces all basic plus additional detail traces for authorization."

/** @brief afw_utf8_t for string a_flag_trace_authorization_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_authorization_detail_description;

/** @brief define for quoted string a_flag_trace_brief */
#define AFW_Q_a_flag_trace_brief "Basic traces"

/** @brief afw_utf8_t for string a_flag_trace_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_brief;

/** @brief define for quoted string a_flag_trace_description */
#define AFW_Q_a_flag_trace_description "This produces all basic traces."

/** @brief afw_utf8_t for string a_flag_trace_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_description;

/** @brief define for quoted string a_flag_trace_detail */
#define AFW_Q_a_flag_trace_detail "trace:detail"

/** @brief afw_utf8_t for string a_flag_trace_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_detail;

/** @brief define for quoted string a_flag_trace_detail_brief */
#define AFW_Q_a_flag_trace_detail_brief "All detail traces"

/** @brief afw_utf8_t for string a_flag_trace_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_detail_brief;

/** @brief define for quoted string a_flag_trace_detail_description */
#define AFW_Q_a_flag_trace_detail_description "This produces all basic plus additional detail traces."

/** @brief afw_utf8_t for string a_flag_trace_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_detail_description;

/** @brief define for quoted string a_flag_trace_evaluation_detail */
#define AFW_Q_a_flag_trace_evaluation_detail "trace:evaluation:detail"

/** @brief afw_utf8_t for string a_flag_trace_evaluation_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_evaluation_detail;

/** @brief define for quoted string a_flag_trace_evaluation_detail_brief */
#define AFW_Q_a_flag_trace_evaluation_detail_brief "Detail trace for evaluations"

/** @brief afw_utf8_t for string a_flag_trace_evaluation_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_evaluation_detail_brief;

/** @brief define for quoted string a_flag_trace_evaluation_detail_description */
#define AFW_Q_a_flag_trace_evaluation_detail_description "This produces detail traces for adaptive value evaluations."

/** @brief afw_utf8_t for string a_flag_trace_evaluation_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_evaluation_detail_description;

/** @brief define for quoted string a_flag_trace_request */
#define AFW_Q_a_flag_trace_request "trace:request"

/** @brief afw_utf8_t for string a_flag_trace_request */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_request;

/** @brief define for quoted string a_flag_trace_request_brief */
#define AFW_Q_a_flag_trace_request_brief "Basic trace for all requests"

/** @brief afw_utf8_t for string a_flag_trace_request_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_request_brief;

/** @brief define for quoted string a_flag_trace_request_description */
#define AFW_Q_a_flag_trace_request_description "This produces basic traces for all requests."

/** @brief afw_utf8_t for string a_flag_trace_request_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_request_description;

/** @brief define for quoted string a_flag_trace_request_detail */
#define AFW_Q_a_flag_trace_request_detail "trace:request:detail"

/** @brief afw_utf8_t for string a_flag_trace_request_detail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_request_detail;

/** @brief define for quoted string a_flag_trace_request_detail_brief */
#define AFW_Q_a_flag_trace_request_detail_brief "Detail trace for all requests"

/** @brief afw_utf8_t for string a_flag_trace_request_detail_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_request_detail_brief;

/** @brief define for quoted string a_flag_trace_request_detail_description */
#define AFW_Q_a_flag_trace_request_detail_description "This produces all basic plus additional detail traces for all requests."

/** @brief afw_utf8_t for string a_flag_trace_request_detail_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_trace_request_detail_description;

/** @brief define for quoted string a_flag_unspecified */
#define AFW_Q_a_flag_unspecified "unspecified"

/** @brief afw_utf8_t for string a_flag_unspecified */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_unspecified;

/** @brief define for quoted string a_flag_unspecified_brief */
#define AFW_Q_a_flag_unspecified_brief "Never set"

/** @brief afw_utf8_t for string a_flag_unspecified_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_unspecified_brief;

/** @brief define for quoted string a_flag_unspecified_description */
#define AFW_Q_a_flag_unspecified_description "This is flag index 0 and is never set."

/** @brief afw_utf8_t for string a_flag_unspecified_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_flag_unspecified_description;

/** @brief define for quoted string a_in_catch */
#define AFW_Q_a_in_catch "in catch"

/** @brief afw_utf8_t for string a_in_catch */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_in_catch;

/** @brief define for quoted string a_in_finally */
#define AFW_Q_a_in_finally "in finally"

/** @brief afw_utf8_t for string a_in_finally */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_in_finally;

/** @brief define for quoted string a_journal_get_entry */
#define AFW_Q_a_journal_get_entry "journal::get_entry"

/** @brief afw_utf8_t for string a_journal_get_entry */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_journal_get_entry;

/** @brief define for quoted string a_lambda_function */
#define AFW_Q_a_lambda_function "Lambda function."

/** @brief afw_utf8_t for string a_lambda_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lambda_function;

/** @brief define for quoted string a_lock_adaptor_id_anchor */
#define AFW_Q_a_lock_adaptor_id_anchor "environment:adaptor_id_anchor"

/** @brief afw_utf8_t for string a_lock_adaptor_id_anchor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_adaptor_id_anchor;

/** @brief define for quoted string a_lock_adaptor_id_anchor_brief */
#define AFW_Q_a_lock_adaptor_id_anchor_brief "Adaptor id anchor lock"

/** @brief afw_utf8_t for string a_lock_adaptor_id_anchor_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_adaptor_id_anchor_brief;

/** @brief define for quoted string a_lock_adaptor_id_anchor_description */
#define AFW_Q_a_lock_adaptor_id_anchor_description "This lock is used internally when accessing adaptor id anchor memory."

/** @brief afw_utf8_t for string a_lock_adaptor_id_anchor_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_adaptor_id_anchor_description;

/** @brief define for quoted string a_lock_authorization_handler_id_anchor */
#define AFW_Q_a_lock_authorization_handler_id_anchor "environment:authorization_handler_id"

/** @brief afw_utf8_t for string a_lock_authorization_handler_id_anchor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_authorization_handler_id_anchor;

/** @brief define for quoted string a_lock_authorization_handler_id_anchor_brief */
#define AFW_Q_a_lock_authorization_handler_id_anchor_brief "Authorization handler id anchor lock"

/** @brief afw_utf8_t for string a_lock_authorization_handler_id_anchor_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_authorization_handler_id_anchor_brief;

/** @brief define for quoted string a_lock_authorization_handler_id_anchor_description */
#define AFW_Q_a_lock_authorization_handler_id_anchor_description "This lock is used internally when accessing authorization handler id anchor memory."

/** @brief afw_utf8_t for string a_lock_authorization_handler_id_anchor_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_authorization_handler_id_anchor_description;

/** @brief define for quoted string a_lock_environment */
#define AFW_Q_a_lock_environment "environment:registry"

/** @brief afw_utf8_t for string a_lock_environment */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_environment;

/** @brief define for quoted string a_lock_environment_brief */
#define AFW_Q_a_lock_environment_brief "Environment registry lock"

/** @brief afw_utf8_t for string a_lock_environment_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_environment_brief;

/** @brief define for quoted string a_lock_environment_description */
#define AFW_Q_a_lock_environment_description "This lock is used internally by afw_environment.c when accessing environment registry memory."

/** @brief afw_utf8_t for string a_lock_environment_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_environment_description;

/** @brief define for quoted string a_lock_flags */
#define AFW_Q_a_lock_flags "environment:flags"

/** @brief afw_utf8_t for string a_lock_flags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_flags;

/** @brief define for quoted string a_lock_flags_brief */
#define AFW_Q_a_lock_flags_brief "Environment flags lock"

/** @brief afw_utf8_t for string a_lock_flags_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_flags_brief;

/** @brief define for quoted string a_lock_flags_description */
#define AFW_Q_a_lock_flags_description "This lock is used internally when accessing environment flags memory."

/** @brief afw_utf8_t for string a_lock_flags_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_flags_description;

/** @brief define for quoted string a_lock_log_list */
#define AFW_Q_a_lock_log_list "environment:log_list"

/** @brief afw_utf8_t for string a_lock_log_list */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_log_list;

/** @brief define for quoted string a_lock_log_list_brief */
#define AFW_Q_a_lock_log_list_brief "Environment log list lock"

/** @brief afw_utf8_t for string a_lock_log_list_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_log_list_brief;

/** @brief define for quoted string a_lock_log_list_description */
#define AFW_Q_a_lock_log_list_description "This lock is used internally when accessing environment log list memory."

/** @brief afw_utf8_t for string a_lock_log_list_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_log_list_description;

/** @brief define for quoted string a_lock_multithreaded_pool */
#define AFW_Q_a_lock_multithreaded_pool "multithreaded_pool"

/** @brief afw_utf8_t for string a_lock_multithreaded_pool */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_multithreaded_pool;

/** @brief define for quoted string a_lock_multithreaded_pool_brief */
#define AFW_Q_a_lock_multithreaded_pool_brief "Multithreaded pool"

/** @brief afw_utf8_t for string a_lock_multithreaded_pool_brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_multithreaded_pool_brief;

/** @brief define for quoted string a_lock_multithreaded_pool_description */
#define AFW_Q_a_lock_multithreaded_pool_description "This lock is used internally by afw_pool.c when accessing multithreaded pools."

/** @brief afw_utf8_t for string a_lock_multithreaded_pool_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_lock_multithreaded_pool_description;

/** @brief define for quoted string a_log_description */
#define AFW_Q_a_log_description "This configuration type adds a log and corresponding service to this Adaptive Framework environment."

/** @brief afw_utf8_t for string a_log_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_log_description;

/** @brief define for quoted string a_log_title */
#define AFW_Q_a_log_title "Adaptive Framework Log Configuration"

/** @brief afw_utf8_t for string a_log_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_log_title;

/** @brief define for quoted string a_meta_key */
#define AFW_Q_a_meta_key "meta()"

/** @brief afw_utf8_t for string a_meta_key */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_meta_key;

/** @brief define for quoted string a_meta_objectType */
#define AFW_Q_a_meta_objectType "_meta_.objectType"

/** @brief afw_utf8_t for string a_meta_objectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_meta_objectType;

/** @brief define for quoted string a_newline_char */
#define AFW_Q_a_newline_char "\n"

/** @brief afw_utf8_t for string a_newline_char */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_newline_char;

/** @brief define for quoted string a_not_implemented */
#define AFW_Q_a_not_implemented "not implemented"

/** @brief afw_utf8_t for string a_not_implemented */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_not_implemented;

/** @brief define for quoted string a_open_angle_bracket */
#define AFW_Q_a_open_angle_bracket "<"

/** @brief afw_utf8_t for string a_open_angle_bracket */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_open_angle_bracket;

/** @brief define for quoted string a_open_brace */
#define AFW_Q_a_open_brace "{"

/** @brief afw_utf8_t for string a_open_brace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_open_brace;

/** @brief define for quoted string a_open_parenthesis */
#define AFW_Q_a_open_parenthesis "("

/** @brief afw_utf8_t for string a_open_parenthesis */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_open_parenthesis;

/** @brief define for quoted string a_open_square_bracket */
#define AFW_Q_a_open_square_bracket "["

/** @brief afw_utf8_t for string a_open_square_bracket */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_open_square_bracket;

/** @brief define for quoted string a_other_error */
#define AFW_Q_a_other_error "Other error"

/** @brief afw_utf8_t for string a_other_error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_other_error;

/** @brief define for quoted string a_period */
#define AFW_Q_a_period "."

/** @brief afw_utf8_t for string a_period */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_period;

/** @brief define for quoted string a_qualification_operator */
#define AFW_Q_a_qualification_operator "::"

/** @brief afw_utf8_t for string a_qualification_operator */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_qualification_operator;

/** @brief define for quoted string a_requestHandler_description */
#define AFW_Q_a_requestHandler_description "This configuration type adds a request handler to this Adaptive Framework environment."

/** @brief afw_utf8_t for string a_requestHandler_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_requestHandler_description;

/** @brief define for quoted string a_requestHandler_title */
#define AFW_Q_a_requestHandler_title "Adaptive Framework Request Handler Configuration"

/** @brief afw_utf8_t for string a_requestHandler_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_requestHandler_title;

/** @brief define for quoted string a_request_body */
#define AFW_Q_a_request_body "request body"

/** @brief afw_utf8_t for string a_request_body */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_request_body;

/** @brief define for quoted string a_semicolon */
#define AFW_Q_a_semicolon ";"

/** @brief afw_utf8_t for string a_semicolon */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_semicolon;

/** @brief define for quoted string a_service_type_adaptor_title */
#define AFW_Q_a_service_type_adaptor_title "Service type for adaptors."

/** @brief afw_utf8_t for string a_service_type_adaptor_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_service_type_adaptor_title;

/** @brief define for quoted string a_service_type_authorizationHandler_title */
#define AFW_Q_a_service_type_authorizationHandler_title "Service type for authorizationHandler."

/** @brief afw_utf8_t for string a_service_type_authorizationHandler_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_service_type_authorizationHandler_title;

/** @brief define for quoted string a_service_type_log_title */
#define AFW_Q_a_service_type_log_title "Service type for logs."

/** @brief afw_utf8_t for string a_service_type_log_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_service_type_log_title;

/** @brief define for quoted string a_services_description */
#define AFW_Q_a_services_description "This configuration type defines how services are handled in this Adaptive Framework environment.  It can only be specified once."

/** @brief afw_utf8_t for string a_services_description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_services_description;

/** @brief define for quoted string a_services_title */
#define AFW_Q_a_services_title "Adaptive Framework Services Configuration"

/** @brief afw_utf8_t for string a_services_title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_services_title;

/** @brief define for quoted string a_slash */
#define AFW_Q_a_slash "/"

/** @brief afw_utf8_t for string a_slash */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_slash;

/** @brief define for quoted string a_slash_afw */
#define AFW_Q_a_slash_afw "/afw"

/** @brief afw_utf8_t for string a_slash_afw */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_slash_afw;

/** @brief define for quoted string a_star_slash_star */
#define AFW_Q_a_star_slash_star "*/*"

/** @brief afw_utf8_t for string a_star_slash_star */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_star_slash_star;

/** @brief define for quoted string a_tab */
#define AFW_Q_a_tab "\t"

/** @brief afw_utf8_t for string a_tab */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tab;

/** @brief define for quoted string a_tuple_operation_call */
#define AFW_Q_a_tuple_operation_call "call"

/** @brief afw_utf8_t for string a_tuple_operation_call */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_call;

/** @brief define for quoted string a_tuple_operation_call_adaptive_function */
#define AFW_Q_a_tuple_operation_call_adaptive_function "callA"

/** @brief afw_utf8_t for string a_tuple_operation_call_adaptive_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_call_adaptive_function;

/** @brief define for quoted string a_tuple_operation_call_lambda_function */
#define AFW_Q_a_tuple_operation_call_lambda_function "callL"

/** @brief afw_utf8_t for string a_tuple_operation_call_lambda_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_call_lambda_function;

/** @brief define for quoted string a_tuple_operation_expression */
#define AFW_Q_a_tuple_operation_expression "expr"

/** @brief afw_utf8_t for string a_tuple_operation_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_expression;

/** @brief define for quoted string a_tuple_operation_expression_tuple_with_variables */
#define AFW_Q_a_tuple_operation_expression_tuple_with_variables "exprT"

/** @brief afw_utf8_t for string a_tuple_operation_expression_tuple_with_variables */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_expression_tuple_with_variables;

/** @brief define for quoted string a_tuple_operation_lambda_function */
#define AFW_Q_a_tuple_operation_lambda_function "lambda"

/** @brief afw_utf8_t for string a_tuple_operation_lambda_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_lambda_function;

/** @brief define for quoted string a_tuple_operation_list */
#define AFW_Q_a_tuple_operation_list "list"

/** @brief afw_utf8_t for string a_tuple_operation_list */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_list;

/** @brief define for quoted string a_tuple_operation_object */
#define AFW_Q_a_tuple_operation_object "obj"

/** @brief afw_utf8_t for string a_tuple_operation_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_object;

/** @brief define for quoted string a_tuple_operation_property_reference */
#define AFW_Q_a_tuple_operation_property_reference "prop"

/** @brief afw_utf8_t for string a_tuple_operation_property_reference */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_property_reference;

/** @brief define for quoted string a_tuple_operation_script */
#define AFW_Q_a_tuple_operation_script "script"

/** @brief afw_utf8_t for string a_tuple_operation_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_script;

/** @brief define for quoted string a_tuple_operation_template */
#define AFW_Q_a_tuple_operation_template "tmpl"

/** @brief afw_utf8_t for string a_tuple_operation_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_template;

/** @brief define for quoted string a_tuple_operation_variable_reference */
#define AFW_Q_a_tuple_operation_variable_reference "var"

/** @brief afw_utf8_t for string a_tuple_operation_variable_reference */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_tuple_operation_variable_reference;

/** @brief define for quoted string a_undefined_as_string */
#define AFW_Q_a_undefined_as_string "<undefined>"

/** @brief afw_utf8_t for string a_undefined_as_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_undefined_as_string;

/** @brief define for quoted string a_vertical_bar */
#define AFW_Q_a_vertical_bar "|"

/** @brief afw_utf8_t for string a_vertical_bar */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_a_vertical_bar;

/** @brief define for quoted string abs */
#define AFW_Q_abs "abs"

/** @brief afw_utf8_t for string abs */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_abs;

/** @brief define for quoted string abs_double */
#define AFW_Q_abs_double "abs_double"

/** @brief afw_utf8_t for string abs_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_abs_double;

/** @brief define for quoted string abs_integer */
#define AFW_Q_abs_integer "abs_integer"

/** @brief afw_utf8_t for string abs_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_abs_integer;

/** @brief define for quoted string access_permitted */
#define AFW_Q_access_permitted "access_permitted"

/** @brief afw_utf8_t for string access_permitted */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_access_permitted;

/** @brief define for quoted string action */
#define AFW_Q_action "action"

/** @brief afw_utf8_t for string action */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_action;

/** @brief define for quoted string actionId */
#define AFW_Q_actionId "actionId"

/** @brief afw_utf8_t for string actionId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_actionId;

/** @brief define for quoted string actionNumber */
#define AFW_Q_actionNumber "actionNumber"

/** @brief afw_utf8_t for string actionNumber */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_actionNumber;

/** @brief define for quoted string actions */
#define AFW_Q_actions "actions"

/** @brief afw_utf8_t for string actions */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_actions;

/** @brief define for quoted string adaptor */
#define AFW_Q_adaptor "adaptor"

/** @brief afw_utf8_t for string adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptor;

/** @brief define for quoted string adaptorId */
#define AFW_Q_adaptorId "adaptorId"

/** @brief afw_utf8_t for string adaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptorId;

/** @brief define for quoted string adaptorType */
#define AFW_Q_adaptorType "adaptorType"

/** @brief afw_utf8_t for string adaptorType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptorType;

/** @brief define for quoted string adaptorTypeSpecific */
#define AFW_Q_adaptorTypeSpecific "adaptorTypeSpecific"

/** @brief afw_utf8_t for string adaptorTypeSpecific */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptorTypeSpecific;

/** @brief define for quoted string adaptor_additional_metrics */
#define AFW_Q_adaptor_additional_metrics "adaptor_additional_metrics"

/** @brief afw_utf8_t for string adaptor_additional_metrics */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptor_additional_metrics;

/** @brief define for quoted string adaptor_id */
#define AFW_Q_adaptor_id "adaptor_id"

/** @brief afw_utf8_t for string adaptor_id */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptor_id;

/** @brief define for quoted string adaptor_id_anchor */
#define AFW_Q_adaptor_id_anchor "adaptor_id_anchor"

/** @brief afw_utf8_t for string adaptor_id_anchor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptor_id_anchor;

/** @brief define for quoted string adaptor_metrics */
#define AFW_Q_adaptor_metrics "adaptor_metrics"

/** @brief afw_utf8_t for string adaptor_metrics */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptor_metrics;

/** @brief define for quoted string adaptor_objectCallback_signature */
#define AFW_Q_adaptor_objectCallback_signature "adaptor_objectCallback_signature"

/** @brief afw_utf8_t for string adaptor_objectCallback_signature */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptor_objectCallback_signature;

/** @brief define for quoted string adaptor_type */
#define AFW_Q_adaptor_type "adaptor_type"

/** @brief afw_utf8_t for string adaptor_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_adaptor_type;

/** @brief define for quoted string add */
#define AFW_Q_add "add"

/** @brief afw_utf8_t for string add */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add;

/** @brief define for quoted string addObjectCount */
#define AFW_Q_addObjectCount "addObjectCount"

/** @brief afw_utf8_t for string addObjectCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_addObjectCount;

/** @brief define for quoted string add_dayTimeDuration */
#define AFW_Q_add_dayTimeDuration "add_dayTimeDuration"

/** @brief afw_utf8_t for string add_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_dayTimeDuration;

/** @brief define for quoted string add_dayTimeDuration_dateTime */
#define AFW_Q_add_dayTimeDuration_dateTime "add_dayTimeDuration_dateTime"

/** @brief afw_utf8_t for string add_dayTimeDuration_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_dayTimeDuration_dateTime;

/** @brief define for quoted string add_double */
#define AFW_Q_add_double "add_double"

/** @brief afw_utf8_t for string add_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_double;

/** @brief define for quoted string add_entries */
#define AFW_Q_add_entries "add_entries"

/** @brief afw_utf8_t for string add_entries */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_entries;

/** @brief define for quoted string add_integer */
#define AFW_Q_add_integer "add_integer"

/** @brief afw_utf8_t for string add_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_integer;

/** @brief define for quoted string add_object */
#define AFW_Q_add_object "add_object"

/** @brief afw_utf8_t for string add_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_object;

/** @brief define for quoted string add_object_with_uri */
#define AFW_Q_add_object_with_uri "add_object_with_uri"

/** @brief afw_utf8_t for string add_object_with_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_object_with_uri;

/** @brief define for quoted string add_properties */
#define AFW_Q_add_properties "add_properties"

/** @brief afw_utf8_t for string add_properties */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_properties;

/** @brief define for quoted string add_string */
#define AFW_Q_add_string "add_string"

/** @brief afw_utf8_t for string add_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_string;

/** @brief define for quoted string add_value */
#define AFW_Q_add_value "add_value"

/** @brief afw_utf8_t for string add_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_value;

/** @brief define for quoted string add_yearMonthDuration */
#define AFW_Q_add_yearMonthDuration "add_yearMonthDuration"

/** @brief afw_utf8_t for string add_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_yearMonthDuration;

/** @brief define for quoted string add_yearMonthDuration_date */
#define AFW_Q_add_yearMonthDuration_date "add_yearMonthDuration_date"

/** @brief afw_utf8_t for string add_yearMonthDuration_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_yearMonthDuration_date;

/** @brief define for quoted string add_yearMonthDuration_dateTime */
#define AFW_Q_add_yearMonthDuration_dateTime "add_yearMonthDuration_dateTime"

/** @brief afw_utf8_t for string add_yearMonthDuration_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_add_yearMonthDuration_dateTime;

/** @brief define for quoted string additional */
#define AFW_Q_additional "additional"

/** @brief afw_utf8_t for string additional */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_additional;

/** @brief define for quoted string additionalArgCheck */
#define AFW_Q_additionalArgCheck "additionalArgCheck"

/** @brief afw_utf8_t for string additionalArgCheck */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_additionalArgCheck;

/** @brief define for quoted string additionalConstraints */
#define AFW_Q_additionalConstraints "additionalConstraints"

/** @brief afw_utf8_t for string additionalConstraints */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_additionalConstraints;

/** @brief define for quoted string administrative */
#define AFW_Q_administrative "administrative"

/** @brief afw_utf8_t for string administrative */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_administrative;

/** @brief define for quoted string advanceCursor */
#define AFW_Q_advanceCursor "advanceCursor"

/** @brief afw_utf8_t for string advanceCursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_advanceCursor;

/** @brief define for quoted string advice */
#define AFW_Q_advice "advice"

/** @brief afw_utf8_t for string advice */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_advice;

/** @brief define for quoted string afw */
#define AFW_Q_afw "afw"

/** @brief afw_utf8_t for string afw */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw;

/** @brief define for quoted string afwCamelCaseFunctionLabel */
#define AFW_Q_afwCamelCaseFunctionLabel "afwCamelCaseFunctionLabel"

/** @brief afw_utf8_t for string afwCamelCaseFunctionLabel */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afwCamelCaseFunctionLabel;

/** @brief define for quoted string afwCompiledVersion */
#define AFW_Q_afwCompiledVersion "afwCompiledVersion"

/** @brief afw_utf8_t for string afwCompiledVersion */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afwCompiledVersion;

/** @brief define for quoted string afwPackageId */
#define AFW_Q_afwPackageId "afwPackageId"

/** @brief afw_utf8_t for string afwPackageId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afwPackageId;

/** @brief define for quoted string afwPackageLabel */
#define AFW_Q_afwPackageLabel "afwPackageLabel"

/** @brief afw_utf8_t for string afwPackageLabel */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afwPackageLabel;

/** @brief define for quoted string afwVersion */
#define AFW_Q_afwVersion "afwVersion"

/** @brief afw_utf8_t for string afwVersion */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afwVersion;

/** @brief define for quoted string afw_adaptor */
#define AFW_Q_afw_adaptor "afw_adaptor"

/** @brief afw_utf8_t for string afw_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor;

/** @brief define for quoted string afw_adaptor_factory */
#define AFW_Q_afw_adaptor_factory "afw_adaptor_factory"

/** @brief afw_utf8_t for string afw_adaptor_factory */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_factory;

/** @brief define for quoted string afw_adaptor_impl_index */
#define AFW_Q_afw_adaptor_impl_index "afw_adaptor_impl_index"

/** @brief afw_utf8_t for string afw_adaptor_impl_index */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_impl_index;

/** @brief define for quoted string afw_adaptor_impl_index_cursor */
#define AFW_Q_afw_adaptor_impl_index_cursor "afw_adaptor_impl_index_cursor"

/** @brief afw_utf8_t for string afw_adaptor_impl_index_cursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_impl_index_cursor;

/** @brief define for quoted string afw_adaptor_journal */
#define AFW_Q_afw_adaptor_journal "afw_adaptor_journal"

/** @brief afw_utf8_t for string afw_adaptor_journal */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_journal;

/** @brief define for quoted string afw_adaptor_key_value */
#define AFW_Q_afw_adaptor_key_value "afw_adaptor_key_value"

/** @brief afw_utf8_t for string afw_adaptor_key_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_key_value;

/** @brief define for quoted string afw_adaptor_object_type_cache */
#define AFW_Q_afw_adaptor_object_type_cache "afw_adaptor_object_type_cache"

/** @brief afw_utf8_t for string afw_adaptor_object_type_cache */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_object_type_cache;

/** @brief define for quoted string afw_adaptor_session */
#define AFW_Q_afw_adaptor_session "afw_adaptor_session"

/** @brief afw_utf8_t for string afw_adaptor_session */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_session;

/** @brief define for quoted string afw_adaptor_transaction */
#define AFW_Q_afw_adaptor_transaction "afw_adaptor_transaction"

/** @brief afw_utf8_t for string afw_adaptor_transaction */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_adaptor_transaction;

/** @brief define for quoted string afw_array */
#define AFW_Q_afw_array "afw_array"

/** @brief afw_utf8_t for string afw_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_array;

/** @brief define for quoted string afw_array_setter */
#define AFW_Q_afw_array_setter "afw_array_setter"

/** @brief afw_utf8_t for string afw_array_setter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_array_setter;

/** @brief define for quoted string afw_authorization_handler */
#define AFW_Q_afw_authorization_handler "afw_authorization_handler"

/** @brief afw_utf8_t for string afw_authorization_handler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_authorization_handler;

/** @brief define for quoted string afw_authorization_handler_factory */
#define AFW_Q_afw_authorization_handler_factory "afw_authorization_handler_factory"

/** @brief afw_utf8_t for string afw_authorization_handler_factory */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_authorization_handler_factory;

/** @brief define for quoted string afw_bdb_adaptor */
#define AFW_Q_afw_bdb_adaptor "afw_bdb_adaptor"

/** @brief afw_utf8_t for string afw_bdb_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_bdb_adaptor;

/** @brief define for quoted string afw_command */
#define AFW_Q_afw_command "afw_command"

/** @brief afw_utf8_t for string afw_command */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_command;

/** @brief define for quoted string afw_components */
#define AFW_Q_afw_components "afw_components"

/** @brief afw_utf8_t for string afw_components */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_components;

/** @brief define for quoted string afw_components_extension_loaded */
#define AFW_Q_afw_components_extension_loaded "afw_components_extension_loaded"

/** @brief afw_utf8_t for string afw_components_extension_loaded */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_components_extension_loaded;

/** @brief define for quoted string afw_connection */
#define AFW_Q_afw_connection "afw_connection"

/** @brief afw_utf8_t for string afw_connection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_connection;

/** @brief define for quoted string afw_content_type */
#define AFW_Q_afw_content_type "afw_content_type"

/** @brief afw_utf8_t for string afw_content_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_content_type;

/** @brief define for quoted string afw_content_type_object_list_writer */
#define AFW_Q_afw_content_type_object_list_writer "afw_content_type_object_list_writer"

/** @brief afw_utf8_t for string afw_content_type_object_list_writer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_content_type_object_list_writer;

/** @brief define for quoted string afw_data_type */
#define AFW_Q_afw_data_type "afw_data_type"

/** @brief afw_utf8_t for string afw_data_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_data_type;

/** @brief define for quoted string afw_dev */
#define AFW_Q_afw_dev "afw_dev"

/** @brief afw_utf8_t for string afw_dev */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_dev;

/** @brief define for quoted string afw_dynamo_db_adaptor */
#define AFW_Q_afw_dynamo_db_adaptor "afw_dynamo_db_adaptor"

/** @brief afw_utf8_t for string afw_dynamo_db_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_dynamo_db_adaptor;

/** @brief define for quoted string afw_extension */
#define AFW_Q_afw_extension "afw_extension"

/** @brief afw_utf8_t for string afw_extension */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_extension;

/** @brief define for quoted string afw_ldap */
#define AFW_Q_afw_ldap "afw_ldap"

/** @brief afw_utf8_t for string afw_ldap */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_ldap;

/** @brief define for quoted string afw_ldap_adaptor */
#define AFW_Q_afw_ldap_adaptor "afw_ldap_adaptor"

/** @brief afw_utf8_t for string afw_ldap_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_ldap_adaptor;

/** @brief define for quoted string afw_lmdb */
#define AFW_Q_afw_lmdb "afw_lmdb"

/** @brief afw_utf8_t for string afw_lmdb */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_lmdb;

/** @brief define for quoted string afw_lmdb_adaptor */
#define AFW_Q_afw_lmdb_adaptor "afw_lmdb_adaptor"

/** @brief afw_utf8_t for string afw_lmdb_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_lmdb_adaptor;

/** @brief define for quoted string afw_log */
#define AFW_Q_afw_log "afw_log"

/** @brief afw_utf8_t for string afw_log */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_log;

/** @brief define for quoted string afw_log_factory */
#define AFW_Q_afw_log_factory "afw_log_factory"

/** @brief afw_utf8_t for string afw_log_factory */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_log_factory;

/** @brief define for quoted string afw_memory_t */
#define AFW_Q_afw_memory_t "afw_memory_t"

/** @brief afw_utf8_t for string afw_memory_t */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_memory_t;

/** @brief define for quoted string afw_object */
#define AFW_Q_afw_object "afw_object"

/** @brief afw_utf8_t for string afw_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_object;

/** @brief define for quoted string afw_object_associative_array */
#define AFW_Q_afw_object_associative_array "afw_object_associative_array"

/** @brief afw_utf8_t for string afw_object_associative_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_object_associative_array;

/** @brief define for quoted string afw_object_setter */
#define AFW_Q_afw_object_setter "afw_object_setter"

/** @brief afw_utf8_t for string afw_object_setter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_object_setter;

/** @brief define for quoted string afw_pool */
#define AFW_Q_afw_pool "afw_pool"

/** @brief afw_utf8_t for string afw_pool */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_pool;

/** @brief define for quoted string afw_request */
#define AFW_Q_afw_request "afw_request"

/** @brief afw_utf8_t for string afw_request */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_request;

/** @brief define for quoted string afw_request_handler */
#define AFW_Q_afw_request_handler "afw_request_handler"

/** @brief afw_utf8_t for string afw_request_handler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_request_handler;

/** @brief define for quoted string afw_request_handler_factory */
#define AFW_Q_afw_request_handler_factory "afw_request_handler_factory"

/** @brief afw_utf8_t for string afw_request_handler_factory */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_request_handler_factory;

/** @brief define for quoted string afw_request_handler_head */
#define AFW_Q_afw_request_handler_head "afw_request_handler_head"

/** @brief afw_utf8_t for string afw_request_handler_head */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_request_handler_head;

/** @brief define for quoted string afw_runtime */
#define AFW_Q_afw_runtime "afw_runtime"

/** @brief afw_utf8_t for string afw_runtime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_runtime;

/** @brief define for quoted string afw_server */
#define AFW_Q_afw_server "afw_server"

/** @brief afw_utf8_t for string afw_server */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_server;

/** @brief define for quoted string afw_server_fcgi */
#define AFW_Q_afw_server_fcgi "afw_server_fcgi"

/** @brief afw_utf8_t for string afw_server_fcgi */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_server_fcgi;

/** @brief define for quoted string afw_service_type */
#define AFW_Q_afw_service_type "afw_service_type"

/** @brief afw_utf8_t for string afw_service_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_service_type;

/** @brief define for quoted string afw_sql_adaptor */
#define AFW_Q_afw_sql_adaptor "afw_sql_adaptor"

/** @brief afw_utf8_t for string afw_sql_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_sql_adaptor;

/** @brief define for quoted string afw_stream */
#define AFW_Q_afw_stream "afw_stream"

/** @brief afw_utf8_t for string afw_stream */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_stream;

/** @brief define for quoted string afw_ubjson */
#define AFW_Q_afw_ubjson "afw_ubjson"

/** @brief afw_utf8_t for string afw_ubjson */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_ubjson;

/** @brief define for quoted string afw_utf8_t */
#define AFW_Q_afw_utf8_t "afw_utf8_t"

/** @brief afw_utf8_t for string afw_utf8_t */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_utf8_t;

/** @brief define for quoted string afw_value */
#define AFW_Q_afw_value "afw_value"

/** @brief afw_utf8_t for string afw_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_value;

/** @brief define for quoted string afw_value_get_evaluated_meta */
#define AFW_Q_afw_value_get_evaluated_meta "afw_value_get_evaluated_meta"

/** @brief afw_utf8_t for string afw_value_get_evaluated_meta */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_value_get_evaluated_meta;

/** @brief define for quoted string afw_value_get_evaluated_metas */
#define AFW_Q_afw_value_get_evaluated_metas "afw_value_get_evaluated_metas"

/** @brief afw_utf8_t for string afw_value_get_evaluated_metas */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_value_get_evaluated_metas;

/** @brief define for quoted string afw_variable_handler */
#define AFW_Q_afw_variable_handler "afw_variable_handler"

/** @brief afw_utf8_t for string afw_variable_handler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_variable_handler;

/** @brief define for quoted string afw_vfs */
#define AFW_Q_afw_vfs "afw_vfs"

/** @brief afw_utf8_t for string afw_vfs */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_vfs;

/** @brief define for quoted string afw_writer */
#define AFW_Q_afw_writer "afw_writer"

/** @brief afw_utf8_t for string afw_writer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_writer;

/** @brief define for quoted string afw_xctx */
#define AFW_Q_afw_xctx "afw_xctx"

/** @brief afw_utf8_t for string afw_xctx */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_xctx;

/** @brief define for quoted string afw_yaml */
#define AFW_Q_afw_yaml "afw_yaml"

/** @brief afw_utf8_t for string afw_yaml */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afw_yaml;

/** @brief define for quoted string afwjson */
#define AFW_Q_afwjson "afwjson"

/** @brief afw_utf8_t for string afwjson */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afwjson;

/** @brief define for quoted string afwyaml */
#define AFW_Q_afwyaml "afwyaml"

/** @brief afw_utf8_t for string afwyaml */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_afwyaml;

/** @brief define for quoted string alert */
#define AFW_Q_alert "alert"

/** @brief afw_utf8_t for string alert */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_alert;

/** @brief define for quoted string all_of */
#define AFW_Q_all_of "all_of"

/** @brief afw_utf8_t for string all_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_all_of;

/** @brief define for quoted string all_of_all */
#define AFW_Q_all_of_all "all_of_all"

/** @brief afw_utf8_t for string all_of_all */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_all_of_all;

/** @brief define for quoted string all_of_any */
#define AFW_Q_all_of_any "all_of_any"

/** @brief afw_utf8_t for string all_of_any */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_all_of_any;

/** @brief define for quoted string allowAdd */
#define AFW_Q_allowAdd "allowAdd"

/** @brief afw_utf8_t for string allowAdd */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowAdd;

/** @brief define for quoted string allowChange */
#define AFW_Q_allowChange "allowChange"

/** @brief afw_utf8_t for string allowChange */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowChange;

/** @brief define for quoted string allowDelete */
#define AFW_Q_allowDelete "allowDelete"

/** @brief afw_utf8_t for string allowDelete */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowDelete;

/** @brief define for quoted string allowDenyOverride */
#define AFW_Q_allowDenyOverride "allowDenyOverride"

/** @brief afw_utf8_t for string allowDenyOverride */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowDenyOverride;

/** @brief define for quoted string allowEntity */
#define AFW_Q_allowEntity "allowEntity"

/** @brief afw_utf8_t for string allowEntity */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowEntity;

/** @brief define for quoted string allowPermitOverride */
#define AFW_Q_allowPermitOverride "allowPermitOverride"

/** @brief afw_utf8_t for string allowPermitOverride */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowPermitOverride;

/** @brief define for quoted string allowQuery */
#define AFW_Q_allowQuery "allowQuery"

/** @brief afw_utf8_t for string allowQuery */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowQuery;

/** @brief define for quoted string allowRead */
#define AFW_Q_allowRead "allowRead"

/** @brief afw_utf8_t for string allowRead */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowRead;

/** @brief define for quoted string allowReregister */
#define AFW_Q_allowReregister "allowReregister"

/** @brief afw_utf8_t for string allowReregister */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowReregister;

/** @brief define for quoted string allowWrite */
#define AFW_Q_allowWrite "allowWrite"

/** @brief afw_utf8_t for string allowWrite */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowWrite;

/** @brief define for quoted string allowedValues */
#define AFW_Q_allowedValues "allowedValues"

/** @brief afw_utf8_t for string allowedValues */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_allowedValues;

/** @brief define for quoted string an_ellipsis */
#define AFW_Q_an_ellipsis "..."

/** @brief afw_utf8_t for string an_ellipsis */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_an_ellipsis;

/** @brief define for quoted string ancestorPaths */
#define AFW_Q_ancestorPaths "ancestorPaths"

/** @brief afw_utf8_t for string ancestorPaths */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ancestorPaths;

/** @brief define for quoted string and */
#define AFW_Q_and "and"

/** @brief afw_utf8_t for string and */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_and;

/** @brief define for quoted string annotate */
#define AFW_Q_annotate "annotate"

/** @brief afw_utf8_t for string annotate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_annotate;

/** @brief define for quoted string annotated */
#define AFW_Q_annotated "annotated"

/** @brief afw_utf8_t for string annotated */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_annotated;

/** @brief define for quoted string annotation */
#define AFW_Q_annotation "annotation"

/** @brief afw_utf8_t for string annotation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_annotation;

/** @brief define for quoted string any */
#define AFW_Q_any "any"

/** @brief afw_utf8_t for string any */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_any;

/** @brief define for quoted string anyURI */
#define AFW_Q_anyURI "anyURI"

/** @brief afw_utf8_t for string anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI;

/** @brief define for quoted string anyURI_at_least_one_member_of */
#define AFW_Q_anyURI_at_least_one_member_of "anyURI_at_least_one_member_of"

/** @brief afw_utf8_t for string anyURI_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_at_least_one_member_of;

/** @brief define for quoted string anyURI_bag */
#define AFW_Q_anyURI_bag "anyURI_bag"

/** @brief afw_utf8_t for string anyURI_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_bag;

/** @brief define for quoted string anyURI_bag_size */
#define AFW_Q_anyURI_bag_size "anyURI_bag_size"

/** @brief afw_utf8_t for string anyURI_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_bag_size;

/** @brief define for quoted string anyURI_ends_with */
#define AFW_Q_anyURI_ends_with "anyURI_ends_with"

/** @brief afw_utf8_t for string anyURI_ends_with */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_ends_with;

/** @brief define for quoted string anyURI_eq */
#define AFW_Q_anyURI_eq "anyURI_eq"

/** @brief afw_utf8_t for string anyURI_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_eq;

/** @brief define for quoted string anyURI_includes */
#define AFW_Q_anyURI_includes "anyURI_includes"

/** @brief afw_utf8_t for string anyURI_includes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_includes;

/** @brief define for quoted string anyURI_intersection */
#define AFW_Q_anyURI_intersection "anyURI_intersection"

/** @brief afw_utf8_t for string anyURI_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_intersection;

/** @brief define for quoted string anyURI_is_in */
#define AFW_Q_anyURI_is_in "anyURI_is_in"

/** @brief afw_utf8_t for string anyURI_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_is_in;

/** @brief define for quoted string anyURI_one_and_only */
#define AFW_Q_anyURI_one_and_only "anyURI_one_and_only"

/** @brief afw_utf8_t for string anyURI_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_one_and_only;

/** @brief define for quoted string anyURI_regexp_match */
#define AFW_Q_anyURI_regexp_match "anyURI_regexp_match"

/** @brief afw_utf8_t for string anyURI_regexp_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_regexp_match;

/** @brief define for quoted string anyURI_set_equals */
#define AFW_Q_anyURI_set_equals "anyURI_set_equals"

/** @brief afw_utf8_t for string anyURI_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_set_equals;

/** @brief define for quoted string anyURI_starts_with */
#define AFW_Q_anyURI_starts_with "anyURI_starts_with"

/** @brief afw_utf8_t for string anyURI_starts_with */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_starts_with;

/** @brief define for quoted string anyURI_subset */
#define AFW_Q_anyURI_subset "anyURI_subset"

/** @brief afw_utf8_t for string anyURI_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_subset;

/** @brief define for quoted string anyURI_substring */
#define AFW_Q_anyURI_substring "anyURI_substring"

/** @brief afw_utf8_t for string anyURI_substring */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_substring;

/** @brief define for quoted string anyURI_to_string */
#define AFW_Q_anyURI_to_string "anyURI_to_string"

/** @brief afw_utf8_t for string anyURI_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_to_string;

/** @brief define for quoted string anyURI_union */
#define AFW_Q_anyURI_union "anyURI_union"

/** @brief afw_utf8_t for string anyURI_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_anyURI_union;

/** @brief define for quoted string any_of */
#define AFW_Q_any_of "any_of"

/** @brief afw_utf8_t for string any_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_any_of;

/** @brief define for quoted string any_of_all */
#define AFW_Q_any_of_all "any_of_all"

/** @brief afw_utf8_t for string any_of_all */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_any_of_all;

/** @brief define for quoted string any_of_any */
#define AFW_Q_any_of_any "any_of_any"

/** @brief afw_utf8_t for string any_of_any */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_any_of_any;

/** @brief define for quoted string ao */
#define AFW_Q_ao "ao"

/** @brief afw_utf8_t for string ao */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ao;

/** @brief define for quoted string applicableFlags */
#define AFW_Q_applicableFlags "applicableFlags"

/** @brief afw_utf8_t for string applicableFlags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_applicableFlags;

/** @brief define for quoted string applicablePolicies */
#define AFW_Q_applicablePolicies "applicablePolicies"

/** @brief afw_utf8_t for string applicablePolicies */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_applicablePolicies;

/** @brief define for quoted string applicable_flags */
#define AFW_Q_applicable_flags "applicable_flags"

/** @brief afw_utf8_t for string applicable_flags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_applicable_flags;

/** @brief define for quoted string application */
#define AFW_Q_application "application"

/** @brief afw_utf8_t for string application */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_application;

/** @brief define for quoted string applicationId */
#define AFW_Q_applicationId "applicationId"

/** @brief afw_utf8_t for string applicationId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_applicationId;

/** @brief define for quoted string apply_object_options */
#define AFW_Q_apply_object_options "apply_object_options"

/** @brief afw_utf8_t for string apply_object_options */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_apply_object_options;

/** @brief define for quoted string argument */
#define AFW_Q_argument "argument"

/** @brief afw_utf8_t for string argument */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_argument;

/** @brief define for quoted string arguments */
#define AFW_Q_arguments "arguments"

/** @brief afw_utf8_t for string arguments */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_arguments;

/** @brief define for quoted string array */
#define AFW_Q_array "array"

/** @brief afw_utf8_t for string array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_array;

/** @brief define for quoted string array_includes */
#define AFW_Q_array_includes "array_includes"

/** @brief afw_utf8_t for string array_includes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_array_includes;

/** @brief define for quoted string as */
#define AFW_Q_as "as"

/** @brief afw_utf8_t for string as */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_as;

/** @brief define for quoted string assert */
#define AFW_Q_assert "assert"

/** @brief afw_utf8_t for string assert */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_assert;

/** @brief define for quoted string assert_has_property */
#define AFW_Q_assert_has_property "assert_has_property"

/** @brief afw_utf8_t for string assert_has_property */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_assert_has_property;

/** @brief define for quoted string assert_has_value */
#define AFW_Q_assert_has_value "assert_has_value"

/** @brief afw_utf8_t for string assert_has_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_assert_has_value;

/** @brief define for quoted string assert_value */
#define AFW_Q_assert_value "assert_value"

/** @brief afw_utf8_t for string assert_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_assert_value;

/** @brief define for quoted string assign */
#define AFW_Q_assign "assign"

/** @brief afw_utf8_t for string assign */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_assign;

/** @brief define for quoted string async */
#define AFW_Q_async "async"

/** @brief afw_utf8_t for string async */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_async;

/** @brief define for quoted string at_least_one_member_of */
#define AFW_Q_at_least_one_member_of "at_least_one_member_of"

/** @brief afw_utf8_t for string at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of;

/** @brief define for quoted string at_least_one_member_of_anyURI */
#define AFW_Q_at_least_one_member_of_anyURI "at_least_one_member_of_anyURI"

/** @brief afw_utf8_t for string at_least_one_member_of_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_anyURI;

/** @brief define for quoted string at_least_one_member_of_base64Binary */
#define AFW_Q_at_least_one_member_of_base64Binary "at_least_one_member_of_base64Binary"

/** @brief afw_utf8_t for string at_least_one_member_of_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_base64Binary;

/** @brief define for quoted string at_least_one_member_of_boolean */
#define AFW_Q_at_least_one_member_of_boolean "at_least_one_member_of_boolean"

/** @brief afw_utf8_t for string at_least_one_member_of_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_boolean;

/** @brief define for quoted string at_least_one_member_of_date */
#define AFW_Q_at_least_one_member_of_date "at_least_one_member_of_date"

/** @brief afw_utf8_t for string at_least_one_member_of_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_date;

/** @brief define for quoted string at_least_one_member_of_dateTime */
#define AFW_Q_at_least_one_member_of_dateTime "at_least_one_member_of_dateTime"

/** @brief afw_utf8_t for string at_least_one_member_of_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_dateTime;

/** @brief define for quoted string at_least_one_member_of_dayTimeDuration */
#define AFW_Q_at_least_one_member_of_dayTimeDuration "at_least_one_member_of_dayTimeDuration"

/** @brief afw_utf8_t for string at_least_one_member_of_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_dayTimeDuration;

/** @brief define for quoted string at_least_one_member_of_double */
#define AFW_Q_at_least_one_member_of_double "at_least_one_member_of_double"

/** @brief afw_utf8_t for string at_least_one_member_of_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_double;

/** @brief define for quoted string at_least_one_member_of_hexBinary */
#define AFW_Q_at_least_one_member_of_hexBinary "at_least_one_member_of_hexBinary"

/** @brief afw_utf8_t for string at_least_one_member_of_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_hexBinary;

/** @brief define for quoted string at_least_one_member_of_integer */
#define AFW_Q_at_least_one_member_of_integer "at_least_one_member_of_integer"

/** @brief afw_utf8_t for string at_least_one_member_of_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_integer;

/** @brief define for quoted string at_least_one_member_of_rfc822Name */
#define AFW_Q_at_least_one_member_of_rfc822Name "at_least_one_member_of_rfc822Name"

/** @brief afw_utf8_t for string at_least_one_member_of_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_rfc822Name;

/** @brief define for quoted string at_least_one_member_of_string */
#define AFW_Q_at_least_one_member_of_string "at_least_one_member_of_string"

/** @brief afw_utf8_t for string at_least_one_member_of_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_string;

/** @brief define for quoted string at_least_one_member_of_time */
#define AFW_Q_at_least_one_member_of_time "at_least_one_member_of_time"

/** @brief afw_utf8_t for string at_least_one_member_of_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_time;

/** @brief define for quoted string at_least_one_member_of_x500Name */
#define AFW_Q_at_least_one_member_of_x500Name "at_least_one_member_of_x500Name"

/** @brief afw_utf8_t for string at_least_one_member_of_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_x500Name;

/** @brief define for quoted string at_least_one_member_of_yearMonthDuration */
#define AFW_Q_at_least_one_member_of_yearMonthDuration "at_least_one_member_of_yearMonthDuration"

/** @brief afw_utf8_t for string at_least_one_member_of_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_at_least_one_member_of_yearMonthDuration;

/** @brief define for quoted string authority */
#define AFW_Q_authority "authority"

/** @brief afw_utf8_t for string authority */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authority;

/** @brief define for quoted string authorization */
#define AFW_Q_authorization "authorization"

/** @brief afw_utf8_t for string authorization */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorization;

/** @brief define for quoted string authorizationAdaptorCreate */
#define AFW_Q_authorizationAdaptorCreate "authorizationAdaptorCreate"

/** @brief afw_utf8_t for string authorizationAdaptorCreate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationAdaptorCreate;

/** @brief define for quoted string authorizationAdaptorDelete */
#define AFW_Q_authorizationAdaptorDelete "authorizationAdaptorDelete"

/** @brief afw_utf8_t for string authorizationAdaptorDelete */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationAdaptorDelete;

/** @brief define for quoted string authorizationAdaptorQuery */
#define AFW_Q_authorizationAdaptorQuery "authorizationAdaptorQuery"

/** @brief afw_utf8_t for string authorizationAdaptorQuery */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationAdaptorQuery;

/** @brief define for quoted string authorizationAdaptorRead */
#define AFW_Q_authorizationAdaptorRead "authorizationAdaptorRead"

/** @brief afw_utf8_t for string authorizationAdaptorRead */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationAdaptorRead;

/** @brief define for quoted string authorizationAdaptorUpdate */
#define AFW_Q_authorizationAdaptorUpdate "authorizationAdaptorUpdate"

/** @brief afw_utf8_t for string authorizationAdaptorUpdate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationAdaptorUpdate;

/** @brief define for quoted string authorizationCheck */
#define AFW_Q_authorizationCheck "authorizationCheck"

/** @brief afw_utf8_t for string authorizationCheck */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationCheck;

/** @brief define for quoted string authorizationControl */
#define AFW_Q_authorizationControl "authorizationControl"

/** @brief afw_utf8_t for string authorizationControl */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationControl;

/** @brief define for quoted string authorizationHandler */
#define AFW_Q_authorizationHandler "authorizationHandler"

/** @brief afw_utf8_t for string authorizationHandler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationHandler;

/** @brief define for quoted string authorizationHandlerId */
#define AFW_Q_authorizationHandlerId "authorizationHandlerId"

/** @brief afw_utf8_t for string authorizationHandlerId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationHandlerId;

/** @brief define for quoted string authorizationHandlerType */
#define AFW_Q_authorizationHandlerType "authorizationHandlerType"

/** @brief afw_utf8_t for string authorizationHandlerType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationHandlerType;

/** @brief define for quoted string authorizationResults */
#define AFW_Q_authorizationResults "authorizationResults"

/** @brief afw_utf8_t for string authorizationResults */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorizationResults;

/** @brief define for quoted string authorization_check */
#define AFW_Q_authorization_check "authorization_check"

/** @brief afw_utf8_t for string authorization_check */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorization_check;

/** @brief define for quoted string authorization_handler */
#define AFW_Q_authorization_handler "authorization_handler"

/** @brief afw_utf8_t for string authorization_handler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorization_handler;

/** @brief define for quoted string authorization_handler_id */
#define AFW_Q_authorization_handler_id "authorization_handler_id"

/** @brief afw_utf8_t for string authorization_handler_id */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorization_handler_id;

/** @brief define for quoted string authorization_handler_id_anchor */
#define AFW_Q_authorization_handler_id_anchor "authorization_handler_id_anchor"

/** @brief afw_utf8_t for string authorization_handler_id_anchor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorization_handler_id_anchor;

/** @brief define for quoted string authorization_handler_type */
#define AFW_Q_authorization_handler_type "authorization_handler_type"

/** @brief afw_utf8_t for string authorization_handler_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_authorization_handler_type;

/** @brief define for quoted string autoRegister */
#define AFW_Q_autoRegister "autoRegister"

/** @brief afw_utf8_t for string autoRegister */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_autoRegister;

/** @brief define for quoted string await */
#define AFW_Q_await "await"

/** @brief afw_utf8_t for string await */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_await;

/** @brief define for quoted string backtrace */
#define AFW_Q_backtrace "backtrace"

/** @brief afw_utf8_t for string backtrace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_backtrace;

/** @brief define for quoted string backtraceEvaluation */
#define AFW_Q_backtraceEvaluation "backtraceEvaluation"

/** @brief afw_utf8_t for string backtraceEvaluation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_backtraceEvaluation;

/** @brief define for quoted string bag */
#define AFW_Q_bag "bag"

/** @brief afw_utf8_t for string bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag;

/** @brief define for quoted string bag_anyURI */
#define AFW_Q_bag_anyURI "bag_anyURI"

/** @brief afw_utf8_t for string bag_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_anyURI;

/** @brief define for quoted string bag_array */
#define AFW_Q_bag_array "bag_array"

/** @brief afw_utf8_t for string bag_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_array;

/** @brief define for quoted string bag_base64Binary */
#define AFW_Q_bag_base64Binary "bag_base64Binary"

/** @brief afw_utf8_t for string bag_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_base64Binary;

/** @brief define for quoted string bag_boolean */
#define AFW_Q_bag_boolean "bag_boolean"

/** @brief afw_utf8_t for string bag_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_boolean;

/** @brief define for quoted string bag_date */
#define AFW_Q_bag_date "bag_date"

/** @brief afw_utf8_t for string bag_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_date;

/** @brief define for quoted string bag_dateTime */
#define AFW_Q_bag_dateTime "bag_dateTime"

/** @brief afw_utf8_t for string bag_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_dateTime;

/** @brief define for quoted string bag_dayTimeDuration */
#define AFW_Q_bag_dayTimeDuration "bag_dayTimeDuration"

/** @brief afw_utf8_t for string bag_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_dayTimeDuration;

/** @brief define for quoted string bag_dnsName */
#define AFW_Q_bag_dnsName "bag_dnsName"

/** @brief afw_utf8_t for string bag_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_dnsName;

/** @brief define for quoted string bag_double */
#define AFW_Q_bag_double "bag_double"

/** @brief afw_utf8_t for string bag_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_double;

/** @brief define for quoted string bag_expression */
#define AFW_Q_bag_expression "bag_expression"

/** @brief afw_utf8_t for string bag_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_expression;

/** @brief define for quoted string bag_function */
#define AFW_Q_bag_function "bag_function"

/** @brief afw_utf8_t for string bag_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_function;

/** @brief define for quoted string bag_hexBinary */
#define AFW_Q_bag_hexBinary "bag_hexBinary"

/** @brief afw_utf8_t for string bag_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_hexBinary;

/** @brief define for quoted string bag_hybrid */
#define AFW_Q_bag_hybrid "bag_hybrid"

/** @brief afw_utf8_t for string bag_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_hybrid;

/** @brief define for quoted string bag_ia5String */
#define AFW_Q_bag_ia5String "bag_ia5String"

/** @brief afw_utf8_t for string bag_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_ia5String;

/** @brief define for quoted string bag_integer */
#define AFW_Q_bag_integer "bag_integer"

/** @brief afw_utf8_t for string bag_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_integer;

/** @brief define for quoted string bag_ipAddress */
#define AFW_Q_bag_ipAddress "bag_ipAddress"

/** @brief afw_utf8_t for string bag_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_ipAddress;

/** @brief define for quoted string bag_null */
#define AFW_Q_bag_null "bag_null"

/** @brief afw_utf8_t for string bag_null */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_null;

/** @brief define for quoted string bag_object */
#define AFW_Q_bag_object "bag_object"

/** @brief afw_utf8_t for string bag_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_object;

/** @brief define for quoted string bag_objectId */
#define AFW_Q_bag_objectId "bag_objectId"

/** @brief afw_utf8_t for string bag_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_objectId;

/** @brief define for quoted string bag_objectPath */
#define AFW_Q_bag_objectPath "bag_objectPath"

/** @brief afw_utf8_t for string bag_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_objectPath;

/** @brief define for quoted string bag_password */
#define AFW_Q_bag_password "bag_password"

/** @brief afw_utf8_t for string bag_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_password;

/** @brief define for quoted string bag_rfc822Name */
#define AFW_Q_bag_rfc822Name "bag_rfc822Name"

/** @brief afw_utf8_t for string bag_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_rfc822Name;

/** @brief define for quoted string bag_script */
#define AFW_Q_bag_script "bag_script"

/** @brief afw_utf8_t for string bag_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_script;

/** @brief define for quoted string bag_size */
#define AFW_Q_bag_size "bag_size"

/** @brief afw_utf8_t for string bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size;

/** @brief define for quoted string bag_size_anyURI */
#define AFW_Q_bag_size_anyURI "bag_size_anyURI"

/** @brief afw_utf8_t for string bag_size_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_anyURI;

/** @brief define for quoted string bag_size_array */
#define AFW_Q_bag_size_array "bag_size_array"

/** @brief afw_utf8_t for string bag_size_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_array;

/** @brief define for quoted string bag_size_base64Binary */
#define AFW_Q_bag_size_base64Binary "bag_size_base64Binary"

/** @brief afw_utf8_t for string bag_size_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_base64Binary;

/** @brief define for quoted string bag_size_boolean */
#define AFW_Q_bag_size_boolean "bag_size_boolean"

/** @brief afw_utf8_t for string bag_size_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_boolean;

/** @brief define for quoted string bag_size_date */
#define AFW_Q_bag_size_date "bag_size_date"

/** @brief afw_utf8_t for string bag_size_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_date;

/** @brief define for quoted string bag_size_dateTime */
#define AFW_Q_bag_size_dateTime "bag_size_dateTime"

/** @brief afw_utf8_t for string bag_size_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_dateTime;

/** @brief define for quoted string bag_size_dayTimeDuration */
#define AFW_Q_bag_size_dayTimeDuration "bag_size_dayTimeDuration"

/** @brief afw_utf8_t for string bag_size_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_dayTimeDuration;

/** @brief define for quoted string bag_size_dnsName */
#define AFW_Q_bag_size_dnsName "bag_size_dnsName"

/** @brief afw_utf8_t for string bag_size_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_dnsName;

/** @brief define for quoted string bag_size_double */
#define AFW_Q_bag_size_double "bag_size_double"

/** @brief afw_utf8_t for string bag_size_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_double;

/** @brief define for quoted string bag_size_expression */
#define AFW_Q_bag_size_expression "bag_size_expression"

/** @brief afw_utf8_t for string bag_size_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_expression;

/** @brief define for quoted string bag_size_function */
#define AFW_Q_bag_size_function "bag_size_function"

/** @brief afw_utf8_t for string bag_size_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_function;

/** @brief define for quoted string bag_size_hexBinary */
#define AFW_Q_bag_size_hexBinary "bag_size_hexBinary"

/** @brief afw_utf8_t for string bag_size_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_hexBinary;

/** @brief define for quoted string bag_size_hybrid */
#define AFW_Q_bag_size_hybrid "bag_size_hybrid"

/** @brief afw_utf8_t for string bag_size_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_hybrid;

/** @brief define for quoted string bag_size_ia5String */
#define AFW_Q_bag_size_ia5String "bag_size_ia5String"

/** @brief afw_utf8_t for string bag_size_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_ia5String;

/** @brief define for quoted string bag_size_integer */
#define AFW_Q_bag_size_integer "bag_size_integer"

/** @brief afw_utf8_t for string bag_size_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_integer;

/** @brief define for quoted string bag_size_ipAddress */
#define AFW_Q_bag_size_ipAddress "bag_size_ipAddress"

/** @brief afw_utf8_t for string bag_size_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_ipAddress;

/** @brief define for quoted string bag_size_null */
#define AFW_Q_bag_size_null "bag_size_null"

/** @brief afw_utf8_t for string bag_size_null */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_null;

/** @brief define for quoted string bag_size_object */
#define AFW_Q_bag_size_object "bag_size_object"

/** @brief afw_utf8_t for string bag_size_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_object;

/** @brief define for quoted string bag_size_objectId */
#define AFW_Q_bag_size_objectId "bag_size_objectId"

/** @brief afw_utf8_t for string bag_size_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_objectId;

/** @brief define for quoted string bag_size_objectPath */
#define AFW_Q_bag_size_objectPath "bag_size_objectPath"

/** @brief afw_utf8_t for string bag_size_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_objectPath;

/** @brief define for quoted string bag_size_password */
#define AFW_Q_bag_size_password "bag_size_password"

/** @brief afw_utf8_t for string bag_size_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_password;

/** @brief define for quoted string bag_size_rfc822Name */
#define AFW_Q_bag_size_rfc822Name "bag_size_rfc822Name"

/** @brief afw_utf8_t for string bag_size_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_rfc822Name;

/** @brief define for quoted string bag_size_script */
#define AFW_Q_bag_size_script "bag_size_script"

/** @brief afw_utf8_t for string bag_size_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_script;

/** @brief define for quoted string bag_size_string */
#define AFW_Q_bag_size_string "bag_size_string"

/** @brief afw_utf8_t for string bag_size_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_string;

/** @brief define for quoted string bag_size_template */
#define AFW_Q_bag_size_template "bag_size_template"

/** @brief afw_utf8_t for string bag_size_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_template;

/** @brief define for quoted string bag_size_time */
#define AFW_Q_bag_size_time "bag_size_time"

/** @brief afw_utf8_t for string bag_size_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_time;

/** @brief define for quoted string bag_size_x500Name */
#define AFW_Q_bag_size_x500Name "bag_size_x500Name"

/** @brief afw_utf8_t for string bag_size_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_x500Name;

/** @brief define for quoted string bag_size_xpathExpression */
#define AFW_Q_bag_size_xpathExpression "bag_size_xpathExpression"

/** @brief afw_utf8_t for string bag_size_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_xpathExpression;

/** @brief define for quoted string bag_size_yearMonthDuration */
#define AFW_Q_bag_size_yearMonthDuration "bag_size_yearMonthDuration"

/** @brief afw_utf8_t for string bag_size_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_size_yearMonthDuration;

/** @brief define for quoted string bag_string */
#define AFW_Q_bag_string "bag_string"

/** @brief afw_utf8_t for string bag_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_string;

/** @brief define for quoted string bag_template */
#define AFW_Q_bag_template "bag_template"

/** @brief afw_utf8_t for string bag_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_template;

/** @brief define for quoted string bag_time */
#define AFW_Q_bag_time "bag_time"

/** @brief afw_utf8_t for string bag_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_time;

/** @brief define for quoted string bag_x500Name */
#define AFW_Q_bag_x500Name "bag_x500Name"

/** @brief afw_utf8_t for string bag_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_x500Name;

/** @brief define for quoted string bag_xpathExpression */
#define AFW_Q_bag_xpathExpression "bag_xpathExpression"

/** @brief afw_utf8_t for string bag_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_xpathExpression;

/** @brief define for quoted string bag_yearMonthDuration */
#define AFW_Q_bag_yearMonthDuration "bag_yearMonthDuration"

/** @brief afw_utf8_t for string bag_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bag_yearMonthDuration;

/** @brief define for quoted string base */
#define AFW_Q_base "base"

/** @brief afw_utf8_t for string base */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base;

/** @brief define for quoted string base64Binary */
#define AFW_Q_base64Binary "base64Binary"

/** @brief afw_utf8_t for string base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary;

/** @brief define for quoted string base64Binary_at_least_one_member_of */
#define AFW_Q_base64Binary_at_least_one_member_of "base64Binary_at_least_one_member_of"

/** @brief afw_utf8_t for string base64Binary_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_at_least_one_member_of;

/** @brief define for quoted string base64Binary_bag */
#define AFW_Q_base64Binary_bag "base64Binary_bag"

/** @brief afw_utf8_t for string base64Binary_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_bag;

/** @brief define for quoted string base64Binary_bag_size */
#define AFW_Q_base64Binary_bag_size "base64Binary_bag_size"

/** @brief afw_utf8_t for string base64Binary_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_bag_size;

/** @brief define for quoted string base64Binary_eq */
#define AFW_Q_base64Binary_eq "base64Binary_eq"

/** @brief afw_utf8_t for string base64Binary_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_eq;

/** @brief define for quoted string base64Binary_intersection */
#define AFW_Q_base64Binary_intersection "base64Binary_intersection"

/** @brief afw_utf8_t for string base64Binary_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_intersection;

/** @brief define for quoted string base64Binary_is_in */
#define AFW_Q_base64Binary_is_in "base64Binary_is_in"

/** @brief afw_utf8_t for string base64Binary_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_is_in;

/** @brief define for quoted string base64Binary_one_and_only */
#define AFW_Q_base64Binary_one_and_only "base64Binary_one_and_only"

/** @brief afw_utf8_t for string base64Binary_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_one_and_only;

/** @brief define for quoted string base64Binary_set_equals */
#define AFW_Q_base64Binary_set_equals "base64Binary_set_equals"

/** @brief afw_utf8_t for string base64Binary_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_set_equals;

/** @brief define for quoted string base64Binary_subset */
#define AFW_Q_base64Binary_subset "base64Binary_subset"

/** @brief afw_utf8_t for string base64Binary_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_subset;

/** @brief define for quoted string base64Binary_union */
#define AFW_Q_base64Binary_union "base64Binary_union"

/** @brief afw_utf8_t for string base64Binary_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_base64Binary_union;

/** @brief define for quoted string basic */
#define AFW_Q_basic "basic"

/** @brief afw_utf8_t for string basic */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_basic;

/** @brief define for quoted string beginTime */
#define AFW_Q_beginTime "beginTime"

/** @brief afw_utf8_t for string beginTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_beginTime;

/** @brief define for quoted string boolean */
#define AFW_Q_boolean "boolean"

/** @brief afw_utf8_t for string boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean;

/** @brief define for quoted string boolean_at_least_one_member_of */
#define AFW_Q_boolean_at_least_one_member_of "boolean_at_least_one_member_of"

/** @brief afw_utf8_t for string boolean_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_at_least_one_member_of;

/** @brief define for quoted string boolean_bag */
#define AFW_Q_boolean_bag "boolean_bag"

/** @brief afw_utf8_t for string boolean_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_bag;

/** @brief define for quoted string boolean_bag_size */
#define AFW_Q_boolean_bag_size "boolean_bag_size"

/** @brief afw_utf8_t for string boolean_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_bag_size;

/** @brief define for quoted string boolean_eq */
#define AFW_Q_boolean_eq "boolean_eq"

/** @brief afw_utf8_t for string boolean_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_eq;

/** @brief define for quoted string boolean_intersection */
#define AFW_Q_boolean_intersection "boolean_intersection"

/** @brief afw_utf8_t for string boolean_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_intersection;

/** @brief define for quoted string boolean_is_in */
#define AFW_Q_boolean_is_in "boolean_is_in"

/** @brief afw_utf8_t for string boolean_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_is_in;

/** @brief define for quoted string boolean_one_and_only */
#define AFW_Q_boolean_one_and_only "boolean_one_and_only"

/** @brief afw_utf8_t for string boolean_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_one_and_only;

/** @brief define for quoted string boolean_set_equals */
#define AFW_Q_boolean_set_equals "boolean_set_equals"

/** @brief afw_utf8_t for string boolean_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_set_equals;

/** @brief define for quoted string boolean_subset */
#define AFW_Q_boolean_subset "boolean_subset"

/** @brief afw_utf8_t for string boolean_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_subset;

/** @brief define for quoted string boolean_to_string */
#define AFW_Q_boolean_to_string "boolean_to_string"

/** @brief afw_utf8_t for string boolean_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_to_string;

/** @brief define for quoted string boolean_union */
#define AFW_Q_boolean_union "boolean_union"

/** @brief afw_utf8_t for string boolean_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_boolean_union;

/** @brief define for quoted string break */
#define AFW_Q_break "break"

/** @brief afw_utf8_t for string break */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_break;

/** @brief define for quoted string brief */
#define AFW_Q_brief "brief"

/** @brief afw_utf8_t for string brief */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_brief;

/** @brief define for quoted string bugReportEmail */
#define AFW_Q_bugReportEmail "bugReportEmail"

/** @brief afw_utf8_t for string bugReportEmail */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_bugReportEmail;

/** @brief define for quoted string buildType */
#define AFW_Q_buildType "buildType"

/** @brief afw_utf8_t for string buildType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_buildType;

/** @brief define for quoted string buildTypeParameters */
#define AFW_Q_buildTypeParameters "buildTypeParameters"

/** @brief afw_utf8_t for string buildTypeParameters */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_buildTypeParameters;

/** @brief define for quoted string cType */
#define AFW_Q_cType "cType"

/** @brief afw_utf8_t for string cType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_cType;

/** @brief define for quoted string call */
#define AFW_Q_call "call"

/** @brief afw_utf8_t for string call */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_call;

/** @brief define for quoted string camelCaseFunctionLabel */
#define AFW_Q_camelCaseFunctionLabel "camelCaseFunctionLabel"

/** @brief afw_utf8_t for string camelCaseFunctionLabel */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_camelCaseFunctionLabel;

/** @brief define for quoted string canBeUndefined */
#define AFW_Q_canBeUndefined "canBeUndefined"

/** @brief afw_utf8_t for string canBeUndefined */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_canBeUndefined;

/** @brief define for quoted string canRestart */
#define AFW_Q_canRestart "canRestart"

/** @brief afw_utf8_t for string canRestart */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_canRestart;

/** @brief define for quoted string canStart */
#define AFW_Q_canStart "canStart"

/** @brief afw_utf8_t for string canStart */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_canStart;

/** @brief define for quoted string canStop */
#define AFW_Q_canStop "canStop"

/** @brief afw_utf8_t for string canStop */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_canStop;

/** @brief define for quoted string case */
#define AFW_Q_case "case"

/** @brief afw_utf8_t for string case */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_case;

/** @brief define for quoted string case_insensitive_string */
#define AFW_Q_case_insensitive_string "case-insensitive-string"

/** @brief afw_utf8_t for string case_insensitive_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_case_insensitive_string;

/** @brief define for quoted string case_sensitive_string */
#define AFW_Q_case_sensitive_string "case-sensitive-string"

/** @brief afw_utf8_t for string case_sensitive_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_case_sensitive_string;

/** @brief define for quoted string catch */
#define AFW_Q_catch "catch"

/** @brief afw_utf8_t for string catch */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_catch;

/** @brief define for quoted string category */
#define AFW_Q_category "category"

/** @brief afw_utf8_t for string category */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_category;

/** @brief define for quoted string ceil */
#define AFW_Q_ceil "ceil"

/** @brief afw_utf8_t for string ceil */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ceil;

/** @brief define for quoted string ceil_double */
#define AFW_Q_ceil_double "ceil_double"

/** @brief afw_utf8_t for string ceil_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ceil_double;

/** @brief define for quoted string checkIntermediateMode */
#define AFW_Q_checkIntermediateMode "checkIntermediateMode"

/** @brief afw_utf8_t for string checkIntermediateMode */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_checkIntermediateMode;

/** @brief define for quoted string checkRequired */
#define AFW_Q_checkRequired "checkRequired"

/** @brief afw_utf8_t for string checkRequired */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_checkRequired;

/** @brief define for quoted string class */
#define AFW_Q_class "class"

/** @brief afw_utf8_t for string class */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_class;

/** @brief define for quoted string clone */
#define AFW_Q_clone "clone"

/** @brief afw_utf8_t for string clone */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_clone;

/** @brief define for quoted string clone_array */
#define AFW_Q_clone_array "clone_array"

/** @brief afw_utf8_t for string clone_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_clone_array;

/** @brief define for quoted string clone_object */
#define AFW_Q_clone_object "clone_object"

/** @brief afw_utf8_t for string clone_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_clone_object;

/** @brief define for quoted string close */
#define AFW_Q_close "close"

/** @brief afw_utf8_t for string close */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_close;

/** @brief define for quoted string collectionURIs */
#define AFW_Q_collectionURIs "collectionURIs"

/** @brief afw_utf8_t for string collectionURIs */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_collectionURIs;

/** @brief define for quoted string column */
#define AFW_Q_column "column"

/** @brief afw_utf8_t for string column */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_column;

/** @brief define for quoted string compare_uri */
#define AFW_Q_compare_uri "compare_uri"

/** @brief afw_utf8_t for string compare_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compare_uri;

/** @brief define for quoted string compile */
#define AFW_Q_compile "compile"

/** @brief afw_utf8_t for string compile */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile;

/** @brief define for quoted string compileDate */
#define AFW_Q_compileDate "compileDate"

/** @brief afw_utf8_t for string compileDate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compileDate;

/** @brief define for quoted string compileOptions */
#define AFW_Q_compileOptions "compileOptions"

/** @brief afw_utf8_t for string compileOptions */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compileOptions;

/** @brief define for quoted string compileTime */
#define AFW_Q_compileTime "compileTime"

/** @brief afw_utf8_t for string compileTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compileTime;

/** @brief define for quoted string compileType */
#define AFW_Q_compileType "compileType"

/** @brief afw_utf8_t for string compileType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compileType;

/** @brief define for quoted string compile_expression */
#define AFW_Q_compile_expression "compile_expression"

/** @brief afw_utf8_t for string compile_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_expression;

/** @brief define for quoted string compile_expression_tuple */
#define AFW_Q_compile_expression_tuple "compile_expression_tuple"

/** @brief afw_utf8_t for string compile_expression_tuple */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_expression_tuple;

/** @brief define for quoted string compile_hybrid */
#define AFW_Q_compile_hybrid "compile_hybrid"

/** @brief afw_utf8_t for string compile_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_hybrid;

/** @brief define for quoted string compile_json */
#define AFW_Q_compile_json "compile_json"

/** @brief afw_utf8_t for string compile_json */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_json;

/** @brief define for quoted string compile_regexp */
#define AFW_Q_compile_regexp "compile_regexp"

/** @brief afw_utf8_t for string compile_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_regexp;

/** @brief define for quoted string compile_relaxed_json */
#define AFW_Q_compile_relaxed_json "compile_relaxed_json"

/** @brief afw_utf8_t for string compile_relaxed_json */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_relaxed_json;

/** @brief define for quoted string compile_script */
#define AFW_Q_compile_script "compile_script"

/** @brief afw_utf8_t for string compile_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_script;

/** @brief define for quoted string compile_template */
#define AFW_Q_compile_template "compile_template"

/** @brief afw_utf8_t for string compile_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_template;

/** @brief define for quoted string compile_type */
#define AFW_Q_compile_type "compile_type"

/** @brief afw_utf8_t for string compile_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_type;

/** @brief define for quoted string compile_xpathExpression */
#define AFW_Q_compile_xpathExpression "compile_xpathExpression"

/** @brief afw_utf8_t for string compile_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compile_xpathExpression;

/** @brief define for quoted string compiler */
#define AFW_Q_compiler "compiler"

/** @brief afw_utf8_t for string compiler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compiler;

/** @brief define for quoted string compiler_assert */
#define AFW_Q_compiler_assert "compiler_assert"

/** @brief afw_utf8_t for string compiler_assert */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compiler_assert;

/** @brief define for quoted string compiler_expression */
#define AFW_Q_compiler_expression "compiler_expression"

/** @brief afw_utf8_t for string compiler_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compiler_expression;

/** @brief define for quoted string compiler_script */
#define AFW_Q_compiler_script "compiler_script"

/** @brief afw_utf8_t for string compiler_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compiler_script;

/** @brief define for quoted string compiler_test_script */
#define AFW_Q_compiler_test_script "compiler_test_script"

/** @brief afw_utf8_t for string compiler_test_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_compiler_test_script;

/** @brief define for quoted string componentType */
#define AFW_Q_componentType "componentType"

/** @brief afw_utf8_t for string componentType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_componentType;

/** @brief define for quoted string composite */
#define AFW_Q_composite "composite"

/** @brief afw_utf8_t for string composite */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_composite;

/** @brief define for quoted string concat */
#define AFW_Q_concat "concat"

/** @brief afw_utf8_t for string concat */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_concat;

/** @brief define for quoted string concurrent */
#define AFW_Q_concurrent "concurrent"

/** @brief afw_utf8_t for string concurrent */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_concurrent;

/** @brief define for quoted string conf */
#define AFW_Q_conf "conf"

/** @brief afw_utf8_t for string conf */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_conf;

/** @brief define for quoted string confAdaptorId */
#define AFW_Q_confAdaptorId "confAdaptorId"

/** @brief afw_utf8_t for string confAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_confAdaptorId;

/** @brief define for quoted string confId */
#define AFW_Q_confId "confId"

/** @brief afw_utf8_t for string confId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_confId;

/** @brief define for quoted string confPropertyObjectType */
#define AFW_Q_confPropertyObjectType "confPropertyObjectType"

/** @brief afw_utf8_t for string confPropertyObjectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_confPropertyObjectType;

/** @brief define for quoted string confSubtype */
#define AFW_Q_confSubtype "confSubtype"

/** @brief afw_utf8_t for string confSubtype */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_confSubtype;

/** @brief define for quoted string confType */
#define AFW_Q_confType "confType"

/** @brief afw_utf8_t for string confType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_confType;

/** @brief define for quoted string conf_type */
#define AFW_Q_conf_type "conf_type"

/** @brief afw_utf8_t for string conf_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_conf_type;

/** @brief define for quoted string console */
#define AFW_Q_console "console"

/** @brief afw_utf8_t for string console */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_console;

/** @brief define for quoted string const */
#define AFW_Q_const "const"

/** @brief afw_utf8_t for string const */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_const;

/** @brief define for quoted string consumeCursor */
#define AFW_Q_consumeCursor "consumeCursor"

/** @brief afw_utf8_t for string consumeCursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_consumeCursor;

/** @brief define for quoted string consumeFilter */
#define AFW_Q_consumeFilter "consumeFilter"

/** @brief afw_utf8_t for string consumeFilter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_consumeFilter;

/** @brief define for quoted string consumeStartTime */
#define AFW_Q_consumeStartTime "consumeStartTime"

/** @brief afw_utf8_t for string consumeStartTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_consumeStartTime;

/** @brief define for quoted string consumed */
#define AFW_Q_consumed "consumed"

/** @brief afw_utf8_t for string consumed */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_consumed;

/** @brief define for quoted string consumerId */
#define AFW_Q_consumerId "consumerId"

/** @brief afw_utf8_t for string consumerId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_consumerId;

/** @brief define for quoted string contains */
#define AFW_Q_contains "contains"

/** @brief afw_utf8_t for string contains */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_contains;

/** @brief define for quoted string containsUnresolvedSubstitutions */
#define AFW_Q_containsUnresolvedSubstitutions "containsUnresolvedSubstitutions"

/** @brief afw_utf8_t for string containsUnresolvedSubstitutions */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_containsUnresolvedSubstitutions;

/** @brief define for quoted string contentType */
#define AFW_Q_contentType "contentType"

/** @brief afw_utf8_t for string contentType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_contentType;

/** @brief define for quoted string content_type */
#define AFW_Q_content_type "content_type"

/** @brief afw_utf8_t for string content_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_content_type;

/** @brief define for quoted string contextType */
#define AFW_Q_contextType "contextType"

/** @brief afw_utf8_t for string contextType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_contextType;

/** @brief define for quoted string contextTypeId */
#define AFW_Q_contextTypeId "contextTypeId"

/** @brief afw_utf8_t for string contextTypeId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_contextTypeId;

/** @brief define for quoted string continue */
#define AFW_Q_continue "continue"

/** @brief afw_utf8_t for string continue */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_continue;

/** @brief define for quoted string control */
#define AFW_Q_control "control"

/** @brief afw_utf8_t for string control */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_control;

/** @brief define for quoted string convert_AdaptiveQueryCriteria_to_query_string */
#define AFW_Q_convert_AdaptiveQueryCriteria_to_query_string "convert_AdaptiveQueryCriteria_to_query_string"

/** @brief afw_utf8_t for string convert_AdaptiveQueryCriteria_to_query_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_convert_AdaptiveQueryCriteria_to_query_string;

/** @brief define for quoted string convert_query_string_to_AdaptiveQueryCriteria */
#define AFW_Q_convert_query_string_to_AdaptiveQueryCriteria "convert_query_string_to_AdaptiveQueryCriteria"

/** @brief afw_utf8_t for string convert_query_string_to_AdaptiveQueryCriteria */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_convert_query_string_to_AdaptiveQueryCriteria;

/** @brief define for quoted string convert_syntax_hybrid_to_expression */
#define AFW_Q_convert_syntax_hybrid_to_expression "convert_syntax_hybrid_to_expression"

/** @brief afw_utf8_t for string convert_syntax_hybrid_to_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_convert_syntax_hybrid_to_expression;

/** @brief define for quoted string core */
#define AFW_Q_core "core"

/** @brief afw_utf8_t for string core */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_core;

/** @brief define for quoted string coreAuthorizationCheck */
#define AFW_Q_coreAuthorizationCheck "coreAuthorizationCheck"

/** @brief afw_utf8_t for string coreAuthorizationCheck */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_coreAuthorizationCheck;

/** @brief define for quoted string create */
#define AFW_Q_create "create"

/** @brief afw_utf8_t for string create */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_create;

/** @brief define for quoted string crit */
#define AFW_Q_crit "crit"

/** @brief afw_utf8_t for string crit */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_crit;

/** @brief define for quoted string current */
#define AFW_Q_current "current"

/** @brief afw_utf8_t for string current */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_current;

/** @brief define for quoted string currentCursor */
#define AFW_Q_currentCursor "currentCursor"

/** @brief afw_utf8_t for string currentCursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_currentCursor;

/** @brief define for quoted string custom */
#define AFW_Q_custom "custom"

/** @brief afw_utf8_t for string custom */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_custom;

/** @brief define for quoted string data */
#define AFW_Q_data "data"

/** @brief afw_utf8_t for string data */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_data;

/** @brief define for quoted string dataType */
#define AFW_Q_dataType "dataType"

/** @brief afw_utf8_t for string dataType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dataType;

/** @brief define for quoted string dataTypeCategory */
#define AFW_Q_dataTypeCategory "dataTypeCategory"

/** @brief afw_utf8_t for string dataTypeCategory */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dataTypeCategory;

/** @brief define for quoted string dataTypeMethod */
#define AFW_Q_dataTypeMethod "dataTypeMethod"

/** @brief afw_utf8_t for string dataTypeMethod */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dataTypeMethod;

/** @brief define for quoted string dataTypeMethodNumber */
#define AFW_Q_dataTypeMethodNumber "dataTypeMethodNumber"

/** @brief afw_utf8_t for string dataTypeMethodNumber */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dataTypeMethodNumber;

/** @brief define for quoted string dataTypeParameter */
#define AFW_Q_dataTypeParameter "dataTypeParameter"

/** @brief afw_utf8_t for string dataTypeParameter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dataTypeParameter;

/** @brief define for quoted string dataTypeParameterFormatted */
#define AFW_Q_dataTypeParameterFormatted "dataTypeParameterFormatted"

/** @brief afw_utf8_t for string dataTypeParameterFormatted */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dataTypeParameterFormatted;

/** @brief define for quoted string dataTypeParameterType */
#define AFW_Q_dataTypeParameterType "dataTypeParameterType"

/** @brief afw_utf8_t for string dataTypeParameterType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dataTypeParameterType;

/** @brief define for quoted string data_type */
#define AFW_Q_data_type "data_type"

/** @brief afw_utf8_t for string data_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_data_type;

/** @brief define for quoted string date */
#define AFW_Q_date "date"

/** @brief afw_utf8_t for string date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date;

/** @brief define for quoted string dateTime */
#define AFW_Q_dateTime "dateTime"

/** @brief afw_utf8_t for string dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime;

/** @brief define for quoted string dateTime_add_dayTimeDuration */
#define AFW_Q_dateTime_add_dayTimeDuration "dateTime_add_dayTimeDuration"

/** @brief afw_utf8_t for string dateTime_add_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_add_dayTimeDuration;

/** @brief define for quoted string dateTime_add_dayTimeDuration_1_0 */
#define AFW_Q_dateTime_add_dayTimeDuration_1_0 "dateTime_add_dayTimeDuration_1_0"

/** @brief afw_utf8_t for string dateTime_add_dayTimeDuration_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_add_dayTimeDuration_1_0;

/** @brief define for quoted string dateTime_add_yearMonthDuration */
#define AFW_Q_dateTime_add_yearMonthDuration "dateTime_add_yearMonthDuration"

/** @brief afw_utf8_t for string dateTime_add_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_add_yearMonthDuration;

/** @brief define for quoted string dateTime_add_yearMonthDuration_1_0 */
#define AFW_Q_dateTime_add_yearMonthDuration_1_0 "dateTime_add_yearMonthDuration_1_0"

/** @brief afw_utf8_t for string dateTime_add_yearMonthDuration_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_add_yearMonthDuration_1_0;

/** @brief define for quoted string dateTime_at_least_one_member_of */
#define AFW_Q_dateTime_at_least_one_member_of "dateTime_at_least_one_member_of"

/** @brief afw_utf8_t for string dateTime_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_at_least_one_member_of;

/** @brief define for quoted string dateTime_bag */
#define AFW_Q_dateTime_bag "dateTime_bag"

/** @brief afw_utf8_t for string dateTime_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_bag;

/** @brief define for quoted string dateTime_bag_size */
#define AFW_Q_dateTime_bag_size "dateTime_bag_size"

/** @brief afw_utf8_t for string dateTime_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_bag_size;

/** @brief define for quoted string dateTime_eq */
#define AFW_Q_dateTime_eq "dateTime_eq"

/** @brief afw_utf8_t for string dateTime_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_eq;

/** @brief define for quoted string dateTime_ge */
#define AFW_Q_dateTime_ge "dateTime_ge"

/** @brief afw_utf8_t for string dateTime_ge */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_ge;

/** @brief define for quoted string dateTime_gt */
#define AFW_Q_dateTime_gt "dateTime_gt"

/** @brief afw_utf8_t for string dateTime_gt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_gt;

/** @brief define for quoted string dateTime_intersection */
#define AFW_Q_dateTime_intersection "dateTime_intersection"

/** @brief afw_utf8_t for string dateTime_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_intersection;

/** @brief define for quoted string dateTime_is_in */
#define AFW_Q_dateTime_is_in "dateTime_is_in"

/** @brief afw_utf8_t for string dateTime_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_is_in;

/** @brief define for quoted string dateTime_le */
#define AFW_Q_dateTime_le "dateTime_le"

/** @brief afw_utf8_t for string dateTime_le */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_le;

/** @brief define for quoted string dateTime_lt */
#define AFW_Q_dateTime_lt "dateTime_lt"

/** @brief afw_utf8_t for string dateTime_lt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_lt;

/** @brief define for quoted string dateTime_one_and_only */
#define AFW_Q_dateTime_one_and_only "dateTime_one_and_only"

/** @brief afw_utf8_t for string dateTime_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_one_and_only;

/** @brief define for quoted string dateTime_set_equals */
#define AFW_Q_dateTime_set_equals "dateTime_set_equals"

/** @brief afw_utf8_t for string dateTime_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_set_equals;

/** @brief define for quoted string dateTime_subset */
#define AFW_Q_dateTime_subset "dateTime_subset"

/** @brief afw_utf8_t for string dateTime_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_subset;

/** @brief define for quoted string dateTime_subtract_dayTimeDuration */
#define AFW_Q_dateTime_subtract_dayTimeDuration "dateTime_subtract_dayTimeDuration"

/** @brief afw_utf8_t for string dateTime_subtract_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_subtract_dayTimeDuration;

/** @brief define for quoted string dateTime_subtract_dayTimeDuration_1_0 */
#define AFW_Q_dateTime_subtract_dayTimeDuration_1_0 "dateTime_subtract_dayTimeDuration_1_0"

/** @brief afw_utf8_t for string dateTime_subtract_dayTimeDuration_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_subtract_dayTimeDuration_1_0;

/** @brief define for quoted string dateTime_subtract_yearMonthDuration */
#define AFW_Q_dateTime_subtract_yearMonthDuration "dateTime_subtract_yearMonthDuration"

/** @brief afw_utf8_t for string dateTime_subtract_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_subtract_yearMonthDuration;

/** @brief define for quoted string dateTime_subtract_yearMonthDuration_1_0 */
#define AFW_Q_dateTime_subtract_yearMonthDuration_1_0 "dateTime_subtract_yearMonthDuration_1_0"

/** @brief afw_utf8_t for string dateTime_subtract_yearMonthDuration_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_subtract_yearMonthDuration_1_0;

/** @brief define for quoted string dateTime_to_string */
#define AFW_Q_dateTime_to_string "dateTime_to_string"

/** @brief afw_utf8_t for string dateTime_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_to_string;

/** @brief define for quoted string dateTime_union */
#define AFW_Q_dateTime_union "dateTime_union"

/** @brief afw_utf8_t for string dateTime_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dateTime_union;

/** @brief define for quoted string date_add_yearMonthDuration */
#define AFW_Q_date_add_yearMonthDuration "date_add_yearMonthDuration"

/** @brief afw_utf8_t for string date_add_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_add_yearMonthDuration;

/** @brief define for quoted string date_add_yearMonthDuration_1_0 */
#define AFW_Q_date_add_yearMonthDuration_1_0 "date_add_yearMonthDuration_1_0"

/** @brief afw_utf8_t for string date_add_yearMonthDuration_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_add_yearMonthDuration_1_0;

/** @brief define for quoted string date_at_least_one_member_of */
#define AFW_Q_date_at_least_one_member_of "date_at_least_one_member_of"

/** @brief afw_utf8_t for string date_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_at_least_one_member_of;

/** @brief define for quoted string date_bag */
#define AFW_Q_date_bag "date_bag"

/** @brief afw_utf8_t for string date_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_bag;

/** @brief define for quoted string date_bag_size */
#define AFW_Q_date_bag_size "date_bag_size"

/** @brief afw_utf8_t for string date_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_bag_size;

/** @brief define for quoted string date_eq */
#define AFW_Q_date_eq "date_eq"

/** @brief afw_utf8_t for string date_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_eq;

/** @brief define for quoted string date_ge */
#define AFW_Q_date_ge "date_ge"

/** @brief afw_utf8_t for string date_ge */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_ge;

/** @brief define for quoted string date_gt */
#define AFW_Q_date_gt "date_gt"

/** @brief afw_utf8_t for string date_gt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_gt;

/** @brief define for quoted string date_intersection */
#define AFW_Q_date_intersection "date_intersection"

/** @brief afw_utf8_t for string date_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_intersection;

/** @brief define for quoted string date_is_in */
#define AFW_Q_date_is_in "date_is_in"

/** @brief afw_utf8_t for string date_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_is_in;

/** @brief define for quoted string date_le */
#define AFW_Q_date_le "date_le"

/** @brief afw_utf8_t for string date_le */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_le;

/** @brief define for quoted string date_lt */
#define AFW_Q_date_lt "date_lt"

/** @brief afw_utf8_t for string date_lt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_lt;

/** @brief define for quoted string date_one_and_only */
#define AFW_Q_date_one_and_only "date_one_and_only"

/** @brief afw_utf8_t for string date_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_one_and_only;

/** @brief define for quoted string date_set_equals */
#define AFW_Q_date_set_equals "date_set_equals"

/** @brief afw_utf8_t for string date_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_set_equals;

/** @brief define for quoted string date_subset */
#define AFW_Q_date_subset "date_subset"

/** @brief afw_utf8_t for string date_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_subset;

/** @brief define for quoted string date_subtract_yearMonthDuration */
#define AFW_Q_date_subtract_yearMonthDuration "date_subtract_yearMonthDuration"

/** @brief afw_utf8_t for string date_subtract_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_subtract_yearMonthDuration;

/** @brief define for quoted string date_subtract_yearMonthDuration_1_0 */
#define AFW_Q_date_subtract_yearMonthDuration_1_0 "date_subtract_yearMonthDuration_1_0"

/** @brief afw_utf8_t for string date_subtract_yearMonthDuration_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_subtract_yearMonthDuration_1_0;

/** @brief define for quoted string date_to_string */
#define AFW_Q_date_to_string "date_to_string"

/** @brief afw_utf8_t for string date_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_to_string;

/** @brief define for quoted string date_union */
#define AFW_Q_date_union "date_union"

/** @brief afw_utf8_t for string date_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_date_union;

/** @brief define for quoted string dayTimeDuration */
#define AFW_Q_dayTimeDuration "dayTimeDuration"

/** @brief afw_utf8_t for string dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration;

/** @brief define for quoted string dayTimeDuration_1_0_at_least_one_member_of */
#define AFW_Q_dayTimeDuration_1_0_at_least_one_member_of "dayTimeDuration_1_0_at_least_one_member_of"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_at_least_one_member_of;

/** @brief define for quoted string dayTimeDuration_1_0_bag */
#define AFW_Q_dayTimeDuration_1_0_bag "dayTimeDuration_1_0_bag"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_bag;

/** @brief define for quoted string dayTimeDuration_1_0_bag_size */
#define AFW_Q_dayTimeDuration_1_0_bag_size "dayTimeDuration_1_0_bag_size"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_bag_size;

/** @brief define for quoted string dayTimeDuration_1_0_eq */
#define AFW_Q_dayTimeDuration_1_0_eq "dayTimeDuration_1_0_eq"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_eq;

/** @brief define for quoted string dayTimeDuration_1_0_intersection */
#define AFW_Q_dayTimeDuration_1_0_intersection "dayTimeDuration_1_0_intersection"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_intersection;

/** @brief define for quoted string dayTimeDuration_1_0_is_in */
#define AFW_Q_dayTimeDuration_1_0_is_in "dayTimeDuration_1_0_is_in"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_is_in;

/** @brief define for quoted string dayTimeDuration_1_0_one_and_only */
#define AFW_Q_dayTimeDuration_1_0_one_and_only "dayTimeDuration_1_0_one_and_only"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_one_and_only;

/** @brief define for quoted string dayTimeDuration_1_0_set_equals */
#define AFW_Q_dayTimeDuration_1_0_set_equals "dayTimeDuration_1_0_set_equals"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_set_equals;

/** @brief define for quoted string dayTimeDuration_1_0_subset */
#define AFW_Q_dayTimeDuration_1_0_subset "dayTimeDuration_1_0_subset"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_subset;

/** @brief define for quoted string dayTimeDuration_1_0_union */
#define AFW_Q_dayTimeDuration_1_0_union "dayTimeDuration_1_0_union"

/** @brief afw_utf8_t for string dayTimeDuration_1_0_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_1_0_union;

/** @brief define for quoted string dayTimeDuration_at_least_one_member_of */
#define AFW_Q_dayTimeDuration_at_least_one_member_of "dayTimeDuration_at_least_one_member_of"

/** @brief afw_utf8_t for string dayTimeDuration_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_at_least_one_member_of;

/** @brief define for quoted string dayTimeDuration_bag */
#define AFW_Q_dayTimeDuration_bag "dayTimeDuration_bag"

/** @brief afw_utf8_t for string dayTimeDuration_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_bag;

/** @brief define for quoted string dayTimeDuration_bag_size */
#define AFW_Q_dayTimeDuration_bag_size "dayTimeDuration_bag_size"

/** @brief afw_utf8_t for string dayTimeDuration_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_bag_size;

/** @brief define for quoted string dayTimeDuration_eq */
#define AFW_Q_dayTimeDuration_eq "dayTimeDuration_eq"

/** @brief afw_utf8_t for string dayTimeDuration_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_eq;

/** @brief define for quoted string dayTimeDuration_intersection */
#define AFW_Q_dayTimeDuration_intersection "dayTimeDuration_intersection"

/** @brief afw_utf8_t for string dayTimeDuration_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_intersection;

/** @brief define for quoted string dayTimeDuration_is_in */
#define AFW_Q_dayTimeDuration_is_in "dayTimeDuration_is_in"

/** @brief afw_utf8_t for string dayTimeDuration_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_is_in;

/** @brief define for quoted string dayTimeDuration_one_and_only */
#define AFW_Q_dayTimeDuration_one_and_only "dayTimeDuration_one_and_only"

/** @brief afw_utf8_t for string dayTimeDuration_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_one_and_only;

/** @brief define for quoted string dayTimeDuration_set_equals */
#define AFW_Q_dayTimeDuration_set_equals "dayTimeDuration_set_equals"

/** @brief afw_utf8_t for string dayTimeDuration_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_set_equals;

/** @brief define for quoted string dayTimeDuration_subset */
#define AFW_Q_dayTimeDuration_subset "dayTimeDuration_subset"

/** @brief afw_utf8_t for string dayTimeDuration_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_subset;

/** @brief define for quoted string dayTimeDuration_to_string */
#define AFW_Q_dayTimeDuration_to_string "dayTimeDuration_to_string"

/** @brief afw_utf8_t for string dayTimeDuration_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_to_string;

/** @brief define for quoted string dayTimeDuration_union */
#define AFW_Q_dayTimeDuration_union "dayTimeDuration_union"

/** @brief afw_utf8_t for string dayTimeDuration_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dayTimeDuration_union;

/** @brief define for quoted string debug */
#define AFW_Q_debug "debug"

/** @brief afw_utf8_t for string debug */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_debug;

/** @brief define for quoted string debugFlagId */
#define AFW_Q_debugFlagId "debugFlagId"

/** @brief afw_utf8_t for string debugFlagId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_debugFlagId;

/** @brief define for quoted string debugFlagIndex */
#define AFW_Q_debugFlagIndex "debugFlagIndex"

/** @brief afw_utf8_t for string debugFlagIndex */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_debugFlagIndex;

/** @brief define for quoted string decision */
#define AFW_Q_decision "decision"

/** @brief afw_utf8_t for string decision */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_decision;

/** @brief define for quoted string decisionId */
#define AFW_Q_decisionId "decisionId"

/** @brief afw_utf8_t for string decisionId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_decisionId;

/** @brief define for quoted string declare */
#define AFW_Q_declare "declare"

/** @brief afw_utf8_t for string declare */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_declare;

/** @brief define for quoted string decode_to_string */
#define AFW_Q_decode_to_string "decode_to_string"

/** @brief afw_utf8_t for string decode_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_decode_to_string;

/** @brief define for quoted string decode_to_string_base64Binary */
#define AFW_Q_decode_to_string_base64Binary "decode_to_string_base64Binary"

/** @brief afw_utf8_t for string decode_to_string_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_decode_to_string_base64Binary;

/** @brief define for quoted string decode_to_string_hexBinary */
#define AFW_Q_decode_to_string_hexBinary "decode_to_string_hexBinary"

/** @brief afw_utf8_t for string decode_to_string_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_decode_to_string_hexBinary;

/** @brief define for quoted string decompile */
#define AFW_Q_decompile "decompile"

/** @brief afw_utf8_t for string decompile */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_decompile;

/** @brief define for quoted string default */
#define AFW_Q_default "default"

/** @brief afw_utf8_t for string default */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_default;

/** @brief define for quoted string defaultAdaptorId */
#define AFW_Q_defaultAdaptorId "defaultAdaptorId"

/** @brief afw_utf8_t for string defaultAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_defaultAdaptorId;

/** @brief define for quoted string defaultFlags */
#define AFW_Q_defaultFlags "defaultFlags"

/** @brief afw_utf8_t for string defaultFlags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_defaultFlags;

/** @brief define for quoted string defaultModelAdaptorId */
#define AFW_Q_defaultModelAdaptorId "defaultModelAdaptorId"

/** @brief afw_utf8_t for string defaultModelAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_defaultModelAdaptorId;

/** @brief define for quoted string defaultOptions */
#define AFW_Q_defaultOptions "defaultOptions"

/** @brief afw_utf8_t for string defaultOptions */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_defaultOptions;

/** @brief define for quoted string defaultValue */
#define AFW_Q_defaultValue "defaultValue"

/** @brief afw_utf8_t for string defaultValue */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_defaultValue;

/** @brief define for quoted string define */
#define AFW_Q_define "define"

/** @brief afw_utf8_t for string define */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_define;

/** @brief define for quoted string delete */
#define AFW_Q_delete "delete"

/** @brief afw_utf8_t for string delete */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_delete;

/** @brief define for quoted string deleteObjectCount */
#define AFW_Q_deleteObjectCount "deleteObjectCount"

/** @brief afw_utf8_t for string deleteObjectCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_deleteObjectCount;

/** @brief define for quoted string delete_object */
#define AFW_Q_delete_object "delete_object"

/** @brief afw_utf8_t for string delete_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_delete_object;

/** @brief define for quoted string delete_object_with_uri */
#define AFW_Q_delete_object_with_uri "delete_object_with_uri"

/** @brief afw_utf8_t for string delete_object_with_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_delete_object_with_uri;

/** @brief define for quoted string deny */
#define AFW_Q_deny "deny"

/** @brief afw_utf8_t for string deny */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_deny;

/** @brief define for quoted string denyIfNotApplicable */
#define AFW_Q_denyIfNotApplicable "denyIfNotApplicable"

/** @brief afw_utf8_t for string denyIfNotApplicable */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_denyIfNotApplicable;

/** @brief define for quoted string deprecated */
#define AFW_Q_deprecated "deprecated"

/** @brief afw_utf8_t for string deprecated */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_deprecated;

/** @brief define for quoted string description */
#define AFW_Q_description "description"

/** @brief afw_utf8_t for string description */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_description;

/** @brief define for quoted string descriptionPropertyName */
#define AFW_Q_descriptionPropertyName "descriptionPropertyName"

/** @brief afw_utf8_t for string descriptionPropertyName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_descriptionPropertyName;

/** @brief define for quoted string details */
#define AFW_Q_details "details"

/** @brief afw_utf8_t for string details */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_details;

/** @brief define for quoted string differ */
#define AFW_Q_differ "differ"

/** @brief afw_utf8_t for string differ */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_differ;

/** @brief define for quoted string directReturn */
#define AFW_Q_directReturn "directReturn"

/** @brief afw_utf8_t for string directReturn */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_directReturn;

/** @brief define for quoted string disabled */
#define AFW_Q_disabled "disabled"

/** @brief afw_utf8_t for string disabled */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_disabled;

/** @brief define for quoted string divide */
#define AFW_Q_divide "divide"

/** @brief afw_utf8_t for string divide */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_divide;

/** @brief define for quoted string divide_double */
#define AFW_Q_divide_double "divide_double"

/** @brief afw_utf8_t for string divide_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_divide_double;

/** @brief define for quoted string divide_integer */
#define AFW_Q_divide_integer "divide_integer"

/** @brief afw_utf8_t for string divide_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_divide_integer;

/** @brief define for quoted string dnsName */
#define AFW_Q_dnsName "dnsName"

/** @brief afw_utf8_t for string dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dnsName;

/** @brief define for quoted string dnsName_bag */
#define AFW_Q_dnsName_bag "dnsName_bag"

/** @brief afw_utf8_t for string dnsName_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dnsName_bag;

/** @brief define for quoted string dnsName_bag_size */
#define AFW_Q_dnsName_bag_size "dnsName_bag_size"

/** @brief afw_utf8_t for string dnsName_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dnsName_bag_size;

/** @brief define for quoted string dnsName_is_in */
#define AFW_Q_dnsName_is_in "dnsName_is_in"

/** @brief afw_utf8_t for string dnsName_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dnsName_is_in;

/** @brief define for quoted string dnsName_one_and_only */
#define AFW_Q_dnsName_one_and_only "dnsName_one_and_only"

/** @brief afw_utf8_t for string dnsName_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dnsName_one_and_only;

/** @brief define for quoted string dnsName_regexp_match */
#define AFW_Q_dnsName_regexp_match "dnsName_regexp_match"

/** @brief afw_utf8_t for string dnsName_regexp_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dnsName_regexp_match;

/** @brief define for quoted string dnsName_to_string */
#define AFW_Q_dnsName_to_string "dnsName_to_string"

/** @brief afw_utf8_t for string dnsName_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_dnsName_to_string;

/** @brief define for quoted string do */
#define AFW_Q_do "do"

/** @brief afw_utf8_t for string do */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_do;

/** @brief define for quoted string do_while */
#define AFW_Q_do_while "do_while"

/** @brief afw_utf8_t for string do_while */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_do_while;

/** @brief define for quoted string double */
#define AFW_Q_double "double"

/** @brief afw_utf8_t for string double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double;

/** @brief define for quoted string double_abs */
#define AFW_Q_double_abs "double_abs"

/** @brief afw_utf8_t for string double_abs */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_abs;

/** @brief define for quoted string double_add */
#define AFW_Q_double_add "double_add"

/** @brief afw_utf8_t for string double_add */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_add;

/** @brief define for quoted string double_at_least_one_member_of */
#define AFW_Q_double_at_least_one_member_of "double_at_least_one_member_of"

/** @brief afw_utf8_t for string double_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_at_least_one_member_of;

/** @brief define for quoted string double_bag */
#define AFW_Q_double_bag "double_bag"

/** @brief afw_utf8_t for string double_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_bag;

/** @brief define for quoted string double_bag_size */
#define AFW_Q_double_bag_size "double_bag_size"

/** @brief afw_utf8_t for string double_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_bag_size;

/** @brief define for quoted string double_ceil */
#define AFW_Q_double_ceil "double_ceil"

/** @brief afw_utf8_t for string double_ceil */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_ceil;

/** @brief define for quoted string double_divide */
#define AFW_Q_double_divide "double_divide"

/** @brief afw_utf8_t for string double_divide */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_divide;

/** @brief define for quoted string double_eq */
#define AFW_Q_double_eq "double_eq"

/** @brief afw_utf8_t for string double_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_eq;

/** @brief define for quoted string double_floor */
#define AFW_Q_double_floor "double_floor"

/** @brief afw_utf8_t for string double_floor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_floor;

/** @brief define for quoted string double_ge */
#define AFW_Q_double_ge "double_ge"

/** @brief afw_utf8_t for string double_ge */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_ge;

/** @brief define for quoted string double_gt */
#define AFW_Q_double_gt "double_gt"

/** @brief afw_utf8_t for string double_gt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_gt;

/** @brief define for quoted string double_intersection */
#define AFW_Q_double_intersection "double_intersection"

/** @brief afw_utf8_t for string double_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_intersection;

/** @brief define for quoted string double_is_NaN */
#define AFW_Q_double_is_NaN "double_is_NaN"

/** @brief afw_utf8_t for string double_is_NaN */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_is_NaN;

/** @brief define for quoted string double_is_finite */
#define AFW_Q_double_is_finite "double_is_finite"

/** @brief afw_utf8_t for string double_is_finite */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_is_finite;

/** @brief define for quoted string double_is_in */
#define AFW_Q_double_is_in "double_is_in"

/** @brief afw_utf8_t for string double_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_is_in;

/** @brief define for quoted string double_le */
#define AFW_Q_double_le "double_le"

/** @brief afw_utf8_t for string double_le */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_le;

/** @brief define for quoted string double_lt */
#define AFW_Q_double_lt "double_lt"

/** @brief afw_utf8_t for string double_lt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_lt;

/** @brief define for quoted string double_multiply */
#define AFW_Q_double_multiply "double_multiply"

/** @brief afw_utf8_t for string double_multiply */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_multiply;

/** @brief define for quoted string double_one_and_only */
#define AFW_Q_double_one_and_only "double_one_and_only"

/** @brief afw_utf8_t for string double_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_one_and_only;

/** @brief define for quoted string double_pow */
#define AFW_Q_double_pow "double_pow"

/** @brief afw_utf8_t for string double_pow */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_pow;

/** @brief define for quoted string double_round */
#define AFW_Q_double_round "double_round"

/** @brief afw_utf8_t for string double_round */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_round;

/** @brief define for quoted string double_set_equals */
#define AFW_Q_double_set_equals "double_set_equals"

/** @brief afw_utf8_t for string double_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_set_equals;

/** @brief define for quoted string double_subset */
#define AFW_Q_double_subset "double_subset"

/** @brief afw_utf8_t for string double_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_subset;

/** @brief define for quoted string double_subtract */
#define AFW_Q_double_subtract "double_subtract"

/** @brief afw_utf8_t for string double_subtract */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_subtract;

/** @brief define for quoted string double_to_integer */
#define AFW_Q_double_to_integer "double_to_integer"

/** @brief afw_utf8_t for string double_to_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_to_integer;

/** @brief define for quoted string double_to_string */
#define AFW_Q_double_to_string "double_to_string"

/** @brief afw_utf8_t for string double_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_to_string;

/** @brief define for quoted string double_union */
#define AFW_Q_double_union "double_union"

/** @brief afw_utf8_t for string double_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_double_union;

/** @brief define for quoted string else */
#define AFW_Q_else "else"

/** @brief afw_utf8_t for string else */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_else;

/** @brief define for quoted string emerg */
#define AFW_Q_emerg "emerg"

/** @brief afw_utf8_t for string emerg */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_emerg;

/** @brief define for quoted string encode_as_base64Binary */
#define AFW_Q_encode_as_base64Binary "encode_as_base64Binary"

/** @brief afw_utf8_t for string encode_as_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_encode_as_base64Binary;

/** @brief define for quoted string encode_as_base64Binary_string */
#define AFW_Q_encode_as_base64Binary_string "encode_as_base64Binary_string"

/** @brief afw_utf8_t for string encode_as_base64Binary_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_encode_as_base64Binary_string;

/** @brief define for quoted string encode_as_hexBinary */
#define AFW_Q_encode_as_hexBinary "encode_as_hexBinary"

/** @brief afw_utf8_t for string encode_as_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_encode_as_hexBinary;

/** @brief define for quoted string encode_as_hexBinary_string */
#define AFW_Q_encode_as_hexBinary_string "encode_as_hexBinary_string"

/** @brief afw_utf8_t for string encode_as_hexBinary_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_encode_as_hexBinary_string;

/** @brief define for quoted string endTime */
#define AFW_Q_endTime "endTime"

/** @brief afw_utf8_t for string endTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_endTime;

/** @brief define for quoted string ends_with */
#define AFW_Q_ends_with "ends_with"

/** @brief afw_utf8_t for string ends_with */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ends_with;

/** @brief define for quoted string ends_with_anyURI */
#define AFW_Q_ends_with_anyURI "ends_with_anyURI"

/** @brief afw_utf8_t for string ends_with_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ends_with_anyURI;

/** @brief define for quoted string ends_with_string */
#define AFW_Q_ends_with_string "ends_with_string"

/** @brief afw_utf8_t for string ends_with_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ends_with_string;

/** @brief define for quoted string ensure_afw_components_extension_loaded */
#define AFW_Q_ensure_afw_components_extension_loaded "ensure_afw_components_extension_loaded"

/** @brief afw_utf8_t for string ensure_afw_components_extension_loaded */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ensure_afw_components_extension_loaded;

/** @brief define for quoted string entityObjectId */
#define AFW_Q_entityObjectId "entityObjectId"

/** @brief afw_utf8_t for string entityObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_entityObjectId;

/** @brief define for quoted string entityPath */
#define AFW_Q_entityPath "entityPath"

/** @brief afw_utf8_t for string entityPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_entityPath;

/** @brief define for quoted string entries */
#define AFW_Q_entries "entries"

/** @brief afw_utf8_t for string entries */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_entries;

/** @brief define for quoted string entry */
#define AFW_Q_entry "entry"

/** @brief afw_utf8_t for string entry */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_entry;

/** @brief define for quoted string entryCursor */
#define AFW_Q_entryCursor "entryCursor"

/** @brief afw_utf8_t for string entryCursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_entryCursor;

/** @brief define for quoted string environment */
#define AFW_Q_environment "environment"

/** @brief afw_utf8_t for string environment */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_environment;

/** @brief define for quoted string eq */
#define AFW_Q_eq "eq"

/** @brief afw_utf8_t for string eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq;

/** @brief define for quoted string eq_anyURI */
#define AFW_Q_eq_anyURI "eq_anyURI"

/** @brief afw_utf8_t for string eq_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_anyURI;

/** @brief define for quoted string eq_array */
#define AFW_Q_eq_array "eq_array"

/** @brief afw_utf8_t for string eq_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_array;

/** @brief define for quoted string eq_base64Binary */
#define AFW_Q_eq_base64Binary "eq_base64Binary"

/** @brief afw_utf8_t for string eq_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_base64Binary;

/** @brief define for quoted string eq_boolean */
#define AFW_Q_eq_boolean "eq_boolean"

/** @brief afw_utf8_t for string eq_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_boolean;

/** @brief define for quoted string eq_date */
#define AFW_Q_eq_date "eq_date"

/** @brief afw_utf8_t for string eq_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_date;

/** @brief define for quoted string eq_dateTime */
#define AFW_Q_eq_dateTime "eq_dateTime"

/** @brief afw_utf8_t for string eq_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_dateTime;

/** @brief define for quoted string eq_dayTimeDuration */
#define AFW_Q_eq_dayTimeDuration "eq_dayTimeDuration"

/** @brief afw_utf8_t for string eq_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_dayTimeDuration;

/** @brief define for quoted string eq_dnsName */
#define AFW_Q_eq_dnsName "eq_dnsName"

/** @brief afw_utf8_t for string eq_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_dnsName;

/** @brief define for quoted string eq_double */
#define AFW_Q_eq_double "eq_double"

/** @brief afw_utf8_t for string eq_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_double;

/** @brief define for quoted string eq_expression */
#define AFW_Q_eq_expression "eq_expression"

/** @brief afw_utf8_t for string eq_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_expression;

/** @brief define for quoted string eq_function */
#define AFW_Q_eq_function "eq_function"

/** @brief afw_utf8_t for string eq_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_function;

/** @brief define for quoted string eq_hexBinary */
#define AFW_Q_eq_hexBinary "eq_hexBinary"

/** @brief afw_utf8_t for string eq_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_hexBinary;

/** @brief define for quoted string eq_hybrid */
#define AFW_Q_eq_hybrid "eq_hybrid"

/** @brief afw_utf8_t for string eq_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_hybrid;

/** @brief define for quoted string eq_ia5String */
#define AFW_Q_eq_ia5String "eq_ia5String"

/** @brief afw_utf8_t for string eq_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_ia5String;

/** @brief define for quoted string eq_ignore_case */
#define AFW_Q_eq_ignore_case "eq_ignore_case"

/** @brief afw_utf8_t for string eq_ignore_case */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_ignore_case;

/** @brief define for quoted string eq_ignore_case_string */
#define AFW_Q_eq_ignore_case_string "eq_ignore_case_string"

/** @brief afw_utf8_t for string eq_ignore_case_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_ignore_case_string;

/** @brief define for quoted string eq_integer */
#define AFW_Q_eq_integer "eq_integer"

/** @brief afw_utf8_t for string eq_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_integer;

/** @brief define for quoted string eq_ipAddress */
#define AFW_Q_eq_ipAddress "eq_ipAddress"

/** @brief afw_utf8_t for string eq_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_ipAddress;

/** @brief define for quoted string eq_object */
#define AFW_Q_eq_object "eq_object"

/** @brief afw_utf8_t for string eq_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_object;

/** @brief define for quoted string eq_objectId */
#define AFW_Q_eq_objectId "eq_objectId"

/** @brief afw_utf8_t for string eq_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_objectId;

/** @brief define for quoted string eq_objectPath */
#define AFW_Q_eq_objectPath "eq_objectPath"

/** @brief afw_utf8_t for string eq_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_objectPath;

/** @brief define for quoted string eq_password */
#define AFW_Q_eq_password "eq_password"

/** @brief afw_utf8_t for string eq_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_password;

/** @brief define for quoted string eq_regexp */
#define AFW_Q_eq_regexp "eq_regexp"

/** @brief afw_utf8_t for string eq_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_regexp;

/** @brief define for quoted string eq_rfc822Name */
#define AFW_Q_eq_rfc822Name "eq_rfc822Name"

/** @brief afw_utf8_t for string eq_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_rfc822Name;

/** @brief define for quoted string eq_script */
#define AFW_Q_eq_script "eq_script"

/** @brief afw_utf8_t for string eq_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_script;

/** @brief define for quoted string eq_string */
#define AFW_Q_eq_string "eq_string"

/** @brief afw_utf8_t for string eq_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_string;

/** @brief define for quoted string eq_template */
#define AFW_Q_eq_template "eq_template"

/** @brief afw_utf8_t for string eq_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_template;

/** @brief define for quoted string eq_time */
#define AFW_Q_eq_time "eq_time"

/** @brief afw_utf8_t for string eq_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_time;

/** @brief define for quoted string eq_x500Name */
#define AFW_Q_eq_x500Name "eq_x500Name"

/** @brief afw_utf8_t for string eq_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_x500Name;

/** @brief define for quoted string eq_xpathExpression */
#define AFW_Q_eq_xpathExpression "eq_xpathExpression"

/** @brief afw_utf8_t for string eq_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_xpathExpression;

/** @brief define for quoted string eq_yearMonthDuration */
#define AFW_Q_eq_yearMonthDuration "eq_yearMonthDuration"

/** @brief afw_utf8_t for string eq_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eq_yearMonthDuration;

/** @brief define for quoted string eqx */
#define AFW_Q_eqx "eqx"

/** @brief afw_utf8_t for string eqx */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx;

/** @brief define for quoted string eqx_anyURI */
#define AFW_Q_eqx_anyURI "eqx_anyURI"

/** @brief afw_utf8_t for string eqx_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_anyURI;

/** @brief define for quoted string eqx_array */
#define AFW_Q_eqx_array "eqx_array"

/** @brief afw_utf8_t for string eqx_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_array;

/** @brief define for quoted string eqx_base64Binary */
#define AFW_Q_eqx_base64Binary "eqx_base64Binary"

/** @brief afw_utf8_t for string eqx_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_base64Binary;

/** @brief define for quoted string eqx_boolean */
#define AFW_Q_eqx_boolean "eqx_boolean"

/** @brief afw_utf8_t for string eqx_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_boolean;

/** @brief define for quoted string eqx_date */
#define AFW_Q_eqx_date "eqx_date"

/** @brief afw_utf8_t for string eqx_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_date;

/** @brief define for quoted string eqx_dateTime */
#define AFW_Q_eqx_dateTime "eqx_dateTime"

/** @brief afw_utf8_t for string eqx_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_dateTime;

/** @brief define for quoted string eqx_dayTimeDuration */
#define AFW_Q_eqx_dayTimeDuration "eqx_dayTimeDuration"

/** @brief afw_utf8_t for string eqx_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_dayTimeDuration;

/** @brief define for quoted string eqx_dnsName */
#define AFW_Q_eqx_dnsName "eqx_dnsName"

/** @brief afw_utf8_t for string eqx_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_dnsName;

/** @brief define for quoted string eqx_double */
#define AFW_Q_eqx_double "eqx_double"

/** @brief afw_utf8_t for string eqx_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_double;

/** @brief define for quoted string eqx_expression */
#define AFW_Q_eqx_expression "eqx_expression"

/** @brief afw_utf8_t for string eqx_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_expression;

/** @brief define for quoted string eqx_function */
#define AFW_Q_eqx_function "eqx_function"

/** @brief afw_utf8_t for string eqx_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_function;

/** @brief define for quoted string eqx_hexBinary */
#define AFW_Q_eqx_hexBinary "eqx_hexBinary"

/** @brief afw_utf8_t for string eqx_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_hexBinary;

/** @brief define for quoted string eqx_hybrid */
#define AFW_Q_eqx_hybrid "eqx_hybrid"

/** @brief afw_utf8_t for string eqx_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_hybrid;

/** @brief define for quoted string eqx_ia5String */
#define AFW_Q_eqx_ia5String "eqx_ia5String"

/** @brief afw_utf8_t for string eqx_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_ia5String;

/** @brief define for quoted string eqx_integer */
#define AFW_Q_eqx_integer "eqx_integer"

/** @brief afw_utf8_t for string eqx_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_integer;

/** @brief define for quoted string eqx_ipAddress */
#define AFW_Q_eqx_ipAddress "eqx_ipAddress"

/** @brief afw_utf8_t for string eqx_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_ipAddress;

/** @brief define for quoted string eqx_object */
#define AFW_Q_eqx_object "eqx_object"

/** @brief afw_utf8_t for string eqx_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_object;

/** @brief define for quoted string eqx_objectId */
#define AFW_Q_eqx_objectId "eqx_objectId"

/** @brief afw_utf8_t for string eqx_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_objectId;

/** @brief define for quoted string eqx_objectPath */
#define AFW_Q_eqx_objectPath "eqx_objectPath"

/** @brief afw_utf8_t for string eqx_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_objectPath;

/** @brief define for quoted string eqx_password */
#define AFW_Q_eqx_password "eqx_password"

/** @brief afw_utf8_t for string eqx_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_password;

/** @brief define for quoted string eqx_regexp */
#define AFW_Q_eqx_regexp "eqx_regexp"

/** @brief afw_utf8_t for string eqx_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_regexp;

/** @brief define for quoted string eqx_rfc822Name */
#define AFW_Q_eqx_rfc822Name "eqx_rfc822Name"

/** @brief afw_utf8_t for string eqx_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_rfc822Name;

/** @brief define for quoted string eqx_script */
#define AFW_Q_eqx_script "eqx_script"

/** @brief afw_utf8_t for string eqx_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_script;

/** @brief define for quoted string eqx_string */
#define AFW_Q_eqx_string "eqx_string"

/** @brief afw_utf8_t for string eqx_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_string;

/** @brief define for quoted string eqx_template */
#define AFW_Q_eqx_template "eqx_template"

/** @brief afw_utf8_t for string eqx_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_template;

/** @brief define for quoted string eqx_time */
#define AFW_Q_eqx_time "eqx_time"

/** @brief afw_utf8_t for string eqx_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_time;

/** @brief define for quoted string eqx_x500Name */
#define AFW_Q_eqx_x500Name "eqx_x500Name"

/** @brief afw_utf8_t for string eqx_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_x500Name;

/** @brief define for quoted string eqx_xpathExpression */
#define AFW_Q_eqx_xpathExpression "eqx_xpathExpression"

/** @brief afw_utf8_t for string eqx_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_xpathExpression;

/** @brief define for quoted string eqx_yearMonthDuration */
#define AFW_Q_eqx_yearMonthDuration "eqx_yearMonthDuration"

/** @brief afw_utf8_t for string eqx_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_eqx_yearMonthDuration;

/** @brief define for quoted string err */
#define AFW_Q_err "err"

/** @brief afw_utf8_t for string err */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_err;

/** @brief define for quoted string error */
#define AFW_Q_error "error"

/** @brief afw_utf8_t for string error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_error;

/** @brief define for quoted string errorCode */
#define AFW_Q_errorCode "errorCode"

/** @brief afw_utf8_t for string errorCode */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_errorCode;

/** @brief define for quoted string errorReason */
#define AFW_Q_errorReason "errorReason"

/** @brief afw_utf8_t for string errorReason */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_errorReason;

/** @brief define for quoted string errorSource */
#define AFW_Q_errorSource "errorSource"

/** @brief afw_utf8_t for string errorSource */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_errorSource;

/** @brief define for quoted string error_rv_decoder */
#define AFW_Q_error_rv_decoder "error_rv_decoder"

/** @brief afw_utf8_t for string error_rv_decoder */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_error_rv_decoder;

/** @brief define for quoted string errors */
#define AFW_Q_errors "errors"

/** @brief afw_utf8_t for string errors */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_errors;

/** @brief define for quoted string errorsThrown */
#define AFW_Q_errorsThrown "errorsThrown"

/** @brief afw_utf8_t for string errorsThrown */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_errorsThrown;

/** @brief define for quoted string evaluate */
#define AFW_Q_evaluate "evaluate"

/** @brief afw_utf8_t for string evaluate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate;

/** @brief define for quoted string evaluate_expression */
#define AFW_Q_evaluate_expression "evaluate_expression"

/** @brief afw_utf8_t for string evaluate_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_expression;

/** @brief define for quoted string evaluate_expression_tuple */
#define AFW_Q_evaluate_expression_tuple "evaluate_expression_tuple"

/** @brief afw_utf8_t for string evaluate_expression_tuple */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_expression_tuple;

/** @brief define for quoted string evaluate_hybrid */
#define AFW_Q_evaluate_hybrid "evaluate_hybrid"

/** @brief afw_utf8_t for string evaluate_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_hybrid;

/** @brief define for quoted string evaluate_script */
#define AFW_Q_evaluate_script "evaluate_script"

/** @brief afw_utf8_t for string evaluate_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_script;

/** @brief define for quoted string evaluate_template */
#define AFW_Q_evaluate_template "evaluate_template"

/** @brief afw_utf8_t for string evaluate_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_template;

/** @brief define for quoted string evaluate_value */
#define AFW_Q_evaluate_value "evaluate_value"

/** @brief afw_utf8_t for string evaluate_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_value;

/** @brief define for quoted string evaluate_with_retry */
#define AFW_Q_evaluate_with_retry "evaluate_with_retry"

/** @brief afw_utf8_t for string evaluate_with_retry */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_with_retry;

/** @brief define for quoted string evaluate_xpathExpression */
#define AFW_Q_evaluate_xpathExpression "evaluate_xpathExpression"

/** @brief afw_utf8_t for string evaluate_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluate_xpathExpression;

/** @brief define for quoted string evaluated */
#define AFW_Q_evaluated "evaluated"

/** @brief afw_utf8_t for string evaluated */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluated;

/** @brief define for quoted string evaluation */
#define AFW_Q_evaluation "evaluation"

/** @brief afw_utf8_t for string evaluation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_evaluation;

/** @brief define for quoted string excludes */
#define AFW_Q_excludes "excludes"

/** @brief afw_utf8_t for string excludes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_excludes;

/** @brief define for quoted string execution_start_time_local */
#define AFW_Q_execution_start_time_local "execution_start_time_local"

/** @brief afw_utf8_t for string execution_start_time_local */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_execution_start_time_local;

/** @brief define for quoted string execution_start_time_utc */
#define AFW_Q_execution_start_time_utc "execution_start_time_utc"

/** @brief afw_utf8_t for string execution_start_time_utc */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_execution_start_time_utc;

/** @brief define for quoted string expect */
#define AFW_Q_expect "expect"

/** @brief afw_utf8_t for string expect */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expect;

/** @brief define for quoted string expectCodepointLengthInTestScript */
#define AFW_Q_expectCodepointLengthInTestScript "expectCodepointLengthInTestScript"

/** @brief afw_utf8_t for string expectCodepointLengthInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectCodepointLengthInTestScript;

/** @brief define for quoted string expectCodepointOffsetInTestScript */
#define AFW_Q_expectCodepointOffsetInTestScript "expectCodepointOffsetInTestScript"

/** @brief afw_utf8_t for string expectCodepointOffsetInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectCodepointOffsetInTestScript;

/** @brief define for quoted string expectColumnNumberInTestScript */
#define AFW_Q_expectColumnNumberInTestScript "expectColumnNumberInTestScript"

/** @brief afw_utf8_t for string expectColumnNumberInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectColumnNumberInTestScript;

/** @brief define for quoted string expectLineNumberInTestScript */
#define AFW_Q_expectLineNumberInTestScript "expectLineNumberInTestScript"

/** @brief afw_utf8_t for string expectLineNumberInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectLineNumberInTestScript;

/** @brief define for quoted string expectLocation */
#define AFW_Q_expectLocation "expectLocation"

/** @brief afw_utf8_t for string expectLocation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectLocation;

/** @brief define for quoted string expectUTF8OctetLengthInTestScript */
#define AFW_Q_expectUTF8OctetLengthInTestScript "expectUTF8OctetLengthInTestScript"

/** @brief afw_utf8_t for string expectUTF8OctetLengthInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectUTF8OctetLengthInTestScript;

/** @brief define for quoted string expectUTF8OctetOffsetInTestScript */
#define AFW_Q_expectUTF8OctetOffsetInTestScript "expectUTF8OctetOffsetInTestScript"

/** @brief afw_utf8_t for string expectUTF8OctetOffsetInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectUTF8OctetOffsetInTestScript;

/** @brief define for quoted string expected */
#define AFW_Q_expected "expected"

/** @brief afw_utf8_t for string expected */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expected;

/** @brief define for quoted string expectedError */
#define AFW_Q_expectedError "expectedError"

/** @brief afw_utf8_t for string expectedError */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expectedError;

/** @brief define for quoted string export */
#define AFW_Q_export "export"

/** @brief afw_utf8_t for string export */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_export;

/** @brief define for quoted string expression */
#define AFW_Q_expression "expression"

/** @brief afw_utf8_t for string expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expression;

/** @brief define for quoted string expression_tuple */
#define AFW_Q_expression_tuple "expression_tuple"

/** @brief afw_utf8_t for string expression_tuple */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expression_tuple;

/** @brief define for quoted string expressions */
#define AFW_Q_expressions "expressions"

/** @brief afw_utf8_t for string expressions */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_expressions;

/** @brief define for quoted string extends */
#define AFW_Q_extends "extends"

/** @brief afw_utf8_t for string extends */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extends;

/** @brief define for quoted string extension */
#define AFW_Q_extension "extension"

/** @brief afw_utf8_t for string extension */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extension;

/** @brief define for quoted string extensionId */
#define AFW_Q_extensionId "extensionId"

/** @brief afw_utf8_t for string extensionId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extensionId;

/** @brief define for quoted string extensionModulePaths */
#define AFW_Q_extensionModulePaths "extensionModulePaths"

/** @brief afw_utf8_t for string extensionModulePaths */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extensionModulePaths;

/** @brief define for quoted string extensionVersion */
#define AFW_Q_extensionVersion "extensionVersion"

/** @brief afw_utf8_t for string extensionVersion */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extensionVersion;

/** @brief define for quoted string extension_load */
#define AFW_Q_extension_load "extension_load"

/** @brief afw_utf8_t for string extension_load */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extension_load;

/** @brief define for quoted string extension_load_by_module_path */
#define AFW_Q_extension_load_by_module_path "extension_load_by_module_path"

/** @brief afw_utf8_t for string extension_load_by_module_path */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extension_load_by_module_path;

/** @brief define for quoted string extensions */
#define AFW_Q_extensions "extensions"

/** @brief afw_utf8_t for string extensions */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_extensions;

/** @brief define for quoted string facility */
#define AFW_Q_facility "facility"

/** @brief afw_utf8_t for string facility */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_facility;

/** @brief define for quoted string failure */
#define AFW_Q_failure "failure"

/** @brief afw_utf8_t for string failure */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_failure;

/** @brief define for quoted string false */
#define AFW_Q_false "false"

/** @brief afw_utf8_t for string false */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_false;

/** @brief define for quoted string fatal */
#define AFW_Q_fatal "fatal"

/** @brief afw_utf8_t for string fatal */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_fatal;

/** @brief define for quoted string filenameSuffix */
#define AFW_Q_filenameSuffix "filenameSuffix"

/** @brief afw_utf8_t for string filenameSuffix */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_filenameSuffix;

/** @brief define for quoted string filter */
#define AFW_Q_filter "filter"

/** @brief afw_utf8_t for string filter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_filter;

/** @brief define for quoted string filters */
#define AFW_Q_filters "filters"

/** @brief afw_utf8_t for string filters */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_filters;

/** @brief define for quoted string finally */
#define AFW_Q_finally "finally"

/** @brief afw_utf8_t for string finally */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_finally;

/** @brief define for quoted string find */
#define AFW_Q_find "find"

/** @brief afw_utf8_t for string find */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_find;

/** @brief define for quoted string flagId */
#define AFW_Q_flagId "flagId"

/** @brief afw_utf8_t for string flagId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flagId;

/** @brief define for quoted string flagIndex */
#define AFW_Q_flagIndex "flagIndex"

/** @brief afw_utf8_t for string flagIndex */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flagIndex;

/** @brief define for quoted string flag_get_active */
#define AFW_Q_flag_get_active "flag_get_active"

/** @brief afw_utf8_t for string flag_get_active */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flag_get_active;

/** @brief define for quoted string flag_get_active_defaults */
#define AFW_Q_flag_get_active_defaults "flag_get_active_defaults"

/** @brief afw_utf8_t for string flag_get_active_defaults */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flag_get_active_defaults;

/** @brief define for quoted string flag_get_defaults */
#define AFW_Q_flag_get_defaults "flag_get_defaults"

/** @brief afw_utf8_t for string flag_get_defaults */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flag_get_defaults;

/** @brief define for quoted string flag_modify_defaults */
#define AFW_Q_flag_modify_defaults "flag_modify_defaults"

/** @brief afw_utf8_t for string flag_modify_defaults */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flag_modify_defaults;

/** @brief define for quoted string flag_replace_defaults */
#define AFW_Q_flag_replace_defaults "flag_replace_defaults"

/** @brief afw_utf8_t for string flag_replace_defaults */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flag_replace_defaults;

/** @brief define for quoted string flag_set */
#define AFW_Q_flag_set "flag_set"

/** @brief afw_utf8_t for string flag_set */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flag_set;

/** @brief define for quoted string flags */
#define AFW_Q_flags "flags"

/** @brief afw_utf8_t for string flags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flags;

/** @brief define for quoted string floor */
#define AFW_Q_floor "floor"

/** @brief afw_utf8_t for string floor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_floor;

/** @brief define for quoted string floor_double */
#define AFW_Q_floor_double "floor_double"

/** @brief afw_utf8_t for string floor_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_floor_double;

/** @brief define for quoted string flush */
#define AFW_Q_flush "flush"

/** @brief afw_utf8_t for string flush */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_flush;

/** @brief define for quoted string fn */
#define AFW_Q_fn "fn"

/** @brief afw_utf8_t for string fn */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_fn;

/** @brief define for quoted string for */
#define AFW_Q_for "for"

/** @brief afw_utf8_t for string for */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_for;

/** @brief define for quoted string for_of */
#define AFW_Q_for_of "for_of"

/** @brief afw_utf8_t for string for_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_for_of;

/** @brief define for quoted string format */
#define AFW_Q_format "format"

/** @brief afw_utf8_t for string format */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_format;

/** @brief define for quoted string fragment */
#define AFW_Q_fragment "fragment"

/** @brief afw_utf8_t for string fragment */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_fragment;

/** @brief define for quoted string fragmentTokens */
#define AFW_Q_fragmentTokens "fragmentTokens"

/** @brief afw_utf8_t for string fragmentTokens */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_fragmentTokens;

/** @brief define for quoted string from */
#define AFW_Q_from "from"

/** @brief afw_utf8_t for string from */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_from;

/** @brief define for quoted string function */
#define AFW_Q_function "function"

/** @brief afw_utf8_t for string function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_function;

/** @brief define for quoted string functionDeclaration */
#define AFW_Q_functionDeclaration "functionDeclaration"

/** @brief afw_utf8_t for string functionDeclaration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_functionDeclaration;

/** @brief define for quoted string functionDeclarationId */
#define AFW_Q_functionDeclarationId "functionDeclarationId"

/** @brief afw_utf8_t for string functionDeclarationId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_functionDeclarationId;

/** @brief define for quoted string functionId */
#define AFW_Q_functionId "functionId"

/** @brief afw_utf8_t for string functionId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_functionId;

/** @brief define for quoted string functionLabel */
#define AFW_Q_functionLabel "functionLabel"

/** @brief afw_utf8_t for string functionLabel */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_functionLabel;

/** @brief define for quoted string functionSignature */
#define AFW_Q_functionSignature "functionSignature"

/** @brief afw_utf8_t for string functionSignature */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_functionSignature;

/** @brief define for quoted string ge */
#define AFW_Q_ge "ge"

/** @brief afw_utf8_t for string ge */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge;

/** @brief define for quoted string ge_anyURI */
#define AFW_Q_ge_anyURI "ge_anyURI"

/** @brief afw_utf8_t for string ge_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_anyURI;

/** @brief define for quoted string ge_array */
#define AFW_Q_ge_array "ge_array"

/** @brief afw_utf8_t for string ge_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_array;

/** @brief define for quoted string ge_base64Binary */
#define AFW_Q_ge_base64Binary "ge_base64Binary"

/** @brief afw_utf8_t for string ge_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_base64Binary;

/** @brief define for quoted string ge_boolean */
#define AFW_Q_ge_boolean "ge_boolean"

/** @brief afw_utf8_t for string ge_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_boolean;

/** @brief define for quoted string ge_date */
#define AFW_Q_ge_date "ge_date"

/** @brief afw_utf8_t for string ge_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_date;

/** @brief define for quoted string ge_dateTime */
#define AFW_Q_ge_dateTime "ge_dateTime"

/** @brief afw_utf8_t for string ge_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_dateTime;

/** @brief define for quoted string ge_dayTimeDuration */
#define AFW_Q_ge_dayTimeDuration "ge_dayTimeDuration"

/** @brief afw_utf8_t for string ge_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_dayTimeDuration;

/** @brief define for quoted string ge_dnsName */
#define AFW_Q_ge_dnsName "ge_dnsName"

/** @brief afw_utf8_t for string ge_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_dnsName;

/** @brief define for quoted string ge_double */
#define AFW_Q_ge_double "ge_double"

/** @brief afw_utf8_t for string ge_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_double;

/** @brief define for quoted string ge_expression */
#define AFW_Q_ge_expression "ge_expression"

/** @brief afw_utf8_t for string ge_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_expression;

/** @brief define for quoted string ge_function */
#define AFW_Q_ge_function "ge_function"

/** @brief afw_utf8_t for string ge_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_function;

/** @brief define for quoted string ge_hexBinary */
#define AFW_Q_ge_hexBinary "ge_hexBinary"

/** @brief afw_utf8_t for string ge_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_hexBinary;

/** @brief define for quoted string ge_hybrid */
#define AFW_Q_ge_hybrid "ge_hybrid"

/** @brief afw_utf8_t for string ge_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_hybrid;

/** @brief define for quoted string ge_ia5String */
#define AFW_Q_ge_ia5String "ge_ia5String"

/** @brief afw_utf8_t for string ge_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_ia5String;

/** @brief define for quoted string ge_integer */
#define AFW_Q_ge_integer "ge_integer"

/** @brief afw_utf8_t for string ge_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_integer;

/** @brief define for quoted string ge_ipAddress */
#define AFW_Q_ge_ipAddress "ge_ipAddress"

/** @brief afw_utf8_t for string ge_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_ipAddress;

/** @brief define for quoted string ge_object */
#define AFW_Q_ge_object "ge_object"

/** @brief afw_utf8_t for string ge_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_object;

/** @brief define for quoted string ge_objectId */
#define AFW_Q_ge_objectId "ge_objectId"

/** @brief afw_utf8_t for string ge_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_objectId;

/** @brief define for quoted string ge_objectPath */
#define AFW_Q_ge_objectPath "ge_objectPath"

/** @brief afw_utf8_t for string ge_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_objectPath;

/** @brief define for quoted string ge_password */
#define AFW_Q_ge_password "ge_password"

/** @brief afw_utf8_t for string ge_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_password;

/** @brief define for quoted string ge_regexp */
#define AFW_Q_ge_regexp "ge_regexp"

/** @brief afw_utf8_t for string ge_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_regexp;

/** @brief define for quoted string ge_rfc822Name */
#define AFW_Q_ge_rfc822Name "ge_rfc822Name"

/** @brief afw_utf8_t for string ge_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_rfc822Name;

/** @brief define for quoted string ge_script */
#define AFW_Q_ge_script "ge_script"

/** @brief afw_utf8_t for string ge_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_script;

/** @brief define for quoted string ge_string */
#define AFW_Q_ge_string "ge_string"

/** @brief afw_utf8_t for string ge_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_string;

/** @brief define for quoted string ge_template */
#define AFW_Q_ge_template "ge_template"

/** @brief afw_utf8_t for string ge_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_template;

/** @brief define for quoted string ge_time */
#define AFW_Q_ge_time "ge_time"

/** @brief afw_utf8_t for string ge_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_time;

/** @brief define for quoted string ge_x500Name */
#define AFW_Q_ge_x500Name "ge_x500Name"

/** @brief afw_utf8_t for string ge_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_x500Name;

/** @brief define for quoted string ge_xpathExpression */
#define AFW_Q_ge_xpathExpression "ge_xpathExpression"

/** @brief afw_utf8_t for string ge_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_xpathExpression;

/** @brief define for quoted string ge_yearMonthDuration */
#define AFW_Q_ge_yearMonthDuration "ge_yearMonthDuration"

/** @brief afw_utf8_t for string ge_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ge_yearMonthDuration;

/** @brief define for quoted string general */
#define AFW_Q_general "general"

/** @brief afw_utf8_t for string general */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_general;

/** @brief define for quoted string generate_uuid */
#define AFW_Q_generate_uuid "generate_uuid"

/** @brief afw_utf8_t for string generate_uuid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_generate_uuid;

/** @brief define for quoted string getObjectCount */
#define AFW_Q_getObjectCount "getObjectCount"

/** @brief afw_utf8_t for string getObjectCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_getObjectCount;

/** @brief define for quoted string get_object */
#define AFW_Q_get_object "get_object"

/** @brief afw_utf8_t for string get_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_get_object;

/** @brief define for quoted string get_object_with_uri */
#define AFW_Q_get_object_with_uri "get_object_with_uri"

/** @brief afw_utf8_t for string get_object_with_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_get_object_with_uri;

/** @brief define for quoted string get_stream_error */
#define AFW_Q_get_stream_error "get_stream_error"

/** @brief afw_utf8_t for string get_stream_error */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_get_stream_error;

/** @brief define for quoted string gitBranch */
#define AFW_Q_gitBranch "gitBranch"

/** @brief afw_utf8_t for string gitBranch */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gitBranch;

/** @brief define for quoted string gitDescribe */
#define AFW_Q_gitDescribe "gitDescribe"

/** @brief afw_utf8_t for string gitDescribe */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gitDescribe;

/** @brief define for quoted string gitSha */
#define AFW_Q_gitSha "gitSha"

/** @brief afw_utf8_t for string gitSha */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gitSha;

/** @brief define for quoted string gt */
#define AFW_Q_gt "gt"

/** @brief afw_utf8_t for string gt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt;

/** @brief define for quoted string gt_anyURI */
#define AFW_Q_gt_anyURI "gt_anyURI"

/** @brief afw_utf8_t for string gt_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_anyURI;

/** @brief define for quoted string gt_array */
#define AFW_Q_gt_array "gt_array"

/** @brief afw_utf8_t for string gt_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_array;

/** @brief define for quoted string gt_base64Binary */
#define AFW_Q_gt_base64Binary "gt_base64Binary"

/** @brief afw_utf8_t for string gt_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_base64Binary;

/** @brief define for quoted string gt_boolean */
#define AFW_Q_gt_boolean "gt_boolean"

/** @brief afw_utf8_t for string gt_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_boolean;

/** @brief define for quoted string gt_date */
#define AFW_Q_gt_date "gt_date"

/** @brief afw_utf8_t for string gt_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_date;

/** @brief define for quoted string gt_dateTime */
#define AFW_Q_gt_dateTime "gt_dateTime"

/** @brief afw_utf8_t for string gt_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_dateTime;

/** @brief define for quoted string gt_dayTimeDuration */
#define AFW_Q_gt_dayTimeDuration "gt_dayTimeDuration"

/** @brief afw_utf8_t for string gt_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_dayTimeDuration;

/** @brief define for quoted string gt_dnsName */
#define AFW_Q_gt_dnsName "gt_dnsName"

/** @brief afw_utf8_t for string gt_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_dnsName;

/** @brief define for quoted string gt_double */
#define AFW_Q_gt_double "gt_double"

/** @brief afw_utf8_t for string gt_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_double;

/** @brief define for quoted string gt_expression */
#define AFW_Q_gt_expression "gt_expression"

/** @brief afw_utf8_t for string gt_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_expression;

/** @brief define for quoted string gt_function */
#define AFW_Q_gt_function "gt_function"

/** @brief afw_utf8_t for string gt_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_function;

/** @brief define for quoted string gt_hexBinary */
#define AFW_Q_gt_hexBinary "gt_hexBinary"

/** @brief afw_utf8_t for string gt_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_hexBinary;

/** @brief define for quoted string gt_hybrid */
#define AFW_Q_gt_hybrid "gt_hybrid"

/** @brief afw_utf8_t for string gt_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_hybrid;

/** @brief define for quoted string gt_ia5String */
#define AFW_Q_gt_ia5String "gt_ia5String"

/** @brief afw_utf8_t for string gt_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_ia5String;

/** @brief define for quoted string gt_integer */
#define AFW_Q_gt_integer "gt_integer"

/** @brief afw_utf8_t for string gt_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_integer;

/** @brief define for quoted string gt_ipAddress */
#define AFW_Q_gt_ipAddress "gt_ipAddress"

/** @brief afw_utf8_t for string gt_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_ipAddress;

/** @brief define for quoted string gt_object */
#define AFW_Q_gt_object "gt_object"

/** @brief afw_utf8_t for string gt_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_object;

/** @brief define for quoted string gt_objectId */
#define AFW_Q_gt_objectId "gt_objectId"

/** @brief afw_utf8_t for string gt_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_objectId;

/** @brief define for quoted string gt_objectPath */
#define AFW_Q_gt_objectPath "gt_objectPath"

/** @brief afw_utf8_t for string gt_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_objectPath;

/** @brief define for quoted string gt_password */
#define AFW_Q_gt_password "gt_password"

/** @brief afw_utf8_t for string gt_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_password;

/** @brief define for quoted string gt_regexp */
#define AFW_Q_gt_regexp "gt_regexp"

/** @brief afw_utf8_t for string gt_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_regexp;

/** @brief define for quoted string gt_rfc822Name */
#define AFW_Q_gt_rfc822Name "gt_rfc822Name"

/** @brief afw_utf8_t for string gt_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_rfc822Name;

/** @brief define for quoted string gt_script */
#define AFW_Q_gt_script "gt_script"

/** @brief afw_utf8_t for string gt_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_script;

/** @brief define for quoted string gt_string */
#define AFW_Q_gt_string "gt_string"

/** @brief afw_utf8_t for string gt_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_string;

/** @brief define for quoted string gt_template */
#define AFW_Q_gt_template "gt_template"

/** @brief afw_utf8_t for string gt_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_template;

/** @brief define for quoted string gt_time */
#define AFW_Q_gt_time "gt_time"

/** @brief afw_utf8_t for string gt_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_time;

/** @brief define for quoted string gt_x500Name */
#define AFW_Q_gt_x500Name "gt_x500Name"

/** @brief afw_utf8_t for string gt_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_x500Name;

/** @brief define for quoted string gt_xpathExpression */
#define AFW_Q_gt_xpathExpression "gt_xpathExpression"

/** @brief afw_utf8_t for string gt_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_xpathExpression;

/** @brief define for quoted string gt_yearMonthDuration */
#define AFW_Q_gt_yearMonthDuration "gt_yearMonthDuration"

/** @brief afw_utf8_t for string gt_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gt_yearMonthDuration;

/** @brief define for quoted string gte */
#define AFW_Q_gte "gte"

/** @brief afw_utf8_t for string gte */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_gte;

/** @brief define for quoted string hasErrors */
#define AFW_Q_hasErrors "hasErrors"

/** @brief afw_utf8_t for string hasErrors */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hasErrors;

/** @brief define for quoted string hexBinary */
#define AFW_Q_hexBinary "hexBinary"

/** @brief afw_utf8_t for string hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary;

/** @brief define for quoted string hexBinary_at_least_one_member_of */
#define AFW_Q_hexBinary_at_least_one_member_of "hexBinary_at_least_one_member_of"

/** @brief afw_utf8_t for string hexBinary_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_at_least_one_member_of;

/** @brief define for quoted string hexBinary_bag */
#define AFW_Q_hexBinary_bag "hexBinary_bag"

/** @brief afw_utf8_t for string hexBinary_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_bag;

/** @brief define for quoted string hexBinary_bag_size */
#define AFW_Q_hexBinary_bag_size "hexBinary_bag_size"

/** @brief afw_utf8_t for string hexBinary_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_bag_size;

/** @brief define for quoted string hexBinary_eq */
#define AFW_Q_hexBinary_eq "hexBinary_eq"

/** @brief afw_utf8_t for string hexBinary_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_eq;

/** @brief define for quoted string hexBinary_intersection */
#define AFW_Q_hexBinary_intersection "hexBinary_intersection"

/** @brief afw_utf8_t for string hexBinary_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_intersection;

/** @brief define for quoted string hexBinary_is_in */
#define AFW_Q_hexBinary_is_in "hexBinary_is_in"

/** @brief afw_utf8_t for string hexBinary_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_is_in;

/** @brief define for quoted string hexBinary_one_and_only */
#define AFW_Q_hexBinary_one_and_only "hexBinary_one_and_only"

/** @brief afw_utf8_t for string hexBinary_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_one_and_only;

/** @brief define for quoted string hexBinary_set_equals */
#define AFW_Q_hexBinary_set_equals "hexBinary_set_equals"

/** @brief afw_utf8_t for string hexBinary_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_set_equals;

/** @brief define for quoted string hexBinary_subset */
#define AFW_Q_hexBinary_subset "hexBinary_subset"

/** @brief afw_utf8_t for string hexBinary_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_subset;

/** @brief define for quoted string hexBinary_union */
#define AFW_Q_hexBinary_union "hexBinary_union"

/** @brief afw_utf8_t for string hexBinary_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hexBinary_union;

/** @brief define for quoted string higher_order_array */
#define AFW_Q_higher_order_array "higher_order_array"

/** @brief afw_utf8_t for string higher_order_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_higher_order_array;

/** @brief define for quoted string hints */
#define AFW_Q_hints "hints"

/** @brief afw_utf8_t for string hints */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hints;

/** @brief define for quoted string homePageUrl */
#define AFW_Q_homePageUrl "homePageUrl"

/** @brief afw_utf8_t for string homePageUrl */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_homePageUrl;

/** @brief define for quoted string host */
#define AFW_Q_host "host"

/** @brief afw_utf8_t for string host */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_host;

/** @brief define for quoted string hybrid */
#define AFW_Q_hybrid "hybrid"

/** @brief afw_utf8_t for string hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_hybrid;

/** @brief define for quoted string ia5String */
#define AFW_Q_ia5String "ia5String"

/** @brief afw_utf8_t for string ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ia5String;

/** @brief define for quoted string id */
#define AFW_Q_id "id"

/** @brief afw_utf8_t for string id */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_id;

/** @brief define for quoted string idPropertyName */
#define AFW_Q_idPropertyName "idPropertyName"

/** @brief afw_utf8_t for string idPropertyName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_idPropertyName;

/** @brief define for quoted string idRegistryType */
#define AFW_Q_idRegistryType "idRegistryType"

/** @brief afw_utf8_t for string idRegistryType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_idRegistryType;

/** @brief define for quoted string idRuntimeObjectType */
#define AFW_Q_idRuntimeObjectType "idRuntimeObjectType"

/** @brief afw_utf8_t for string idRuntimeObjectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_idRuntimeObjectType;

/** @brief define for quoted string ident */
#define AFW_Q_ident "ident"

/** @brief afw_utf8_t for string ident */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ident;

/** @brief define for quoted string if */
#define AFW_Q_if "if"

/** @brief afw_utf8_t for string if */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_if;

/** @brief define for quoted string ignore */
#define AFW_Q_ignore "ignore"

/** @brief afw_utf8_t for string ignore */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ignore;

/** @brief define for quoted string immediate */
#define AFW_Q_immediate "immediate"

/** @brief afw_utf8_t for string immediate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_immediate;

/** @brief define for quoted string implementationId */
#define AFW_Q_implementationId "implementationId"

/** @brief afw_utf8_t for string implementationId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_implementationId;

/** @brief define for quoted string implementationParameters */
#define AFW_Q_implementationParameters "implementationParameters"

/** @brief afw_utf8_t for string implementationParameters */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_implementationParameters;

/** @brief define for quoted string implemented */
#define AFW_Q_implemented "implemented"

/** @brief afw_utf8_t for string implemented */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_implemented;

/** @brief define for quoted string import */
#define AFW_Q_import "import"

/** @brief afw_utf8_t for string import */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_import;

/** @brief define for quoted string in */
#define AFW_Q_in "in"

/** @brief afw_utf8_t for string in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_in;

/** @brief define for quoted string in_range */
#define AFW_Q_in_range "in_range"

/** @brief afw_utf8_t for string in_range */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_in_range;

/** @brief define for quoted string in_range_time */
#define AFW_Q_in_range_time "in_range_time"

/** @brief afw_utf8_t for string in_range_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_in_range_time;

/** @brief define for quoted string includeDefaultValues */
#define AFW_Q_includeDefaultValues "includeDefaultValues"

/** @brief afw_utf8_t for string includeDefaultValues */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includeDefaultValues;

/** @brief define for quoted string includeDescendentObjectTypes */
#define AFW_Q_includeDescendentObjectTypes "includeDescendentObjectTypes"

/** @brief afw_utf8_t for string includeDescendentObjectTypes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includeDescendentObjectTypes;

/** @brief define for quoted string includedByFlags */
#define AFW_Q_includedByFlags "includedByFlags"

/** @brief afw_utf8_t for string includedByFlags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includedByFlags;

/** @brief define for quoted string includes */
#define AFW_Q_includes "includes"

/** @brief afw_utf8_t for string includes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includes;

/** @brief define for quoted string includesFlags */
#define AFW_Q_includesFlags "includesFlags"

/** @brief afw_utf8_t for string includesFlags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includesFlags;

/** @brief define for quoted string includes_anyURI */
#define AFW_Q_includes_anyURI "includes_anyURI"

/** @brief afw_utf8_t for string includes_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includes_anyURI;

/** @brief define for quoted string includes_array */
#define AFW_Q_includes_array "includes_array"

/** @brief afw_utf8_t for string includes_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includes_array;

/** @brief define for quoted string includes_string */
#define AFW_Q_includes_string "includes_string"

/** @brief afw_utf8_t for string includes_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_includes_string;

/** @brief define for quoted string indeterminate */
#define AFW_Q_indeterminate "indeterminate"

/** @brief afw_utf8_t for string indeterminate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_indeterminate;

/** @brief define for quoted string indeterminateD */
#define AFW_Q_indeterminateD "indeterminateD"

/** @brief afw_utf8_t for string indeterminateD */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_indeterminateD;

/** @brief define for quoted string indeterminateDP */
#define AFW_Q_indeterminateDP "indeterminateDP"

/** @brief afw_utf8_t for string indeterminateDP */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_indeterminateDP;

/** @brief define for quoted string indeterminateP */
#define AFW_Q_indeterminateP "indeterminateP"

/** @brief afw_utf8_t for string indeterminateP */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_indeterminateP;

/** @brief define for quoted string index_create */
#define AFW_Q_index_create "index_create"

/** @brief afw_utf8_t for string index_create */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_index_create;

/** @brief define for quoted string index_list */
#define AFW_Q_index_list "index_list"

/** @brief afw_utf8_t for string index_list */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_index_list;

/** @brief define for quoted string index_of */
#define AFW_Q_index_of "index_of"

/** @brief afw_utf8_t for string index_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_index_of;

/** @brief define for quoted string index_of_anyURI */
#define AFW_Q_index_of_anyURI "index_of_anyURI"

/** @brief afw_utf8_t for string index_of_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_index_of_anyURI;

/** @brief define for quoted string index_of_string */
#define AFW_Q_index_of_string "index_of_string"

/** @brief afw_utf8_t for string index_of_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_index_of_string;

/** @brief define for quoted string index_remove */
#define AFW_Q_index_remove "index_remove"

/** @brief afw_utf8_t for string index_remove */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_index_remove;

/** @brief define for quoted string indexes */
#define AFW_Q_indexes "indexes"

/** @brief afw_utf8_t for string indexes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_indexes;

/** @brief define for quoted string indirect */
#define AFW_Q_indirect "indirect"

/** @brief afw_utf8_t for string indirect */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_indirect;

/** @brief define for quoted string indirectObjectId */
#define AFW_Q_indirectObjectId "indirectObjectId"

/** @brief afw_utf8_t for string indirectObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_indirectObjectId;

/** @brief define for quoted string info */
#define AFW_Q_info "info"

/** @brief afw_utf8_t for string info */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_info;

/** @brief define for quoted string inheritedFrom */
#define AFW_Q_inheritedFrom "inheritedFrom"

/** @brief afw_utf8_t for string inheritedFrom */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_inheritedFrom;

/** @brief define for quoted string initialAuthorizationCheck */
#define AFW_Q_initialAuthorizationCheck "initialAuthorizationCheck"

/** @brief afw_utf8_t for string initialAuthorizationCheck */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_initialAuthorizationCheck;

/** @brief define for quoted string initialEnvironmentVariables */
#define AFW_Q_initialEnvironmentVariables "initialEnvironmentVariables"

/** @brief afw_utf8_t for string initialEnvironmentVariables */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_initialEnvironmentVariables;

/** @brief define for quoted string installPackageSubdir */
#define AFW_Q_installPackageSubdir "installPackageSubdir"

/** @brief afw_utf8_t for string installPackageSubdir */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_installPackageSubdir;

/** @brief define for quoted string instanceObjectType */
#define AFW_Q_instanceObjectType "instanceObjectType"

/** @brief afw_utf8_t for string instanceObjectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_instanceObjectType;

/** @brief define for quoted string instanceof */
#define AFW_Q_instanceof "instanceof"

/** @brief afw_utf8_t for string instanceof */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_instanceof;

/** @brief define for quoted string integer */
#define AFW_Q_integer "integer"

/** @brief afw_utf8_t for string integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer;

/** @brief define for quoted string integer_abs */
#define AFW_Q_integer_abs "integer_abs"

/** @brief afw_utf8_t for string integer_abs */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_abs;

/** @brief define for quoted string integer_add */
#define AFW_Q_integer_add "integer_add"

/** @brief afw_utf8_t for string integer_add */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_add;

/** @brief define for quoted string integer_at_least_one_member_of */
#define AFW_Q_integer_at_least_one_member_of "integer_at_least_one_member_of"

/** @brief afw_utf8_t for string integer_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_at_least_one_member_of;

/** @brief define for quoted string integer_bag */
#define AFW_Q_integer_bag "integer_bag"

/** @brief afw_utf8_t for string integer_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_bag;

/** @brief define for quoted string integer_bag_size */
#define AFW_Q_integer_bag_size "integer_bag_size"

/** @brief afw_utf8_t for string integer_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_bag_size;

/** @brief define for quoted string integer_divide */
#define AFW_Q_integer_divide "integer_divide"

/** @brief afw_utf8_t for string integer_divide */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_divide;

/** @brief define for quoted string integer_eq */
#define AFW_Q_integer_eq "integer_eq"

/** @brief afw_utf8_t for string integer_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_eq;

/** @brief define for quoted string integer_ge */
#define AFW_Q_integer_ge "integer_ge"

/** @brief afw_utf8_t for string integer_ge */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_ge;

/** @brief define for quoted string integer_gt */
#define AFW_Q_integer_gt "integer_gt"

/** @brief afw_utf8_t for string integer_gt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_gt;

/** @brief define for quoted string integer_intersection */
#define AFW_Q_integer_intersection "integer_intersection"

/** @brief afw_utf8_t for string integer_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_intersection;

/** @brief define for quoted string integer_is_in */
#define AFW_Q_integer_is_in "integer_is_in"

/** @brief afw_utf8_t for string integer_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_is_in;

/** @brief define for quoted string integer_le */
#define AFW_Q_integer_le "integer_le"

/** @brief afw_utf8_t for string integer_le */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_le;

/** @brief define for quoted string integer_lt */
#define AFW_Q_integer_lt "integer_lt"

/** @brief afw_utf8_t for string integer_lt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_lt;

/** @brief define for quoted string integer_mod */
#define AFW_Q_integer_mod "integer_mod"

/** @brief afw_utf8_t for string integer_mod */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_mod;

/** @brief define for quoted string integer_multiply */
#define AFW_Q_integer_multiply "integer_multiply"

/** @brief afw_utf8_t for string integer_multiply */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_multiply;

/** @brief define for quoted string integer_one_and_only */
#define AFW_Q_integer_one_and_only "integer_one_and_only"

/** @brief afw_utf8_t for string integer_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_one_and_only;

/** @brief define for quoted string integer_set_equals */
#define AFW_Q_integer_set_equals "integer_set_equals"

/** @brief afw_utf8_t for string integer_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_set_equals;

/** @brief define for quoted string integer_subset */
#define AFW_Q_integer_subset "integer_subset"

/** @brief afw_utf8_t for string integer_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_subset;

/** @brief define for quoted string integer_subtract */
#define AFW_Q_integer_subtract "integer_subtract"

/** @brief afw_utf8_t for string integer_subtract */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_subtract;

/** @brief define for quoted string integer_to_double */
#define AFW_Q_integer_to_double "integer_to_double"

/** @brief afw_utf8_t for string integer_to_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_to_double;

/** @brief define for quoted string integer_to_string */
#define AFW_Q_integer_to_string "integer_to_string"

/** @brief afw_utf8_t for string integer_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_to_string;

/** @brief define for quoted string integer_union */
#define AFW_Q_integer_union "integer_union"

/** @brief afw_utf8_t for string integer_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integer_union;

/** @brief define for quoted string integersAsString */
#define AFW_Q_integersAsString "integersAsString"

/** @brief afw_utf8_t for string integersAsString */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_integersAsString;

/** @brief define for quoted string interface */
#define AFW_Q_interface "interface"

/** @brief afw_utf8_t for string interface */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_interface;

/** @brief define for quoted string intermediate */
#define AFW_Q_intermediate "intermediate"

/** @brief afw_utf8_t for string intermediate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intermediate;

/** @brief define for quoted string intermediateOnly */
#define AFW_Q_intermediateOnly "intermediateOnly"

/** @brief afw_utf8_t for string intermediateOnly */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intermediateOnly;

/** @brief define for quoted string internal */
#define AFW_Q_internal "internal"

/** @brief afw_utf8_t for string internal */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_internal;

/** @brief define for quoted string intersection */
#define AFW_Q_intersection "intersection"

/** @brief afw_utf8_t for string intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection;

/** @brief define for quoted string intersection_anyURI */
#define AFW_Q_intersection_anyURI "intersection_anyURI"

/** @brief afw_utf8_t for string intersection_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_anyURI;

/** @brief define for quoted string intersection_base64Binary */
#define AFW_Q_intersection_base64Binary "intersection_base64Binary"

/** @brief afw_utf8_t for string intersection_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_base64Binary;

/** @brief define for quoted string intersection_boolean */
#define AFW_Q_intersection_boolean "intersection_boolean"

/** @brief afw_utf8_t for string intersection_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_boolean;

/** @brief define for quoted string intersection_date */
#define AFW_Q_intersection_date "intersection_date"

/** @brief afw_utf8_t for string intersection_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_date;

/** @brief define for quoted string intersection_dateTime */
#define AFW_Q_intersection_dateTime "intersection_dateTime"

/** @brief afw_utf8_t for string intersection_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_dateTime;

/** @brief define for quoted string intersection_dayTimeDuration */
#define AFW_Q_intersection_dayTimeDuration "intersection_dayTimeDuration"

/** @brief afw_utf8_t for string intersection_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_dayTimeDuration;

/** @brief define for quoted string intersection_double */
#define AFW_Q_intersection_double "intersection_double"

/** @brief afw_utf8_t for string intersection_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_double;

/** @brief define for quoted string intersection_hexBinary */
#define AFW_Q_intersection_hexBinary "intersection_hexBinary"

/** @brief afw_utf8_t for string intersection_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_hexBinary;

/** @brief define for quoted string intersection_integer */
#define AFW_Q_intersection_integer "intersection_integer"

/** @brief afw_utf8_t for string intersection_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_integer;

/** @brief define for quoted string intersection_rfc822Name */
#define AFW_Q_intersection_rfc822Name "intersection_rfc822Name"

/** @brief afw_utf8_t for string intersection_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_rfc822Name;

/** @brief define for quoted string intersection_string */
#define AFW_Q_intersection_string "intersection_string"

/** @brief afw_utf8_t for string intersection_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_string;

/** @brief define for quoted string intersection_time */
#define AFW_Q_intersection_time "intersection_time"

/** @brief afw_utf8_t for string intersection_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_time;

/** @brief define for quoted string intersection_x500Name */
#define AFW_Q_intersection_x500Name "intersection_x500Name"

/** @brief afw_utf8_t for string intersection_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_x500Name;

/** @brief define for quoted string intersection_yearMonthDuration */
#define AFW_Q_intersection_yearMonthDuration "intersection_yearMonthDuration"

/** @brief afw_utf8_t for string intersection_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_intersection_yearMonthDuration;

/** @brief define for quoted string ipAddress */
#define AFW_Q_ipAddress "ipAddress"

/** @brief afw_utf8_t for string ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ipAddress;

/** @brief define for quoted string ipAddress_bag */
#define AFW_Q_ipAddress_bag "ipAddress_bag"

/** @brief afw_utf8_t for string ipAddress_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ipAddress_bag;

/** @brief define for quoted string ipAddress_bag_size */
#define AFW_Q_ipAddress_bag_size "ipAddress_bag_size"

/** @brief afw_utf8_t for string ipAddress_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ipAddress_bag_size;

/** @brief define for quoted string ipAddress_is_in */
#define AFW_Q_ipAddress_is_in "ipAddress_is_in"

/** @brief afw_utf8_t for string ipAddress_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ipAddress_is_in;

/** @brief define for quoted string ipAddress_one_and_only */
#define AFW_Q_ipAddress_one_and_only "ipAddress_one_and_only"

/** @brief afw_utf8_t for string ipAddress_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ipAddress_one_and_only;

/** @brief define for quoted string ipAddress_regexp_match */
#define AFW_Q_ipAddress_regexp_match "ipAddress_regexp_match"

/** @brief afw_utf8_t for string ipAddress_regexp_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ipAddress_regexp_match;

/** @brief define for quoted string ipAddress_to_string */
#define AFW_Q_ipAddress_to_string "ipAddress_to_string"

/** @brief afw_utf8_t for string ipAddress_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ipAddress_to_string;

/** @brief define for quoted string is */
#define AFW_Q_is "is"

/** @brief afw_utf8_t for string is */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is;

/** @brief define for quoted string isDevelopmentInput */
#define AFW_Q_isDevelopmentInput "isDevelopmentInput"

/** @brief afw_utf8_t for string isDevelopmentInput */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_isDevelopmentInput;

/** @brief define for quoted string isModelLocation */
#define AFW_Q_isModelLocation "isModelLocation"

/** @brief afw_utf8_t for string isModelLocation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_isModelLocation;

/** @brief define for quoted string isPolicyLocation */
#define AFW_Q_isPolicyLocation "isPolicyLocation"

/** @brief afw_utf8_t for string isPolicyLocation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_isPolicyLocation;

/** @brief define for quoted string isUnique */
#define AFW_Q_isUnique "isUnique"

/** @brief afw_utf8_t for string isUnique */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_isUnique;

/** @brief define for quoted string is_NaN */
#define AFW_Q_is_NaN "is_NaN"

/** @brief afw_utf8_t for string is_NaN */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_NaN;

/** @brief define for quoted string is_anyURI */
#define AFW_Q_is_anyURI "is_anyURI"

/** @brief afw_utf8_t for string is_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_anyURI;

/** @brief define for quoted string is_array */
#define AFW_Q_is_array "is_array"

/** @brief afw_utf8_t for string is_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_array;

/** @brief define for quoted string is_base64Binary */
#define AFW_Q_is_base64Binary "is_base64Binary"

/** @brief afw_utf8_t for string is_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_base64Binary;

/** @brief define for quoted string is_boolean */
#define AFW_Q_is_boolean "is_boolean"

/** @brief afw_utf8_t for string is_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_boolean;

/** @brief define for quoted string is_date */
#define AFW_Q_is_date "is_date"

/** @brief afw_utf8_t for string is_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_date;

/** @brief define for quoted string is_dateTime */
#define AFW_Q_is_dateTime "is_dateTime"

/** @brief afw_utf8_t for string is_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_dateTime;

/** @brief define for quoted string is_dayTimeDuration */
#define AFW_Q_is_dayTimeDuration "is_dayTimeDuration"

/** @brief afw_utf8_t for string is_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_dayTimeDuration;

/** @brief define for quoted string is_defined */
#define AFW_Q_is_defined "is_defined"

/** @brief afw_utf8_t for string is_defined */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_defined;

/** @brief define for quoted string is_dnsName */
#define AFW_Q_is_dnsName "is_dnsName"

/** @brief afw_utf8_t for string is_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_dnsName;

/** @brief define for quoted string is_double */
#define AFW_Q_is_double "is_double"

/** @brief afw_utf8_t for string is_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_double;

/** @brief define for quoted string is_expression */
#define AFW_Q_is_expression "is_expression"

/** @brief afw_utf8_t for string is_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_expression;

/** @brief define for quoted string is_finite */
#define AFW_Q_is_finite "is_finite"

/** @brief afw_utf8_t for string is_finite */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_finite;

/** @brief define for quoted string is_function */
#define AFW_Q_is_function "is_function"

/** @brief afw_utf8_t for string is_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_function;

/** @brief define for quoted string is_hexBinary */
#define AFW_Q_is_hexBinary "is_hexBinary"

/** @brief afw_utf8_t for string is_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_hexBinary;

/** @brief define for quoted string is_hybrid */
#define AFW_Q_is_hybrid "is_hybrid"

/** @brief afw_utf8_t for string is_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_hybrid;

/** @brief define for quoted string is_ia5String */
#define AFW_Q_is_ia5String "is_ia5String"

/** @brief afw_utf8_t for string is_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_ia5String;

/** @brief define for quoted string is_in */
#define AFW_Q_is_in "is_in"

/** @brief afw_utf8_t for string is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in;

/** @brief define for quoted string is_in_anyURI */
#define AFW_Q_is_in_anyURI "is_in_anyURI"

/** @brief afw_utf8_t for string is_in_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_anyURI;

/** @brief define for quoted string is_in_base64Binary */
#define AFW_Q_is_in_base64Binary "is_in_base64Binary"

/** @brief afw_utf8_t for string is_in_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_base64Binary;

/** @brief define for quoted string is_in_boolean */
#define AFW_Q_is_in_boolean "is_in_boolean"

/** @brief afw_utf8_t for string is_in_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_boolean;

/** @brief define for quoted string is_in_date */
#define AFW_Q_is_in_date "is_in_date"

/** @brief afw_utf8_t for string is_in_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_date;

/** @brief define for quoted string is_in_dateTime */
#define AFW_Q_is_in_dateTime "is_in_dateTime"

/** @brief afw_utf8_t for string is_in_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_dateTime;

/** @brief define for quoted string is_in_dayTimeDuration */
#define AFW_Q_is_in_dayTimeDuration "is_in_dayTimeDuration"

/** @brief afw_utf8_t for string is_in_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_dayTimeDuration;

/** @brief define for quoted string is_in_dnsName */
#define AFW_Q_is_in_dnsName "is_in_dnsName"

/** @brief afw_utf8_t for string is_in_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_dnsName;

/** @brief define for quoted string is_in_double */
#define AFW_Q_is_in_double "is_in_double"

/** @brief afw_utf8_t for string is_in_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_double;

/** @brief define for quoted string is_in_hexBinary */
#define AFW_Q_is_in_hexBinary "is_in_hexBinary"

/** @brief afw_utf8_t for string is_in_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_hexBinary;

/** @brief define for quoted string is_in_integer */
#define AFW_Q_is_in_integer "is_in_integer"

/** @brief afw_utf8_t for string is_in_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_integer;

/** @brief define for quoted string is_in_ipAddress */
#define AFW_Q_is_in_ipAddress "is_in_ipAddress"

/** @brief afw_utf8_t for string is_in_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_ipAddress;

/** @brief define for quoted string is_in_rfc822Name */
#define AFW_Q_is_in_rfc822Name "is_in_rfc822Name"

/** @brief afw_utf8_t for string is_in_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_rfc822Name;

/** @brief define for quoted string is_in_string */
#define AFW_Q_is_in_string "is_in_string"

/** @brief afw_utf8_t for string is_in_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_string;

/** @brief define for quoted string is_in_time */
#define AFW_Q_is_in_time "is_in_time"

/** @brief afw_utf8_t for string is_in_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_time;

/** @brief define for quoted string is_in_x500Name */
#define AFW_Q_is_in_x500Name "is_in_x500Name"

/** @brief afw_utf8_t for string is_in_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_x500Name;

/** @brief define for quoted string is_in_yearMonthDuration */
#define AFW_Q_is_in_yearMonthDuration "is_in_yearMonthDuration"

/** @brief afw_utf8_t for string is_in_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_in_yearMonthDuration;

/** @brief define for quoted string is_integer */
#define AFW_Q_is_integer "is_integer"

/** @brief afw_utf8_t for string is_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_integer;

/** @brief define for quoted string is_ipAddress */
#define AFW_Q_is_ipAddress "is_ipAddress"

/** @brief afw_utf8_t for string is_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_ipAddress;

/** @brief define for quoted string is_null */
#define AFW_Q_is_null "is_null"

/** @brief afw_utf8_t for string is_null */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_null;

/** @brief define for quoted string is_nullish */
#define AFW_Q_is_nullish "is_nullish"

/** @brief afw_utf8_t for string is_nullish */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_nullish;

/** @brief define for quoted string is_object */
#define AFW_Q_is_object "is_object"

/** @brief afw_utf8_t for string is_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_object;

/** @brief define for quoted string is_objectId */
#define AFW_Q_is_objectId "is_objectId"

/** @brief afw_utf8_t for string is_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_objectId;

/** @brief define for quoted string is_objectPath */
#define AFW_Q_is_objectPath "is_objectPath"

/** @brief afw_utf8_t for string is_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_objectPath;

/** @brief define for quoted string is_password */
#define AFW_Q_is_password "is_password"

/** @brief afw_utf8_t for string is_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_password;

/** @brief define for quoted string is_rfc822Name */
#define AFW_Q_is_rfc822Name "is_rfc822Name"

/** @brief afw_utf8_t for string is_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_rfc822Name;

/** @brief define for quoted string is_script */
#define AFW_Q_is_script "is_script"

/** @brief afw_utf8_t for string is_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_script;

/** @brief define for quoted string is_string */
#define AFW_Q_is_string "is_string"

/** @brief afw_utf8_t for string is_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_string;

/** @brief define for quoted string is_template */
#define AFW_Q_is_template "is_template"

/** @brief afw_utf8_t for string is_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_template;

/** @brief define for quoted string is_time */
#define AFW_Q_is_time "is_time"

/** @brief afw_utf8_t for string is_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_time;

/** @brief define for quoted string is_unevaluated */
#define AFW_Q_is_unevaluated "is_unevaluated"

/** @brief afw_utf8_t for string is_unevaluated */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_unevaluated;

/** @brief define for quoted string is_x500Name */
#define AFW_Q_is_x500Name "is_x500Name"

/** @brief afw_utf8_t for string is_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_x500Name;

/** @brief define for quoted string is_xpathExpression */
#define AFW_Q_is_xpathExpression "is_xpathExpression"

/** @brief afw_utf8_t for string is_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_xpathExpression;

/** @brief define for quoted string is_yearMonthDuration */
#define AFW_Q_is_yearMonthDuration "is_yearMonthDuration"

/** @brief afw_utf8_t for string is_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_is_yearMonthDuration;

/** @brief define for quoted string join */
#define AFW_Q_join "join"

/** @brief afw_utf8_t for string join */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_join;

/** @brief define for quoted string journal */
#define AFW_Q_journal "journal"

/** @brief afw_utf8_t for string journal */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal;

/** @brief define for quoted string journalAdaptorId */
#define AFW_Q_journalAdaptorId "journalAdaptorId"

/** @brief afw_utf8_t for string journalAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journalAdaptorId;

/** @brief define for quoted string journal_advance_cursor_for_consumer */
#define AFW_Q_journal_advance_cursor_for_consumer "journal_advance_cursor_for_consumer"

/** @brief afw_utf8_t for string journal_advance_cursor_for_consumer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal_advance_cursor_for_consumer;

/** @brief define for quoted string journal_get_by_cursor */
#define AFW_Q_journal_get_by_cursor "journal_get_by_cursor"

/** @brief afw_utf8_t for string journal_get_by_cursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal_get_by_cursor;

/** @brief define for quoted string journal_get_first */
#define AFW_Q_journal_get_first "journal_get_first"

/** @brief afw_utf8_t for string journal_get_first */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal_get_first;

/** @brief define for quoted string journal_get_next_after_cursor */
#define AFW_Q_journal_get_next_after_cursor "journal_get_next_after_cursor"

/** @brief afw_utf8_t for string journal_get_next_after_cursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal_get_next_after_cursor;

/** @brief define for quoted string journal_get_next_for_consumer */
#define AFW_Q_journal_get_next_for_consumer "journal_get_next_for_consumer"

/** @brief afw_utf8_t for string journal_get_next_for_consumer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal_get_next_for_consumer;

/** @brief define for quoted string journal_get_next_for_consumer_after_cursor */
#define AFW_Q_journal_get_next_for_consumer_after_cursor "journal_get_next_for_consumer_after_cursor"

/** @brief afw_utf8_t for string journal_get_next_for_consumer_after_cursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal_get_next_for_consumer_after_cursor;

/** @brief define for quoted string journal_mark_consumed */
#define AFW_Q_journal_mark_consumed "journal_mark_consumed"

/** @brief afw_utf8_t for string journal_mark_consumed */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_journal_mark_consumed;

/** @brief define for quoted string json */
#define AFW_Q_json "json"

/** @brief afw_utf8_t for string json */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_json;

/** @brief define for quoted string jsonImpliesDataType */
#define AFW_Q_jsonImpliesDataType "jsonImpliesDataType"

/** @brief afw_utf8_t for string jsonImpliesDataType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_jsonImpliesDataType;

/** @brief define for quoted string jsonPrimitive */
#define AFW_Q_jsonPrimitive "jsonPrimitive"

/** @brief afw_utf8_t for string jsonPrimitive */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_jsonPrimitive;

/** @brief define for quoted string jsonSchemaStringFormat */
#define AFW_Q_jsonSchemaStringFormat "jsonSchemaStringFormat"

/** @brief afw_utf8_t for string jsonSchemaStringFormat */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_jsonSchemaStringFormat;

/** @brief define for quoted string key */
#define AFW_Q_key "key"

/** @brief afw_utf8_t for string key */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_key;

/** @brief define for quoted string label */
#define AFW_Q_label "label"

/** @brief afw_utf8_t for string label */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_label;

/** @brief define for quoted string labels */
#define AFW_Q_labels "labels"

/** @brief afw_utf8_t for string labels */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_labels;

/** @brief define for quoted string lambda */
#define AFW_Q_lambda "lambda"

/** @brief afw_utf8_t for string lambda */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lambda;

/** @brief define for quoted string largeIntegersAsString */
#define AFW_Q_largeIntegersAsString "largeIntegersAsString"

/** @brief afw_utf8_t for string largeIntegersAsString */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_largeIntegersAsString;

/** @brief define for quoted string lastContactTime */
#define AFW_Q_lastContactTime "lastContactTime"

/** @brief afw_utf8_t for string lastContactTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lastContactTime;

/** @brief define for quoted string last_index_of */
#define AFW_Q_last_index_of "last_index_of"

/** @brief afw_utf8_t for string last_index_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_last_index_of;

/** @brief define for quoted string last_index_of_anyURI */
#define AFW_Q_last_index_of_anyURI "last_index_of_anyURI"

/** @brief afw_utf8_t for string last_index_of_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_last_index_of_anyURI;

/** @brief define for quoted string last_index_of_string */
#define AFW_Q_last_index_of_string "last_index_of_string"

/** @brief afw_utf8_t for string last_index_of_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_last_index_of_string;

/** @brief define for quoted string layoutsAdaptorId */
#define AFW_Q_layoutsAdaptorId "layoutsAdaptorId"

/** @brief afw_utf8_t for string layoutsAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_layoutsAdaptorId;

/** @brief define for quoted string ldapOid */
#define AFW_Q_ldapOid "ldapOid"

/** @brief afw_utf8_t for string ldapOid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ldapOid;

/** @brief define for quoted string le */
#define AFW_Q_le "le"

/** @brief afw_utf8_t for string le */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le;

/** @brief define for quoted string le_anyURI */
#define AFW_Q_le_anyURI "le_anyURI"

/** @brief afw_utf8_t for string le_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_anyURI;

/** @brief define for quoted string le_array */
#define AFW_Q_le_array "le_array"

/** @brief afw_utf8_t for string le_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_array;

/** @brief define for quoted string le_base64Binary */
#define AFW_Q_le_base64Binary "le_base64Binary"

/** @brief afw_utf8_t for string le_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_base64Binary;

/** @brief define for quoted string le_boolean */
#define AFW_Q_le_boolean "le_boolean"

/** @brief afw_utf8_t for string le_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_boolean;

/** @brief define for quoted string le_date */
#define AFW_Q_le_date "le_date"

/** @brief afw_utf8_t for string le_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_date;

/** @brief define for quoted string le_dateTime */
#define AFW_Q_le_dateTime "le_dateTime"

/** @brief afw_utf8_t for string le_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_dateTime;

/** @brief define for quoted string le_dayTimeDuration */
#define AFW_Q_le_dayTimeDuration "le_dayTimeDuration"

/** @brief afw_utf8_t for string le_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_dayTimeDuration;

/** @brief define for quoted string le_dnsName */
#define AFW_Q_le_dnsName "le_dnsName"

/** @brief afw_utf8_t for string le_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_dnsName;

/** @brief define for quoted string le_double */
#define AFW_Q_le_double "le_double"

/** @brief afw_utf8_t for string le_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_double;

/** @brief define for quoted string le_expression */
#define AFW_Q_le_expression "le_expression"

/** @brief afw_utf8_t for string le_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_expression;

/** @brief define for quoted string le_function */
#define AFW_Q_le_function "le_function"

/** @brief afw_utf8_t for string le_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_function;

/** @brief define for quoted string le_hexBinary */
#define AFW_Q_le_hexBinary "le_hexBinary"

/** @brief afw_utf8_t for string le_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_hexBinary;

/** @brief define for quoted string le_hybrid */
#define AFW_Q_le_hybrid "le_hybrid"

/** @brief afw_utf8_t for string le_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_hybrid;

/** @brief define for quoted string le_ia5String */
#define AFW_Q_le_ia5String "le_ia5String"

/** @brief afw_utf8_t for string le_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_ia5String;

/** @brief define for quoted string le_integer */
#define AFW_Q_le_integer "le_integer"

/** @brief afw_utf8_t for string le_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_integer;

/** @brief define for quoted string le_ipAddress */
#define AFW_Q_le_ipAddress "le_ipAddress"

/** @brief afw_utf8_t for string le_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_ipAddress;

/** @brief define for quoted string le_object */
#define AFW_Q_le_object "le_object"

/** @brief afw_utf8_t for string le_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_object;

/** @brief define for quoted string le_objectId */
#define AFW_Q_le_objectId "le_objectId"

/** @brief afw_utf8_t for string le_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_objectId;

/** @brief define for quoted string le_objectPath */
#define AFW_Q_le_objectPath "le_objectPath"

/** @brief afw_utf8_t for string le_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_objectPath;

/** @brief define for quoted string le_password */
#define AFW_Q_le_password "le_password"

/** @brief afw_utf8_t for string le_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_password;

/** @brief define for quoted string le_regexp */
#define AFW_Q_le_regexp "le_regexp"

/** @brief afw_utf8_t for string le_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_regexp;

/** @brief define for quoted string le_rfc822Name */
#define AFW_Q_le_rfc822Name "le_rfc822Name"

/** @brief afw_utf8_t for string le_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_rfc822Name;

/** @brief define for quoted string le_script */
#define AFW_Q_le_script "le_script"

/** @brief afw_utf8_t for string le_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_script;

/** @brief define for quoted string le_string */
#define AFW_Q_le_string "le_string"

/** @brief afw_utf8_t for string le_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_string;

/** @brief define for quoted string le_template */
#define AFW_Q_le_template "le_template"

/** @brief afw_utf8_t for string le_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_template;

/** @brief define for quoted string le_time */
#define AFW_Q_le_time "le_time"

/** @brief afw_utf8_t for string le_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_time;

/** @brief define for quoted string le_x500Name */
#define AFW_Q_le_x500Name "le_x500Name"

/** @brief afw_utf8_t for string le_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_x500Name;

/** @brief define for quoted string le_xpathExpression */
#define AFW_Q_le_xpathExpression "le_xpathExpression"

/** @brief afw_utf8_t for string le_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_xpathExpression;

/** @brief define for quoted string le_yearMonthDuration */
#define AFW_Q_le_yearMonthDuration "le_yearMonthDuration"

/** @brief afw_utf8_t for string le_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_le_yearMonthDuration;

/** @brief define for quoted string length */
#define AFW_Q_length "length"

/** @brief afw_utf8_t for string length */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_length;

/** @brief define for quoted string length_anyURI */
#define AFW_Q_length_anyURI "length_anyURI"

/** @brief afw_utf8_t for string length_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_length_anyURI;

/** @brief define for quoted string length_array */
#define AFW_Q_length_array "length_array"

/** @brief afw_utf8_t for string length_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_length_array;

/** @brief define for quoted string length_string */
#define AFW_Q_length_string "length_string"

/** @brief afw_utf8_t for string length_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_length_string;

/** @brief define for quoted string let */
#define AFW_Q_let "let"

/** @brief afw_utf8_t for string let */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_let;

/** @brief define for quoted string libafwVersion */
#define AFW_Q_libafwVersion "libafwVersion"

/** @brief afw_utf8_t for string libafwVersion */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_libafwVersion;

/** @brief define for quoted string libafwVersionWithGitInfo */
#define AFW_Q_libafwVersionWithGitInfo "libafwVersionWithGitInfo"

/** @brief afw_utf8_t for string libafwVersionWithGitInfo */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_libafwVersionWithGitInfo;

/** @brief define for quoted string like */
#define AFW_Q_like "like"

/** @brief afw_utf8_t for string like */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_like;

/** @brief define for quoted string limit */
#define AFW_Q_limit "limit"

/** @brief afw_utf8_t for string limit */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_limit;

/** @brief define for quoted string line */
#define AFW_Q_line "line"

/** @brief afw_utf8_t for string line */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_line;

/** @brief define for quoted string load */
#define AFW_Q_load "load"

/** @brief afw_utf8_t for string load */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_load;

/** @brief define for quoted string local_object_meta_set_ids */
#define AFW_Q_local_object_meta_set_ids "local_object_meta_set_ids"

/** @brief afw_utf8_t for string local_object_meta_set_ids */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_local_object_meta_set_ids;

/** @brief define for quoted string lockId */
#define AFW_Q_lockId "lockId"

/** @brief afw_utf8_t for string lockId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lockId;

/** @brief define for quoted string log */
#define AFW_Q_log "log"

/** @brief afw_utf8_t for string log */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_log;

/** @brief define for quoted string logId */
#define AFW_Q_logId "logId"

/** @brief afw_utf8_t for string logId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_logId;

/** @brief define for quoted string logType */
#define AFW_Q_logType "logType"

/** @brief afw_utf8_t for string logType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_logType;

/** @brief define for quoted string log_id */
#define AFW_Q_log_id "log_id"

/** @brief afw_utf8_t for string log_id */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_log_id;

/** @brief define for quoted string log_type */
#define AFW_Q_log_type "log_type"

/** @brief afw_utf8_t for string log_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_log_type;

/** @brief define for quoted string logical */
#define AFW_Q_logical "logical"

/** @brief afw_utf8_t for string logical */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_logical;

/** @brief define for quoted string lt */
#define AFW_Q_lt "lt"

/** @brief afw_utf8_t for string lt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt;

/** @brief define for quoted string lt_anyURI */
#define AFW_Q_lt_anyURI "lt_anyURI"

/** @brief afw_utf8_t for string lt_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_anyURI;

/** @brief define for quoted string lt_array */
#define AFW_Q_lt_array "lt_array"

/** @brief afw_utf8_t for string lt_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_array;

/** @brief define for quoted string lt_base64Binary */
#define AFW_Q_lt_base64Binary "lt_base64Binary"

/** @brief afw_utf8_t for string lt_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_base64Binary;

/** @brief define for quoted string lt_boolean */
#define AFW_Q_lt_boolean "lt_boolean"

/** @brief afw_utf8_t for string lt_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_boolean;

/** @brief define for quoted string lt_date */
#define AFW_Q_lt_date "lt_date"

/** @brief afw_utf8_t for string lt_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_date;

/** @brief define for quoted string lt_dateTime */
#define AFW_Q_lt_dateTime "lt_dateTime"

/** @brief afw_utf8_t for string lt_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_dateTime;

/** @brief define for quoted string lt_dayTimeDuration */
#define AFW_Q_lt_dayTimeDuration "lt_dayTimeDuration"

/** @brief afw_utf8_t for string lt_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_dayTimeDuration;

/** @brief define for quoted string lt_dnsName */
#define AFW_Q_lt_dnsName "lt_dnsName"

/** @brief afw_utf8_t for string lt_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_dnsName;

/** @brief define for quoted string lt_double */
#define AFW_Q_lt_double "lt_double"

/** @brief afw_utf8_t for string lt_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_double;

/** @brief define for quoted string lt_expression */
#define AFW_Q_lt_expression "lt_expression"

/** @brief afw_utf8_t for string lt_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_expression;

/** @brief define for quoted string lt_function */
#define AFW_Q_lt_function "lt_function"

/** @brief afw_utf8_t for string lt_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_function;

/** @brief define for quoted string lt_hexBinary */
#define AFW_Q_lt_hexBinary "lt_hexBinary"

/** @brief afw_utf8_t for string lt_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_hexBinary;

/** @brief define for quoted string lt_hybrid */
#define AFW_Q_lt_hybrid "lt_hybrid"

/** @brief afw_utf8_t for string lt_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_hybrid;

/** @brief define for quoted string lt_ia5String */
#define AFW_Q_lt_ia5String "lt_ia5String"

/** @brief afw_utf8_t for string lt_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_ia5String;

/** @brief define for quoted string lt_integer */
#define AFW_Q_lt_integer "lt_integer"

/** @brief afw_utf8_t for string lt_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_integer;

/** @brief define for quoted string lt_ipAddress */
#define AFW_Q_lt_ipAddress "lt_ipAddress"

/** @brief afw_utf8_t for string lt_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_ipAddress;

/** @brief define for quoted string lt_object */
#define AFW_Q_lt_object "lt_object"

/** @brief afw_utf8_t for string lt_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_object;

/** @brief define for quoted string lt_objectId */
#define AFW_Q_lt_objectId "lt_objectId"

/** @brief afw_utf8_t for string lt_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_objectId;

/** @brief define for quoted string lt_objectPath */
#define AFW_Q_lt_objectPath "lt_objectPath"

/** @brief afw_utf8_t for string lt_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_objectPath;

/** @brief define for quoted string lt_password */
#define AFW_Q_lt_password "lt_password"

/** @brief afw_utf8_t for string lt_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_password;

/** @brief define for quoted string lt_regexp */
#define AFW_Q_lt_regexp "lt_regexp"

/** @brief afw_utf8_t for string lt_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_regexp;

/** @brief define for quoted string lt_rfc822Name */
#define AFW_Q_lt_rfc822Name "lt_rfc822Name"

/** @brief afw_utf8_t for string lt_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_rfc822Name;

/** @brief define for quoted string lt_script */
#define AFW_Q_lt_script "lt_script"

/** @brief afw_utf8_t for string lt_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_script;

/** @brief define for quoted string lt_string */
#define AFW_Q_lt_string "lt_string"

/** @brief afw_utf8_t for string lt_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_string;

/** @brief define for quoted string lt_template */
#define AFW_Q_lt_template "lt_template"

/** @brief afw_utf8_t for string lt_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_template;

/** @brief define for quoted string lt_time */
#define AFW_Q_lt_time "lt_time"

/** @brief afw_utf8_t for string lt_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_time;

/** @brief define for quoted string lt_x500Name */
#define AFW_Q_lt_x500Name "lt_x500Name"

/** @brief afw_utf8_t for string lt_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_x500Name;

/** @brief define for quoted string lt_xpathExpression */
#define AFW_Q_lt_xpathExpression "lt_xpathExpression"

/** @brief afw_utf8_t for string lt_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_xpathExpression;

/** @brief define for quoted string lt_yearMonthDuration */
#define AFW_Q_lt_yearMonthDuration "lt_yearMonthDuration"

/** @brief afw_utf8_t for string lt_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lt_yearMonthDuration;

/** @brief define for quoted string lte */
#define AFW_Q_lte "lte"

/** @brief afw_utf8_t for string lte */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_lte;

/** @brief define for quoted string maluba */
#define AFW_Q_maluba "maluba"

/** @brief afw_utf8_t for string maluba */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_maluba;

/** @brief define for quoted string manual */
#define AFW_Q_manual "manual"

/** @brief afw_utf8_t for string manual */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_manual;

/** @brief define for quoted string manualMakefile */
#define AFW_Q_manualMakefile "manualMakefile"

/** @brief afw_utf8_t for string manualMakefile */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_manualMakefile;

/** @brief define for quoted string map */
#define AFW_Q_map "map"

/** @brief afw_utf8_t for string map */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_map;

/** @brief define for quoted string mapBackObject */
#define AFW_Q_mapBackObject "mapBackObject"

/** @brief afw_utf8_t for string mapBackObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mapBackObject;

/** @brief define for quoted string mapObject */
#define AFW_Q_mapObject "mapObject"

/** @brief afw_utf8_t for string mapObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mapObject;

/** @brief define for quoted string mapped */
#define AFW_Q_mapped "mapped"

/** @brief afw_utf8_t for string mapped */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mapped;

/** @brief define for quoted string mappedAdaptorId */
#define AFW_Q_mappedAdaptorId "mappedAdaptorId"

/** @brief afw_utf8_t for string mappedAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mappedAdaptorId;

/** @brief define for quoted string mappedObject */
#define AFW_Q_mappedObject "mappedObject"

/** @brief afw_utf8_t for string mappedObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mappedObject;

/** @brief define for quoted string mappedObjectId */
#define AFW_Q_mappedObjectId "mappedObjectId"

/** @brief afw_utf8_t for string mappedObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mappedObjectId;

/** @brief define for quoted string mappedObjectType */
#define AFW_Q_mappedObjectType "mappedObjectType"

/** @brief afw_utf8_t for string mappedObjectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mappedObjectType;

/** @brief define for quoted string mappedPropertyName */
#define AFW_Q_mappedPropertyName "mappedPropertyName"

/** @brief afw_utf8_t for string mappedPropertyName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mappedPropertyName;

/** @brief define for quoted string mappedValue */
#define AFW_Q_mappedValue "mappedValue"

/** @brief afw_utf8_t for string mappedValue */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mappedValue;

/** @brief define for quoted string match */
#define AFW_Q_match "match"

/** @brief afw_utf8_t for string match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_match;

/** @brief define for quoted string match_rfc822Name */
#define AFW_Q_match_rfc822Name "match_rfc822Name"

/** @brief afw_utf8_t for string match_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_match_rfc822Name;

/** @brief define for quoted string match_x500Name */
#define AFW_Q_match_x500Name "match_x500Name"

/** @brief afw_utf8_t for string match_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_match_x500Name;

/** @brief define for quoted string max */
#define AFW_Q_max "max"

/** @brief afw_utf8_t for string max */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_max;

/** @brief define for quoted string maxConcurrent */
#define AFW_Q_maxConcurrent "maxConcurrent"

/** @brief afw_utf8_t for string maxConcurrent */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_maxConcurrent;

/** @brief define for quoted string maxLength */
#define AFW_Q_maxLength "maxLength"

/** @brief afw_utf8_t for string maxLength */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_maxLength;

/** @brief define for quoted string maxNormalLength */
#define AFW_Q_maxNormalLength "maxNormalLength"

/** @brief afw_utf8_t for string maxNormalLength */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_maxNormalLength;

/** @brief define for quoted string maxValue */
#define AFW_Q_maxValue "maxValue"

/** @brief afw_utf8_t for string maxValue */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_maxValue;

/** @brief define for quoted string max_date */
#define AFW_Q_max_date "max_date"

/** @brief afw_utf8_t for string max_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_max_date;

/** @brief define for quoted string max_dateTime */
#define AFW_Q_max_dateTime "max_dateTime"

/** @brief afw_utf8_t for string max_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_max_dateTime;

/** @brief define for quoted string max_double */
#define AFW_Q_max_double "max_double"

/** @brief afw_utf8_t for string max_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_max_double;

/** @brief define for quoted string max_integer */
#define AFW_Q_max_integer "max_integer"

/** @brief afw_utf8_t for string max_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_max_integer;

/** @brief define for quoted string max_string */
#define AFW_Q_max_string "max_string"

/** @brief afw_utf8_t for string max_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_max_string;

/** @brief define for quoted string max_time */
#define AFW_Q_max_time "max_time"

/** @brief afw_utf8_t for string max_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_max_time;

/** @brief define for quoted string maximumNumberOfParameters */
#define AFW_Q_maximumNumberOfParameters "maximumNumberOfParameters"

/** @brief afw_utf8_t for string maximumNumberOfParameters */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_maximumNumberOfParameters;

/** @brief define for quoted string mediaType */
#define AFW_Q_mediaType "mediaType"

/** @brief afw_utf8_t for string mediaType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mediaType;

/** @brief define for quoted string memberName */
#define AFW_Q_memberName "memberName"

/** @brief afw_utf8_t for string memberName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_memberName;

/** @brief define for quoted string message */
#define AFW_Q_message "message"

/** @brief afw_utf8_t for string message */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_message;

/** @brief define for quoted string meta */
#define AFW_Q_meta "meta"

/** @brief afw_utf8_t for string meta */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_meta;

/** @brief define for quoted string metaFull */
#define AFW_Q_metaFull "metaFull"

/** @brief afw_utf8_t for string metaFull */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_metaFull;

/** @brief define for quoted string metaLimited */
#define AFW_Q_metaLimited "metaLimited"

/** @brief afw_utf8_t for string metaLimited */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_metaLimited;

/** @brief define for quoted string metas */
#define AFW_Q_metas "metas"

/** @brief afw_utf8_t for string metas */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_metas;

/** @brief define for quoted string method */
#define AFW_Q_method "method"

/** @brief afw_utf8_t for string method */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_method;

/** @brief define for quoted string metrics */
#define AFW_Q_metrics "metrics"

/** @brief afw_utf8_t for string metrics */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_metrics;

/** @brief define for quoted string min */
#define AFW_Q_min "min"

/** @brief afw_utf8_t for string min */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_min;

/** @brief define for quoted string minArgs */
#define AFW_Q_minArgs "minArgs"

/** @brief afw_utf8_t for string minArgs */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_minArgs;

/** @brief define for quoted string minLength */
#define AFW_Q_minLength "minLength"

/** @brief afw_utf8_t for string minLength */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_minLength;

/** @brief define for quoted string minValue */
#define AFW_Q_minValue "minValue"

/** @brief afw_utf8_t for string minValue */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_minValue;

/** @brief define for quoted string min_date */
#define AFW_Q_min_date "min_date"

/** @brief afw_utf8_t for string min_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_min_date;

/** @brief define for quoted string min_dateTime */
#define AFW_Q_min_dateTime "min_dateTime"

/** @brief afw_utf8_t for string min_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_min_dateTime;

/** @brief define for quoted string min_double */
#define AFW_Q_min_double "min_double"

/** @brief afw_utf8_t for string min_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_min_double;

/** @brief define for quoted string min_integer */
#define AFW_Q_min_integer "min_integer"

/** @brief afw_utf8_t for string min_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_min_integer;

/** @brief define for quoted string min_string */
#define AFW_Q_min_string "min_string"

/** @brief afw_utf8_t for string min_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_min_string;

/** @brief define for quoted string min_time */
#define AFW_Q_min_time "min_time"

/** @brief afw_utf8_t for string min_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_min_time;

/** @brief define for quoted string miscellaneous */
#define AFW_Q_miscellaneous "miscellaneous"

/** @brief afw_utf8_t for string miscellaneous */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_miscellaneous;

/** @brief define for quoted string mod */
#define AFW_Q_mod "mod"

/** @brief afw_utf8_t for string mod */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mod;

/** @brief define for quoted string mod_integer */
#define AFW_Q_mod_integer "mod_integer"

/** @brief afw_utf8_t for string mod_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mod_integer;

/** @brief define for quoted string mode */
#define AFW_Q_mode "mode"

/** @brief afw_utf8_t for string mode */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_mode;

/** @brief define for quoted string modeId */
#define AFW_Q_modeId "modeId"

/** @brief afw_utf8_t for string modeId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modeId;

/** @brief define for quoted string model */
#define AFW_Q_model "model"

/** @brief afw_utf8_t for string model */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model;

/** @brief define for quoted string modelAddObject */
#define AFW_Q_modelAddObject "modelAddObject"

/** @brief afw_utf8_t for string modelAddObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelAddObject;

/** @brief define for quoted string modelDeleteObject */
#define AFW_Q_modelDeleteObject "modelDeleteObject"

/** @brief afw_utf8_t for string modelDeleteObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelDeleteObject;

/** @brief define for quoted string modelGetObject */
#define AFW_Q_modelGetObject "modelGetObject"

/** @brief afw_utf8_t for string modelGetObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelGetObject;

/** @brief define for quoted string modelGetProperty */
#define AFW_Q_modelGetProperty "modelGetProperty"

/** @brief afw_utf8_t for string modelGetProperty */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelGetProperty;

/** @brief define for quoted string modelId */
#define AFW_Q_modelId "modelId"

/** @brief afw_utf8_t for string modelId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelId;

/** @brief define for quoted string modelInitialObjectId */
#define AFW_Q_modelInitialObjectId "modelInitialObjectId"

/** @brief afw_utf8_t for string modelInitialObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelInitialObjectId;

/** @brief define for quoted string modelLocationAdaptorId */
#define AFW_Q_modelLocationAdaptorId "modelLocationAdaptorId"

/** @brief afw_utf8_t for string modelLocationAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelLocationAdaptorId;

/** @brief define for quoted string modelModifyObject */
#define AFW_Q_modelModifyObject "modelModifyObject"

/** @brief afw_utf8_t for string modelModifyObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelModifyObject;

/** @brief define for quoted string modelReplaceObject */
#define AFW_Q_modelReplaceObject "modelReplaceObject"

/** @brief afw_utf8_t for string modelReplaceObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelReplaceObject;

/** @brief define for quoted string modelRetrieveObjects */
#define AFW_Q_modelRetrieveObjects "modelRetrieveObjects"

/** @brief afw_utf8_t for string modelRetrieveObjects */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelRetrieveObjects;

/** @brief define for quoted string modelSetProperty */
#define AFW_Q_modelSetProperty "modelSetProperty"

/** @brief afw_utf8_t for string modelSetProperty */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modelSetProperty;

/** @brief define for quoted string model_adaptor */
#define AFW_Q_model_adaptor "model_adaptor"

/** @brief afw_utf8_t for string model_adaptor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_adaptor;

/** @brief define for quoted string model_default_add_object_action */
#define AFW_Q_model_default_add_object_action "model_default_add_object_action"

/** @brief afw_utf8_t for string model_default_add_object_action */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_default_add_object_action;

/** @brief define for quoted string model_default_delete_object_action */
#define AFW_Q_model_default_delete_object_action "model_default_delete_object_action"

/** @brief afw_utf8_t for string model_default_delete_object_action */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_default_delete_object_action;

/** @brief define for quoted string model_default_modify_object_action */
#define AFW_Q_model_default_modify_object_action "model_default_modify_object_action"

/** @brief afw_utf8_t for string model_default_modify_object_action */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_default_modify_object_action;

/** @brief define for quoted string model_default_replace_object_action */
#define AFW_Q_model_default_replace_object_action "model_default_replace_object_action"

/** @brief afw_utf8_t for string model_default_replace_object_action */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_default_replace_object_action;

/** @brief define for quoted string model_mapBackObject_signature */
#define AFW_Q_model_mapBackObject_signature "model_mapBackObject_signature"

/** @brief afw_utf8_t for string model_mapBackObject_signature */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_mapBackObject_signature;

/** @brief define for quoted string model_mapObject_signature */
#define AFW_Q_model_mapObject_signature "model_mapObject_signature"

/** @brief afw_utf8_t for string model_mapObject_signature */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_mapObject_signature;

/** @brief define for quoted string model_returnObject_signature */
#define AFW_Q_model_returnObject_signature "model_returnObject_signature"

/** @brief afw_utf8_t for string model_returnObject_signature */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_model_returnObject_signature;

/** @brief define for quoted string modify */
#define AFW_Q_modify "modify"

/** @brief afw_utf8_t for string modify */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modify;

/** @brief define for quoted string modifyEntries */
#define AFW_Q_modifyEntries "modifyEntries"

/** @brief afw_utf8_t for string modifyEntries */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modifyEntries;

/** @brief define for quoted string modifyObjectCount */
#define AFW_Q_modifyObjectCount "modifyObjectCount"

/** @brief afw_utf8_t for string modifyObjectCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modifyObjectCount;

/** @brief define for quoted string modify_object */
#define AFW_Q_modify_object "modify_object"

/** @brief afw_utf8_t for string modify_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modify_object;

/** @brief define for quoted string modify_object_with_uri */
#define AFW_Q_modify_object_with_uri "modify_object_with_uri"

/** @brief afw_utf8_t for string modify_object_with_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modify_object_with_uri;

/** @brief define for quoted string modulePath */
#define AFW_Q_modulePath "modulePath"

/** @brief afw_utf8_t for string modulePath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_modulePath;

/** @brief define for quoted string module_path */
#define AFW_Q_module_path "module_path"

/** @brief afw_utf8_t for string module_path */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_module_path;

/** @brief define for quoted string multiply */
#define AFW_Q_multiply "multiply"

/** @brief afw_utf8_t for string multiply */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_multiply;

/** @brief define for quoted string multiply_double */
#define AFW_Q_multiply_double "multiply_double"

/** @brief afw_utf8_t for string multiply_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_multiply_double;

/** @brief define for quoted string multiply_integer */
#define AFW_Q_multiply_integer "multiply_integer"

/** @brief afw_utf8_t for string multiply_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_multiply_integer;

/** @brief define for quoted string n_of */
#define AFW_Q_n_of "n_of"

/** @brief afw_utf8_t for string n_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_n_of;

/** @brief define for quoted string name */
#define AFW_Q_name "name"

/** @brief afw_utf8_t for string name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_name;

/** @brief define for quoted string ne */
#define AFW_Q_ne "ne"

/** @brief afw_utf8_t for string ne */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne;

/** @brief define for quoted string ne_anyURI */
#define AFW_Q_ne_anyURI "ne_anyURI"

/** @brief afw_utf8_t for string ne_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_anyURI;

/** @brief define for quoted string ne_array */
#define AFW_Q_ne_array "ne_array"

/** @brief afw_utf8_t for string ne_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_array;

/** @brief define for quoted string ne_base64Binary */
#define AFW_Q_ne_base64Binary "ne_base64Binary"

/** @brief afw_utf8_t for string ne_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_base64Binary;

/** @brief define for quoted string ne_boolean */
#define AFW_Q_ne_boolean "ne_boolean"

/** @brief afw_utf8_t for string ne_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_boolean;

/** @brief define for quoted string ne_date */
#define AFW_Q_ne_date "ne_date"

/** @brief afw_utf8_t for string ne_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_date;

/** @brief define for quoted string ne_dateTime */
#define AFW_Q_ne_dateTime "ne_dateTime"

/** @brief afw_utf8_t for string ne_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_dateTime;

/** @brief define for quoted string ne_dayTimeDuration */
#define AFW_Q_ne_dayTimeDuration "ne_dayTimeDuration"

/** @brief afw_utf8_t for string ne_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_dayTimeDuration;

/** @brief define for quoted string ne_dnsName */
#define AFW_Q_ne_dnsName "ne_dnsName"

/** @brief afw_utf8_t for string ne_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_dnsName;

/** @brief define for quoted string ne_double */
#define AFW_Q_ne_double "ne_double"

/** @brief afw_utf8_t for string ne_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_double;

/** @brief define for quoted string ne_expression */
#define AFW_Q_ne_expression "ne_expression"

/** @brief afw_utf8_t for string ne_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_expression;

/** @brief define for quoted string ne_function */
#define AFW_Q_ne_function "ne_function"

/** @brief afw_utf8_t for string ne_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_function;

/** @brief define for quoted string ne_hexBinary */
#define AFW_Q_ne_hexBinary "ne_hexBinary"

/** @brief afw_utf8_t for string ne_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_hexBinary;

/** @brief define for quoted string ne_hybrid */
#define AFW_Q_ne_hybrid "ne_hybrid"

/** @brief afw_utf8_t for string ne_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_hybrid;

/** @brief define for quoted string ne_ia5String */
#define AFW_Q_ne_ia5String "ne_ia5String"

/** @brief afw_utf8_t for string ne_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_ia5String;

/** @brief define for quoted string ne_integer */
#define AFW_Q_ne_integer "ne_integer"

/** @brief afw_utf8_t for string ne_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_integer;

/** @brief define for quoted string ne_ipAddress */
#define AFW_Q_ne_ipAddress "ne_ipAddress"

/** @brief afw_utf8_t for string ne_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_ipAddress;

/** @brief define for quoted string ne_object */
#define AFW_Q_ne_object "ne_object"

/** @brief afw_utf8_t for string ne_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_object;

/** @brief define for quoted string ne_objectId */
#define AFW_Q_ne_objectId "ne_objectId"

/** @brief afw_utf8_t for string ne_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_objectId;

/** @brief define for quoted string ne_objectPath */
#define AFW_Q_ne_objectPath "ne_objectPath"

/** @brief afw_utf8_t for string ne_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_objectPath;

/** @brief define for quoted string ne_password */
#define AFW_Q_ne_password "ne_password"

/** @brief afw_utf8_t for string ne_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_password;

/** @brief define for quoted string ne_regexp */
#define AFW_Q_ne_regexp "ne_regexp"

/** @brief afw_utf8_t for string ne_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_regexp;

/** @brief define for quoted string ne_rfc822Name */
#define AFW_Q_ne_rfc822Name "ne_rfc822Name"

/** @brief afw_utf8_t for string ne_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_rfc822Name;

/** @brief define for quoted string ne_script */
#define AFW_Q_ne_script "ne_script"

/** @brief afw_utf8_t for string ne_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_script;

/** @brief define for quoted string ne_string */
#define AFW_Q_ne_string "ne_string"

/** @brief afw_utf8_t for string ne_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_string;

/** @brief define for quoted string ne_template */
#define AFW_Q_ne_template "ne_template"

/** @brief afw_utf8_t for string ne_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_template;

/** @brief define for quoted string ne_time */
#define AFW_Q_ne_time "ne_time"

/** @brief afw_utf8_t for string ne_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_time;

/** @brief define for quoted string ne_x500Name */
#define AFW_Q_ne_x500Name "ne_x500Name"

/** @brief afw_utf8_t for string ne_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_x500Name;

/** @brief define for quoted string ne_xpathExpression */
#define AFW_Q_ne_xpathExpression "ne_xpathExpression"

/** @brief afw_utf8_t for string ne_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_xpathExpression;

/** @brief define for quoted string ne_yearMonthDuration */
#define AFW_Q_ne_yearMonthDuration "ne_yearMonthDuration"

/** @brief afw_utf8_t for string ne_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ne_yearMonthDuration;

/** @brief define for quoted string negative */
#define AFW_Q_negative "negative"

/** @brief afw_utf8_t for string negative */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_negative;

/** @brief define for quoted string negative_double */
#define AFW_Q_negative_double "negative_double"

/** @brief afw_utf8_t for string negative_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_negative_double;

/** @brief define for quoted string negative_integer */
#define AFW_Q_negative_integer "negative_integer"

/** @brief afw_utf8_t for string negative_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_negative_integer;

/** @brief define for quoted string nex */
#define AFW_Q_nex "nex"

/** @brief afw_utf8_t for string nex */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex;

/** @brief define for quoted string nex_anyURI */
#define AFW_Q_nex_anyURI "nex_anyURI"

/** @brief afw_utf8_t for string nex_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_anyURI;

/** @brief define for quoted string nex_array */
#define AFW_Q_nex_array "nex_array"

/** @brief afw_utf8_t for string nex_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_array;

/** @brief define for quoted string nex_base64Binary */
#define AFW_Q_nex_base64Binary "nex_base64Binary"

/** @brief afw_utf8_t for string nex_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_base64Binary;

/** @brief define for quoted string nex_boolean */
#define AFW_Q_nex_boolean "nex_boolean"

/** @brief afw_utf8_t for string nex_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_boolean;

/** @brief define for quoted string nex_date */
#define AFW_Q_nex_date "nex_date"

/** @brief afw_utf8_t for string nex_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_date;

/** @brief define for quoted string nex_dateTime */
#define AFW_Q_nex_dateTime "nex_dateTime"

/** @brief afw_utf8_t for string nex_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_dateTime;

/** @brief define for quoted string nex_dayTimeDuration */
#define AFW_Q_nex_dayTimeDuration "nex_dayTimeDuration"

/** @brief afw_utf8_t for string nex_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_dayTimeDuration;

/** @brief define for quoted string nex_dnsName */
#define AFW_Q_nex_dnsName "nex_dnsName"

/** @brief afw_utf8_t for string nex_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_dnsName;

/** @brief define for quoted string nex_double */
#define AFW_Q_nex_double "nex_double"

/** @brief afw_utf8_t for string nex_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_double;

/** @brief define for quoted string nex_expression */
#define AFW_Q_nex_expression "nex_expression"

/** @brief afw_utf8_t for string nex_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_expression;

/** @brief define for quoted string nex_function */
#define AFW_Q_nex_function "nex_function"

/** @brief afw_utf8_t for string nex_function */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_function;

/** @brief define for quoted string nex_hexBinary */
#define AFW_Q_nex_hexBinary "nex_hexBinary"

/** @brief afw_utf8_t for string nex_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_hexBinary;

/** @brief define for quoted string nex_hybrid */
#define AFW_Q_nex_hybrid "nex_hybrid"

/** @brief afw_utf8_t for string nex_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_hybrid;

/** @brief define for quoted string nex_ia5String */
#define AFW_Q_nex_ia5String "nex_ia5String"

/** @brief afw_utf8_t for string nex_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_ia5String;

/** @brief define for quoted string nex_integer */
#define AFW_Q_nex_integer "nex_integer"

/** @brief afw_utf8_t for string nex_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_integer;

/** @brief define for quoted string nex_ipAddress */
#define AFW_Q_nex_ipAddress "nex_ipAddress"

/** @brief afw_utf8_t for string nex_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_ipAddress;

/** @brief define for quoted string nex_object */
#define AFW_Q_nex_object "nex_object"

/** @brief afw_utf8_t for string nex_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_object;

/** @brief define for quoted string nex_objectId */
#define AFW_Q_nex_objectId "nex_objectId"

/** @brief afw_utf8_t for string nex_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_objectId;

/** @brief define for quoted string nex_objectPath */
#define AFW_Q_nex_objectPath "nex_objectPath"

/** @brief afw_utf8_t for string nex_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_objectPath;

/** @brief define for quoted string nex_password */
#define AFW_Q_nex_password "nex_password"

/** @brief afw_utf8_t for string nex_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_password;

/** @brief define for quoted string nex_regexp */
#define AFW_Q_nex_regexp "nex_regexp"

/** @brief afw_utf8_t for string nex_regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_regexp;

/** @brief define for quoted string nex_rfc822Name */
#define AFW_Q_nex_rfc822Name "nex_rfc822Name"

/** @brief afw_utf8_t for string nex_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_rfc822Name;

/** @brief define for quoted string nex_script */
#define AFW_Q_nex_script "nex_script"

/** @brief afw_utf8_t for string nex_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_script;

/** @brief define for quoted string nex_string */
#define AFW_Q_nex_string "nex_string"

/** @brief afw_utf8_t for string nex_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_string;

/** @brief define for quoted string nex_template */
#define AFW_Q_nex_template "nex_template"

/** @brief afw_utf8_t for string nex_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_template;

/** @brief define for quoted string nex_time */
#define AFW_Q_nex_time "nex_time"

/** @brief afw_utf8_t for string nex_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_time;

/** @brief define for quoted string nex_x500Name */
#define AFW_Q_nex_x500Name "nex_x500Name"

/** @brief afw_utf8_t for string nex_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_x500Name;

/** @brief define for quoted string nex_xpathExpression */
#define AFW_Q_nex_xpathExpression "nex_xpathExpression"

/** @brief afw_utf8_t for string nex_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_xpathExpression;

/** @brief define for quoted string nex_yearMonthDuration */
#define AFW_Q_nex_yearMonthDuration "nex_yearMonthDuration"

/** @brief afw_utf8_t for string nex_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nex_yearMonthDuration;

/** @brief define for quoted string none */
#define AFW_Q_none "none"

/** @brief afw_utf8_t for string none */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_none;

/** @brief define for quoted string normalize */
#define AFW_Q_normalize "normalize"

/** @brief afw_utf8_t for string normalize */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_normalize;

/** @brief define for quoted string normalize_space */
#define AFW_Q_normalize_space "normalize_space"

/** @brief afw_utf8_t for string normalize_space */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_normalize_space;

/** @brief define for quoted string normalize_space_string */
#define AFW_Q_normalize_space_string "normalize_space_string"

/** @brief afw_utf8_t for string normalize_space_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_normalize_space_string;

/** @brief define for quoted string normalize_to_lower_case */
#define AFW_Q_normalize_to_lower_case "normalize_to_lower_case"

/** @brief afw_utf8_t for string normalize_to_lower_case */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_normalize_to_lower_case;

/** @brief define for quoted string normalize_to_lower_case_string */
#define AFW_Q_normalize_to_lower_case_string "normalize_to_lower_case_string"

/** @brief afw_utf8_t for string normalize_to_lower_case_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_normalize_to_lower_case_string;

/** @brief define for quoted string normalizedPath */
#define AFW_Q_normalizedPath "normalizedPath"

/** @brief afw_utf8_t for string normalizedPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_normalizedPath;

/** @brief define for quoted string normalizedURI */
#define AFW_Q_normalizedURI "normalizedURI"

/** @brief afw_utf8_t for string normalizedURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_normalizedURI;

/** @brief define for quoted string not */
#define AFW_Q_not "not"

/** @brief afw_utf8_t for string not */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_not;

/** @brief define for quoted string notApplicable */
#define AFW_Q_notApplicable "notApplicable"

/** @brief afw_utf8_t for string notApplicable */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_notApplicable;

/** @brief define for quoted string notice */
#define AFW_Q_notice "notice"

/** @brief afw_utf8_t for string notice */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_notice;

/** @brief define for quoted string now_local */
#define AFW_Q_now_local "now_local"

/** @brief afw_utf8_t for string now_local */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_now_local;

/** @brief define for quoted string now_utc */
#define AFW_Q_now_utc "now_utc"

/** @brief afw_utf8_t for string now_utc */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_now_utc;

/** @brief define for quoted string null */
#define AFW_Q_null "null"

/** @brief afw_utf8_t for string null */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_null;

/** @brief define for quoted string null_terminated_array_of_internal */
#define AFW_Q_null_terminated_array_of_internal "null_terminated_array_of_internal"

/** @brief afw_utf8_t for string null_terminated_array_of_internal */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_null_terminated_array_of_internal;

/** @brief define for quoted string null_terminated_array_of_objects */
#define AFW_Q_null_terminated_array_of_objects "null_terminated_array_of_objects"

/** @brief afw_utf8_t for string null_terminated_array_of_objects */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_null_terminated_array_of_objects;

/** @brief define for quoted string null_terminated_array_of_pointers */
#define AFW_Q_null_terminated_array_of_pointers "null_terminated_array_of_pointers"

/** @brief afw_utf8_t for string null_terminated_array_of_pointers */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_null_terminated_array_of_pointers;

/** @brief define for quoted string null_terminated_array_of_utf8_z_key_value_pair_objects */
#define AFW_Q_null_terminated_array_of_utf8_z_key_value_pair_objects "null_terminated_array_of_utf8_z_key_value_pair_objects"

/** @brief afw_utf8_t for string null_terminated_array_of_utf8_z_key_value_pair_objects */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_null_terminated_array_of_utf8_z_key_value_pair_objects;

/** @brief define for quoted string null_terminated_array_of_values */
#define AFW_Q_null_terminated_array_of_values "null_terminated_array_of_values"

/** @brief afw_utf8_t for string null_terminated_array_of_values */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_null_terminated_array_of_values;

/** @brief define for quoted string nullish_coalescing */
#define AFW_Q_nullish_coalescing "nullish_coalescing"

/** @brief afw_utf8_t for string nullish_coalescing */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_nullish_coalescing;

/** @brief define for quoted string num_indexed */
#define AFW_Q_num_indexed "num_indexed"

/** @brief afw_utf8_t for string num_indexed */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_num_indexed;

/** @brief define for quoted string num_processed */
#define AFW_Q_num_processed "num_processed"

/** @brief afw_utf8_t for string num_processed */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_num_processed;

/** @brief define for quoted string number */
#define AFW_Q_number "number"

/** @brief afw_utf8_t for string number */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_number;

/** @brief define for quoted string numberOfRequiredParameters */
#define AFW_Q_numberOfRequiredParameters "numberOfRequiredParameters"

/** @brief afw_utf8_t for string numberOfRequiredParameters */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_numberOfRequiredParameters;

/** @brief define for quoted string numeric */
#define AFW_Q_numeric "numeric"

/** @brief afw_utf8_t for string numeric */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_numeric;

/** @brief define for quoted string object */
#define AFW_Q_object "object"

/** @brief afw_utf8_t for string object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_object;

/** @brief define for quoted string objectId */
#define AFW_Q_objectId "objectId"

/** @brief afw_utf8_t for string objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_objectId;

/** @brief define for quoted string objectIdPropertyName */
#define AFW_Q_objectIdPropertyName "objectIdPropertyName"

/** @brief afw_utf8_t for string objectIdPropertyName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_objectIdPropertyName;

/** @brief define for quoted string objectPath */
#define AFW_Q_objectPath "objectPath"

/** @brief afw_utf8_t for string objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_objectPath;

/** @brief define for quoted string objectType */
#define AFW_Q_objectType "objectType"

/** @brief afw_utf8_t for string objectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_objectType;

/** @brief define for quoted string objectTypeObject */
#define AFW_Q_objectTypeObject "objectTypeObject"

/** @brief afw_utf8_t for string objectTypeObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_objectTypeObject;

/** @brief define for quoted string objectTypes */
#define AFW_Q_objectTypes "objectTypes"

/** @brief afw_utf8_t for string objectTypes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_objectTypes;

/** @brief define for quoted string obligations */
#define AFW_Q_obligations "obligations"

/** @brief afw_utf8_t for string obligations */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_obligations;

/** @brief define for quoted string octet */
#define AFW_Q_octet "octet"

/** @brief afw_utf8_t for string octet */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_octet;

/** @brief define for quoted string of */
#define AFW_Q_of "of"

/** @brief afw_utf8_t for string of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_of;

/** @brief define for quoted string offset */
#define AFW_Q_offset "offset"

/** @brief afw_utf8_t for string offset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_offset;

/** @brief define for quoted string onAddObject */
#define AFW_Q_onAddObject "onAddObject"

/** @brief afw_utf8_t for string onAddObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onAddObject;

/** @brief define for quoted string onApplicationStartupComplete */
#define AFW_Q_onApplicationStartupComplete "onApplicationStartupComplete"

/** @brief afw_utf8_t for string onApplicationStartupComplete */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onApplicationStartupComplete;

/** @brief define for quoted string onDeleteObject */
#define AFW_Q_onDeleteObject "onDeleteObject"

/** @brief afw_utf8_t for string onDeleteObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onDeleteObject;

/** @brief define for quoted string onGetInitialObjectId */
#define AFW_Q_onGetInitialObjectId "onGetInitialObjectId"

/** @brief afw_utf8_t for string onGetInitialObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onGetInitialObjectId;

/** @brief define for quoted string onGetInitialValue */
#define AFW_Q_onGetInitialValue "onGetInitialValue"

/** @brief afw_utf8_t for string onGetInitialValue */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onGetInitialValue;

/** @brief define for quoted string onGetObject */
#define AFW_Q_onGetObject "onGetObject"

/** @brief afw_utf8_t for string onGetObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onGetObject;

/** @brief define for quoted string onGetProperty */
#define AFW_Q_onGetProperty "onGetProperty"

/** @brief afw_utf8_t for string onGetProperty */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onGetProperty;

/** @brief define for quoted string onGetValueCFunctionName */
#define AFW_Q_onGetValueCFunctionName "onGetValueCFunctionName"

/** @brief afw_utf8_t for string onGetValueCFunctionName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onGetValueCFunctionName;

/** @brief define for quoted string onModifyObject */
#define AFW_Q_onModifyObject "onModifyObject"

/** @brief afw_utf8_t for string onModifyObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onModifyObject;

/** @brief define for quoted string onReplaceObject */
#define AFW_Q_onReplaceObject "onReplaceObject"

/** @brief afw_utf8_t for string onReplaceObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onReplaceObject;

/** @brief define for quoted string onRetrieveObjects */
#define AFW_Q_onRetrieveObjects "onRetrieveObjects"

/** @brief afw_utf8_t for string onRetrieveObjects */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onRetrieveObjects;

/** @brief define for quoted string onSetProperty */
#define AFW_Q_onSetProperty "onSetProperty"

/** @brief afw_utf8_t for string onSetProperty */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_onSetProperty;

/** @brief define for quoted string one_and_only */
#define AFW_Q_one_and_only "one_and_only"

/** @brief afw_utf8_t for string one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only;

/** @brief define for quoted string one_and_only_anyURI */
#define AFW_Q_one_and_only_anyURI "one_and_only_anyURI"

/** @brief afw_utf8_t for string one_and_only_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_anyURI;

/** @brief define for quoted string one_and_only_base64Binary */
#define AFW_Q_one_and_only_base64Binary "one_and_only_base64Binary"

/** @brief afw_utf8_t for string one_and_only_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_base64Binary;

/** @brief define for quoted string one_and_only_boolean */
#define AFW_Q_one_and_only_boolean "one_and_only_boolean"

/** @brief afw_utf8_t for string one_and_only_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_boolean;

/** @brief define for quoted string one_and_only_date */
#define AFW_Q_one_and_only_date "one_and_only_date"

/** @brief afw_utf8_t for string one_and_only_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_date;

/** @brief define for quoted string one_and_only_dateTime */
#define AFW_Q_one_and_only_dateTime "one_and_only_dateTime"

/** @brief afw_utf8_t for string one_and_only_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_dateTime;

/** @brief define for quoted string one_and_only_dayTimeDuration */
#define AFW_Q_one_and_only_dayTimeDuration "one_and_only_dayTimeDuration"

/** @brief afw_utf8_t for string one_and_only_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_dayTimeDuration;

/** @brief define for quoted string one_and_only_dnsName */
#define AFW_Q_one_and_only_dnsName "one_and_only_dnsName"

/** @brief afw_utf8_t for string one_and_only_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_dnsName;

/** @brief define for quoted string one_and_only_double */
#define AFW_Q_one_and_only_double "one_and_only_double"

/** @brief afw_utf8_t for string one_and_only_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_double;

/** @brief define for quoted string one_and_only_hexBinary */
#define AFW_Q_one_and_only_hexBinary "one_and_only_hexBinary"

/** @brief afw_utf8_t for string one_and_only_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_hexBinary;

/** @brief define for quoted string one_and_only_integer */
#define AFW_Q_one_and_only_integer "one_and_only_integer"

/** @brief afw_utf8_t for string one_and_only_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_integer;

/** @brief define for quoted string one_and_only_ipAddress */
#define AFW_Q_one_and_only_ipAddress "one_and_only_ipAddress"

/** @brief afw_utf8_t for string one_and_only_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_ipAddress;

/** @brief define for quoted string one_and_only_rfc822Name */
#define AFW_Q_one_and_only_rfc822Name "one_and_only_rfc822Name"

/** @brief afw_utf8_t for string one_and_only_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_rfc822Name;

/** @brief define for quoted string one_and_only_string */
#define AFW_Q_one_and_only_string "one_and_only_string"

/** @brief afw_utf8_t for string one_and_only_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_string;

/** @brief define for quoted string one_and_only_time */
#define AFW_Q_one_and_only_time "one_and_only_time"

/** @brief afw_utf8_t for string one_and_only_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_time;

/** @brief define for quoted string one_and_only_x500Name */
#define AFW_Q_one_and_only_x500Name "one_and_only_x500Name"

/** @brief afw_utf8_t for string one_and_only_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_x500Name;

/** @brief define for quoted string one_and_only_yearMonthDuration */
#define AFW_Q_one_and_only_yearMonthDuration "one_and_only_yearMonthDuration"

/** @brief afw_utf8_t for string one_and_only_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_one_and_only_yearMonthDuration;

/** @brief define for quoted string op */
#define AFW_Q_op "op"

/** @brief afw_utf8_t for string op */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_op;

/** @brief define for quoted string open_file */
#define AFW_Q_open_file "open_file"

/** @brief afw_utf8_t for string open_file */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_open_file;

/** @brief define for quoted string open_response */
#define AFW_Q_open_response "open_response"

/** @brief afw_utf8_t for string open_response */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_open_response;

/** @brief define for quoted string open_uri */
#define AFW_Q_open_uri "open_uri"

/** @brief afw_utf8_t for string open_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_open_uri;

/** @brief define for quoted string option */
#define AFW_Q_option "option"

/** @brief afw_utf8_t for string option */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_option;

/** @brief define for quoted string optionLogCons */
#define AFW_Q_optionLogCons "optionLogCons"

/** @brief afw_utf8_t for string optionLogCons */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionLogCons;

/** @brief define for quoted string optionLogNoDelay */
#define AFW_Q_optionLogNoDelay "optionLogNoDelay"

/** @brief afw_utf8_t for string optionLogNoDelay */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionLogNoDelay;

/** @brief define for quoted string optionLogNoWait */
#define AFW_Q_optionLogNoWait "optionLogNoWait"

/** @brief afw_utf8_t for string optionLogNoWait */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionLogNoWait;

/** @brief define for quoted string optionLogODelay */
#define AFW_Q_optionLogODelay "optionLogODelay"

/** @brief afw_utf8_t for string optionLogODelay */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionLogODelay;

/** @brief define for quoted string optionLogPError */
#define AFW_Q_optionLogPError "optionLogPError"

/** @brief afw_utf8_t for string optionLogPError */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionLogPError;

/** @brief define for quoted string optionLogPid */
#define AFW_Q_optionLogPid "optionLogPid"

/** @brief afw_utf8_t for string optionLogPid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionLogPid;

/** @brief define for quoted string optional */
#define AFW_Q_optional "optional"

/** @brief afw_utf8_t for string optional */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optional;

/** @brief define for quoted string optionalChoiceDefault */
#define AFW_Q_optionalChoiceDefault "optionalChoiceDefault"

/** @brief afw_utf8_t for string optionalChoiceDefault */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionalChoiceDefault;

/** @brief define for quoted string optional_chaining */
#define AFW_Q_optional_chaining "optional_chaining"

/** @brief afw_utf8_t for string optional_chaining */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optional_chaining;

/** @brief define for quoted string options */
#define AFW_Q_options "options"

/** @brief afw_utf8_t for string options */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_options;

/** @brief define for quoted string optionsObject */
#define AFW_Q_optionsObject "optionsObject"

/** @brief afw_utf8_t for string optionsObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_optionsObject;

/** @brief define for quoted string or */
#define AFW_Q_or "or"

/** @brief afw_utf8_t for string or */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_or;

/** @brief define for quoted string origin */
#define AFW_Q_origin "origin"

/** @brief afw_utf8_t for string origin */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_origin;

/** @brief define for quoted string originURI */
#define AFW_Q_originURI "originURI"

/** @brief afw_utf8_t for string originURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originURI;

/** @brief define for quoted string originalAuthority */
#define AFW_Q_originalAuthority "originalAuthority"

/** @brief afw_utf8_t for string originalAuthority */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalAuthority;

/** @brief define for quoted string originalFragment */
#define AFW_Q_originalFragment "originalFragment"

/** @brief afw_utf8_t for string originalFragment */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalFragment;

/** @brief define for quoted string originalHierPart */
#define AFW_Q_originalHierPart "originalHierPart"

/** @brief afw_utf8_t for string originalHierPart */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalHierPart;

/** @brief define for quoted string originalHost */
#define AFW_Q_originalHost "originalHost"

/** @brief afw_utf8_t for string originalHost */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalHost;

/** @brief define for quoted string originalPath */
#define AFW_Q_originalPath "originalPath"

/** @brief afw_utf8_t for string originalPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalPath;

/** @brief define for quoted string originalQuery */
#define AFW_Q_originalQuery "originalQuery"

/** @brief afw_utf8_t for string originalQuery */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalQuery;

/** @brief define for quoted string originalURI */
#define AFW_Q_originalURI "originalURI"

/** @brief afw_utf8_t for string originalURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalURI;

/** @brief define for quoted string originalUserinfo */
#define AFW_Q_originalUserinfo "originalUserinfo"

/** @brief afw_utf8_t for string originalUserinfo */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_originalUserinfo;

/** @brief define for quoted string os */
#define AFW_Q_os "os"

/** @brief afw_utf8_t for string os */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_os;

/** @brief define for quoted string otherProperties */
#define AFW_Q_otherProperties "otherProperties"

/** @brief afw_utf8_t for string otherProperties */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_otherProperties;

/** @brief define for quoted string out */
#define AFW_Q_out "out"

/** @brief afw_utf8_t for string out */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_out;

/** @brief define for quoted string own */
#define AFW_Q_own "own"

/** @brief afw_utf8_t for string own */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_own;

/** @brief define for quoted string parameter */
#define AFW_Q_parameter "parameter"

/** @brief afw_utf8_t for string parameter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parameter;

/** @brief define for quoted string parameter_number */
#define AFW_Q_parameter_number "parameter_number"

/** @brief afw_utf8_t for string parameter_number */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parameter_number;

/** @brief define for quoted string parameters */
#define AFW_Q_parameters "parameters"

/** @brief afw_utf8_t for string parameters */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parameters;

/** @brief define for quoted string parentPaths */
#define AFW_Q_parentPaths "parentPaths"

/** @brief afw_utf8_t for string parentPaths */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parentPaths;

/** @brief define for quoted string parenthesized_expression */
#define AFW_Q_parenthesized_expression "parenthesized_expression"

/** @brief afw_utf8_t for string parenthesized_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parenthesized_expression;

/** @brief define for quoted string parse_uri */
#define AFW_Q_parse_uri "parse_uri"

/** @brief afw_utf8_t for string parse_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parse_uri;

/** @brief define for quoted string parserColumnNumber */
#define AFW_Q_parserColumnNumber "parserColumnNumber"

/** @brief afw_utf8_t for string parserColumnNumber */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parserColumnNumber;

/** @brief define for quoted string parserCursor */
#define AFW_Q_parserCursor "parserCursor"

/** @brief afw_utf8_t for string parserCursor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parserCursor;

/** @brief define for quoted string parserLineNumber */
#define AFW_Q_parserLineNumber "parserLineNumber"

/** @brief afw_utf8_t for string parserLineNumber */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parserLineNumber;

/** @brief define for quoted string parserSource */
#define AFW_Q_parserSource "parserSource"

/** @brief afw_utf8_t for string parserSource */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_parserSource;

/** @brief define for quoted string passed */
#define AFW_Q_passed "passed"

/** @brief afw_utf8_t for string passed */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_passed;

/** @brief define for quoted string password */
#define AFW_Q_password "password"

/** @brief afw_utf8_t for string password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_password;

/** @brief define for quoted string path */
#define AFW_Q_path "path"

/** @brief afw_utf8_t for string path */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_path;

/** @brief define for quoted string pathEmbedded */
#define AFW_Q_pathEmbedded "pathEmbedded"

/** @brief afw_utf8_t for string pathEmbedded */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_pathEmbedded;

/** @brief define for quoted string pathTokens */
#define AFW_Q_pathTokens "pathTokens"

/** @brief afw_utf8_t for string pathTokens */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_pathTokens;

/** @brief define for quoted string peerId */
#define AFW_Q_peerId "peerId"

/** @brief afw_utf8_t for string peerId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_peerId;

/** @brief define for quoted string perform */
#define AFW_Q_perform "perform"

/** @brief afw_utf8_t for string perform */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_perform;

/** @brief define for quoted string permanent */
#define AFW_Q_permanent "permanent"

/** @brief afw_utf8_t for string permanent */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_permanent;

/** @brief define for quoted string permit */
#define AFW_Q_permit "permit"

/** @brief afw_utf8_t for string permit */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_permit;

/** @brief define for quoted string pid */
#define AFW_Q_pid "pid"

/** @brief afw_utf8_t for string pid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_pid;

/** @brief define for quoted string policy_combining_algorithm */
#define AFW_Q_policy_combining_algorithm "policy_combining_algorithm"

/** @brief afw_utf8_t for string policy_combining_algorithm */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_policy_combining_algorithm;

/** @brief define for quoted string polymorphic */
#define AFW_Q_polymorphic "polymorphic"

/** @brief afw_utf8_t for string polymorphic */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_polymorphic;

/** @brief define for quoted string polymorphicDataType */
#define AFW_Q_polymorphicDataType "polymorphicDataType"

/** @brief afw_utf8_t for string polymorphicDataType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_polymorphicDataType;

/** @brief define for quoted string polymorphicDataTypeParameter */
#define AFW_Q_polymorphicDataTypeParameter "polymorphicDataTypeParameter"

/** @brief afw_utf8_t for string polymorphicDataTypeParameter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_polymorphicDataTypeParameter;

/** @brief define for quoted string polymorphicDataTypes */
#define AFW_Q_polymorphicDataTypes "polymorphicDataTypes"

/** @brief afw_utf8_t for string polymorphicDataTypes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_polymorphicDataTypes;

/** @brief define for quoted string polymorphicExecuteFunction */
#define AFW_Q_polymorphicExecuteFunction "polymorphicExecuteFunction"

/** @brief afw_utf8_t for string polymorphicExecuteFunction */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_polymorphicExecuteFunction;

/** @brief define for quoted string polymorphicExecuteFunctionEvaluatesFirstParameter */
#define AFW_Q_polymorphicExecuteFunctionEvaluatesFirstParameter "polymorphicExecuteFunctionEvaluatesFirstParameter"

/** @brief afw_utf8_t for string polymorphicExecuteFunctionEvaluatesFirstParameter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_polymorphicExecuteFunctionEvaluatesFirstParameter;

/** @brief define for quoted string polymorphicOverrides */
#define AFW_Q_polymorphicOverrides "polymorphicOverrides"

/** @brief afw_utf8_t for string polymorphicOverrides */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_polymorphicOverrides;

/** @brief define for quoted string port */
#define AFW_Q_port "port"

/** @brief afw_utf8_t for string port */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_port;

/** @brief define for quoted string possibleValues */
#define AFW_Q_possibleValues "possibleValues"

/** @brief afw_utf8_t for string possibleValues */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_possibleValues;

/** @brief define for quoted string pow */
#define AFW_Q_pow "pow"

/** @brief afw_utf8_t for string pow */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_pow;

/** @brief define for quoted string pow_double */
#define AFW_Q_pow_double "pow_double"

/** @brief afw_utf8_t for string pow_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_pow_double;

/** @brief define for quoted string prefix */
#define AFW_Q_prefix "prefix"

/** @brief afw_utf8_t for string prefix */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_prefix;

/** @brief define for quoted string print */
#define AFW_Q_print "print"

/** @brief afw_utf8_t for string print */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_print;

/** @brief define for quoted string println */
#define AFW_Q_println "println"

/** @brief afw_utf8_t for string println */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_println;

/** @brief define for quoted string priority */
#define AFW_Q_priority "priority"

/** @brief afw_utf8_t for string priority */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_priority;

/** @brief define for quoted string processingOrder */
#define AFW_Q_processingOrder "processingOrder"

/** @brief afw_utf8_t for string processingOrder */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_processingOrder;

/** @brief define for quoted string produces */
#define AFW_Q_produces "produces"

/** @brief afw_utf8_t for string produces */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_produces;

/** @brief define for quoted string programName */
#define AFW_Q_programName "programName"

/** @brief afw_utf8_t for string programName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_programName;

/** @brief define for quoted string properties */
#define AFW_Q_properties "properties"

/** @brief afw_utf8_t for string properties */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_properties;

/** @brief define for quoted string property */
#define AFW_Q_property "property"

/** @brief afw_utf8_t for string property */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_property;

/** @brief define for quoted string propertyName */
#define AFW_Q_propertyName "propertyName"

/** @brief afw_utf8_t for string propertyName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_propertyName;

/** @brief define for quoted string propertyNames */
#define AFW_Q_propertyNames "propertyNames"

/** @brief afw_utf8_t for string propertyNames */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_propertyNames;

/** @brief define for quoted string propertyTypeObject */
#define AFW_Q_propertyTypeObject "propertyTypeObject"

/** @brief afw_utf8_t for string propertyTypeObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_propertyTypeObject;

/** @brief define for quoted string propertyTypes */
#define AFW_Q_propertyTypes "propertyTypes"

/** @brief afw_utf8_t for string propertyTypes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_propertyTypes;

/** @brief define for quoted string property_delete */
#define AFW_Q_property_delete "property_delete"

/** @brief afw_utf8_t for string property_delete */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_property_delete;

/** @brief define for quoted string property_delete_by_reference */
#define AFW_Q_property_delete_by_reference "property_delete_by_reference"

/** @brief afw_utf8_t for string property_delete_by_reference */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_property_delete_by_reference;

/** @brief define for quoted string property_exists */
#define AFW_Q_property_exists "property_exists"

/** @brief afw_utf8_t for string property_exists */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_property_exists;

/** @brief define for quoted string property_get */
#define AFW_Q_property_get "property_get"

/** @brief afw_utf8_t for string property_get */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_property_get;

/** @brief define for quoted string property_is_not_null */
#define AFW_Q_property_is_not_null "property_is_not_null"

/** @brief afw_utf8_t for string property_is_not_null */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_property_is_not_null;

/** @brief define for quoted string providesObjects */
#define AFW_Q_providesObjects "providesObjects"

/** @brief afw_utf8_t for string providesObjects */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_providesObjects;

/** @brief define for quoted string publish */
#define AFW_Q_publish "publish"

/** @brief afw_utf8_t for string publish */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_publish;

/** @brief define for quoted string pure */
#define AFW_Q_pure "pure"

/** @brief afw_utf8_t for string pure */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_pure;

/** @brief define for quoted string qualifiedVariables */
#define AFW_Q_qualifiedVariables "qualifiedVariables"

/** @brief afw_utf8_t for string qualifiedVariables */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_qualifiedVariables;

/** @brief define for quoted string qualifier */
#define AFW_Q_qualifier "qualifier"

/** @brief afw_utf8_t for string qualifier */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_qualifier;

/** @brief define for quoted string qualifierDefinitions */
#define AFW_Q_qualifierDefinitions "qualifierDefinitions"

/** @brief afw_utf8_t for string qualifierDefinitions */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_qualifierDefinitions;

/** @brief define for quoted string qualifiers */
#define AFW_Q_qualifiers "qualifiers"

/** @brief afw_utf8_t for string qualifiers */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_qualifiers;

/** @brief define for quoted string query */
#define AFW_Q_query "query"

/** @brief afw_utf8_t for string query */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_query;

/** @brief define for quoted string queryCriteria */
#define AFW_Q_queryCriteria "queryCriteria"

/** @brief afw_utf8_t for string queryCriteria */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_queryCriteria;

/** @brief define for quoted string queryString */
#define AFW_Q_queryString "queryString"

/** @brief afw_utf8_t for string queryString */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_queryString;

/** @brief define for quoted string queryTokens */
#define AFW_Q_queryTokens "queryTokens"

/** @brief afw_utf8_t for string queryTokens */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_queryTokens;

/** @brief define for quoted string random */
#define AFW_Q_random "random"

/** @brief afw_utf8_t for string random */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_random;

/** @brief define for quoted string random_base64Binary */
#define AFW_Q_random_base64Binary "random_base64Binary"

/** @brief afw_utf8_t for string random_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_random_base64Binary;

/** @brief define for quoted string random_digits */
#define AFW_Q_random_digits "random_digits"

/** @brief afw_utf8_t for string random_digits */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_random_digits;

/** @brief define for quoted string random_hexBinary */
#define AFW_Q_random_hexBinary "random_hexBinary"

/** @brief afw_utf8_t for string random_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_random_hexBinary;

/** @brief define for quoted string random_integer */
#define AFW_Q_random_integer "random_integer"

/** @brief afw_utf8_t for string random_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_random_integer;

/** @brief define for quoted string random_number */
#define AFW_Q_random_number "random_number"

/** @brief afw_utf8_t for string random_number */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_random_number;

/** @brief define for quoted string raw_response_body */
#define AFW_Q_raw_response_body "raw_response_body"

/** @brief afw_utf8_t for string raw_response_body */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_raw_response_body;

/** @brief define for quoted string read */
#define AFW_Q_read "read"

/** @brief afw_utf8_t for string read */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_read;

/** @brief define for quoted string read_to_base64Binary */
#define AFW_Q_read_to_base64Binary "read_to_base64Binary"

/** @brief afw_utf8_t for string read_to_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_read_to_base64Binary;

/** @brief define for quoted string read_to_hexBinary */
#define AFW_Q_read_to_hexBinary "read_to_hexBinary"

/** @brief afw_utf8_t for string read_to_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_read_to_hexBinary;

/** @brief define for quoted string readln */
#define AFW_Q_readln "readln"

/** @brief afw_utf8_t for string readln */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_readln;

/** @brief define for quoted string reason */
#define AFW_Q_reason "reason"

/** @brief afw_utf8_t for string reason */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_reason;

/** @brief define for quoted string reconcilable */
#define AFW_Q_reconcilable "reconcilable"

/** @brief afw_utf8_t for string reconcilable */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_reconcilable;

/** @brief define for quoted string reconcile_object */
#define AFW_Q_reconcile_object "reconcile_object"

/** @brief afw_utf8_t for string reconcile_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_reconcile_object;

/** @brief define for quoted string reduce */
#define AFW_Q_reduce "reduce"

/** @brief afw_utf8_t for string reduce */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_reduce;

/** @brief define for quoted string referenceCount */
#define AFW_Q_referenceCount "referenceCount"

/** @brief afw_utf8_t for string referenceCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_referenceCount;

/** @brief define for quoted string referenceURI */
#define AFW_Q_referenceURI "referenceURI"

/** @brief afw_utf8_t for string referenceURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_referenceURI;

/** @brief define for quoted string reference_by_key */
#define AFW_Q_reference_by_key "reference_by_key"

/** @brief afw_utf8_t for string reference_by_key */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_reference_by_key;

/** @brief define for quoted string regexp */
#define AFW_Q_regexp "regexp"

/** @brief afw_utf8_t for string regexp */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp;

/** @brief define for quoted string regexp_index_of */
#define AFW_Q_regexp_index_of "regexp_index_of"

/** @brief afw_utf8_t for string regexp_index_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_index_of;

/** @brief define for quoted string regexp_index_of_anyURI */
#define AFW_Q_regexp_index_of_anyURI "regexp_index_of_anyURI"

/** @brief afw_utf8_t for string regexp_index_of_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_index_of_anyURI;

/** @brief define for quoted string regexp_index_of_string */
#define AFW_Q_regexp_index_of_string "regexp_index_of_string"

/** @brief afw_utf8_t for string regexp_index_of_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_index_of_string;

/** @brief define for quoted string regexp_match */
#define AFW_Q_regexp_match "regexp_match"

/** @brief afw_utf8_t for string regexp_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_match;

/** @brief define for quoted string regexp_match_anyURI */
#define AFW_Q_regexp_match_anyURI "regexp_match_anyURI"

/** @brief afw_utf8_t for string regexp_match_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_match_anyURI;

/** @brief define for quoted string regexp_match_dnsName */
#define AFW_Q_regexp_match_dnsName "regexp_match_dnsName"

/** @brief afw_utf8_t for string regexp_match_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_match_dnsName;

/** @brief define for quoted string regexp_match_ipAddress */
#define AFW_Q_regexp_match_ipAddress "regexp_match_ipAddress"

/** @brief afw_utf8_t for string regexp_match_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_match_ipAddress;

/** @brief define for quoted string regexp_match_rfc822Name */
#define AFW_Q_regexp_match_rfc822Name "regexp_match_rfc822Name"

/** @brief afw_utf8_t for string regexp_match_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_match_rfc822Name;

/** @brief define for quoted string regexp_match_string */
#define AFW_Q_regexp_match_string "regexp_match_string"

/** @brief afw_utf8_t for string regexp_match_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_match_string;

/** @brief define for quoted string regexp_match_x500Name */
#define AFW_Q_regexp_match_x500Name "regexp_match_x500Name"

/** @brief afw_utf8_t for string regexp_match_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_match_x500Name;

/** @brief define for quoted string regexp_replace */
#define AFW_Q_regexp_replace "regexp_replace"

/** @brief afw_utf8_t for string regexp_replace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_replace;

/** @brief define for quoted string regexp_replace_anyURI */
#define AFW_Q_regexp_replace_anyURI "regexp_replace_anyURI"

/** @brief afw_utf8_t for string regexp_replace_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_replace_anyURI;

/** @brief define for quoted string regexp_replace_string */
#define AFW_Q_regexp_replace_string "regexp_replace_string"

/** @brief afw_utf8_t for string regexp_replace_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_regexp_replace_string;

/** @brief define for quoted string registers */
#define AFW_Q_registers "registers"

/** @brief afw_utf8_t for string registers */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_registers;

/** @brief define for quoted string registryType */
#define AFW_Q_registryType "registryType"

/** @brief afw_utf8_t for string registryType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_registryType;

/** @brief define for quoted string registry_key_check */
#define AFW_Q_registry_key_check "registry_key_check"

/** @brief afw_utf8_t for string registry_key_check */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_registry_key_check;

/** @brief define for quoted string registry_type */
#define AFW_Q_registry_type "registry_type"

/** @brief afw_utf8_t for string registry_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_registry_type;

/** @brief define for quoted string reissue */
#define AFW_Q_reissue "reissue"

/** @brief afw_utf8_t for string reissue */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_reissue;

/** @brief define for quoted string related */
#define AFW_Q_related "related"

/** @brief afw_utf8_t for string related */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_related;

/** @brief define for quoted string relationalCompares */
#define AFW_Q_relationalCompares "relationalCompares"

/** @brief afw_utf8_t for string relationalCompares */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_relationalCompares;

/** @brief define for quoted string relaxed_json */
#define AFW_Q_relaxed_json "relaxed_json"

/** @brief afw_utf8_t for string relaxed_json */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_relaxed_json;

/** @brief define for quoted string remove_property */
#define AFW_Q_remove_property "remove_property"

/** @brief afw_utf8_t for string remove_property */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_remove_property;

/** @brief define for quoted string remove_value */
#define AFW_Q_remove_value "remove_value"

/** @brief afw_utf8_t for string remove_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_remove_value;

/** @brief define for quoted string repeat */
#define AFW_Q_repeat "repeat"

/** @brief afw_utf8_t for string repeat */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_repeat;

/** @brief define for quoted string repeat_anyURI */
#define AFW_Q_repeat_anyURI "repeat_anyURI"

/** @brief afw_utf8_t for string repeat_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_repeat_anyURI;

/** @brief define for quoted string repeat_string */
#define AFW_Q_repeat_string "repeat_string"

/** @brief afw_utf8_t for string repeat_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_repeat_string;

/** @brief define for quoted string replace */
#define AFW_Q_replace "replace"

/** @brief afw_utf8_t for string replace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_replace;

/** @brief define for quoted string replaceObjectCount */
#define AFW_Q_replaceObjectCount "replaceObjectCount"

/** @brief afw_utf8_t for string replaceObjectCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_replaceObjectCount;

/** @brief define for quoted string replace_anyURI */
#define AFW_Q_replace_anyURI "replace_anyURI"

/** @brief afw_utf8_t for string replace_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_replace_anyURI;

/** @brief define for quoted string replace_object */
#define AFW_Q_replace_object "replace_object"

/** @brief afw_utf8_t for string replace_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_replace_object;

/** @brief define for quoted string replace_object_with_uri */
#define AFW_Q_replace_object_with_uri "replace_object_with_uri"

/** @brief afw_utf8_t for string replace_object_with_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_replace_object_with_uri;

/** @brief define for quoted string replace_string */
#define AFW_Q_replace_string "replace_string"

/** @brief afw_utf8_t for string replace_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_replace_string;

/** @brief define for quoted string request */
#define AFW_Q_request "request"

/** @brief afw_utf8_t for string request */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_request;

/** @brief define for quoted string requestCount */
#define AFW_Q_requestCount "requestCount"

/** @brief afw_utf8_t for string requestCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_requestCount;

/** @brief define for quoted string requestHandler */
#define AFW_Q_requestHandler "requestHandler"

/** @brief afw_utf8_t for string requestHandler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_requestHandler;

/** @brief define for quoted string requestHandlerType */
#define AFW_Q_requestHandlerType "requestHandlerType"

/** @brief afw_utf8_t for string requestHandlerType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_requestHandlerType;

/** @brief define for quoted string requestId */
#define AFW_Q_requestId "requestId"

/** @brief afw_utf8_t for string requestId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_requestId;

/** @brief define for quoted string request_handler */
#define AFW_Q_request_handler "request_handler"

/** @brief afw_utf8_t for string request_handler */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_request_handler;

/** @brief define for quoted string request_handler_type */
#define AFW_Q_request_handler_type "request_handler_type"

/** @brief afw_utf8_t for string request_handler_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_request_handler_type;

/** @brief define for quoted string request_session */
#define AFW_Q_request_session "request_session"

/** @brief afw_utf8_t for string request_session */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_request_session;

/** @brief define for quoted string request_thread */
#define AFW_Q_request_thread "request_thread"

/** @brief afw_utf8_t for string request_thread */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_request_thread;

/** @brief define for quoted string required */
#define AFW_Q_required "required"

/** @brief afw_utf8_t for string required */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_required;

/** @brief define for quoted string resolvedParentPaths */
#define AFW_Q_resolvedParentPaths "resolvedParentPaths"

/** @brief afw_utf8_t for string resolvedParentPaths */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_resolvedParentPaths;

/** @brief define for quoted string resource */
#define AFW_Q_resource "resource"

/** @brief afw_utf8_t for string resource */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_resource;

/** @brief define for quoted string resourceId */
#define AFW_Q_resourceId "resourceId"

/** @brief afw_utf8_t for string resourceId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_resourceId;

/** @brief define for quoted string response */
#define AFW_Q_response "response"

/** @brief afw_utf8_t for string response */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_response;

/** @brief define for quoted string response_body */
#define AFW_Q_response_body "response_body"

/** @brief afw_utf8_t for string response_body */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_response_body;

/** @brief define for quoted string result */
#define AFW_Q_result "result"

/** @brief afw_utf8_t for string result */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_result;

/** @brief define for quoted string resultDataType */
#define AFW_Q_resultDataType "resultDataType"

/** @brief afw_utf8_t for string resultDataType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_resultDataType;

/** @brief define for quoted string rethrow */
#define AFW_Q_rethrow "rethrow"

/** @brief afw_utf8_t for string rethrow */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rethrow;

/** @brief define for quoted string retrieveObjectsCount */
#define AFW_Q_retrieveObjectsCount "retrieveObjectsCount"

/** @brief afw_utf8_t for string retrieveObjectsCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieveObjectsCount;

/** @brief define for quoted string retrieve_objects */
#define AFW_Q_retrieve_objects "retrieve_objects"

/** @brief afw_utf8_t for string retrieve_objects */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects;

/** @brief define for quoted string retrieve_objects_to_callback */
#define AFW_Q_retrieve_objects_to_callback "retrieve_objects_to_callback"

/** @brief afw_utf8_t for string retrieve_objects_to_callback */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects_to_callback;

/** @brief define for quoted string retrieve_objects_to_response */
#define AFW_Q_retrieve_objects_to_response "retrieve_objects_to_response"

/** @brief afw_utf8_t for string retrieve_objects_to_response */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects_to_response;

/** @brief define for quoted string retrieve_objects_to_stream */
#define AFW_Q_retrieve_objects_to_stream "retrieve_objects_to_stream"

/** @brief afw_utf8_t for string retrieve_objects_to_stream */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects_to_stream;

/** @brief define for quoted string retrieve_objects_with_uri */
#define AFW_Q_retrieve_objects_with_uri "retrieve_objects_with_uri"

/** @brief afw_utf8_t for string retrieve_objects_with_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects_with_uri;

/** @brief define for quoted string retrieve_objects_with_uri_to_callback */
#define AFW_Q_retrieve_objects_with_uri_to_callback "retrieve_objects_with_uri_to_callback"

/** @brief afw_utf8_t for string retrieve_objects_with_uri_to_callback */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects_with_uri_to_callback;

/** @brief define for quoted string retrieve_objects_with_uri_to_response */
#define AFW_Q_retrieve_objects_with_uri_to_response "retrieve_objects_with_uri_to_response"

/** @brief afw_utf8_t for string retrieve_objects_with_uri_to_response */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects_with_uri_to_response;

/** @brief define for quoted string retrieve_objects_with_uri_to_stream */
#define AFW_Q_retrieve_objects_with_uri_to_stream "retrieve_objects_with_uri_to_stream"

/** @brief afw_utf8_t for string retrieve_objects_with_uri_to_stream */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retrieve_objects_with_uri_to_stream;

/** @brief define for quoted string retroactive */
#define AFW_Q_retroactive "retroactive"

/** @brief afw_utf8_t for string retroactive */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_retroactive;

/** @brief define for quoted string return */
#define AFW_Q_return "return"

/** @brief afw_utf8_t for string return */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_return;

/** @brief define for quoted string returnObject */
#define AFW_Q_returnObject "returnObject"

/** @brief afw_utf8_t for string returnObject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_returnObject;

/** @brief define for quoted string returns */
#define AFW_Q_returns "returns"

/** @brief afw_utf8_t for string returns */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_returns;

/** @brief define for quoted string reverse */
#define AFW_Q_reverse "reverse"

/** @brief afw_utf8_t for string reverse */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_reverse;

/** @brief define for quoted string rfc822Name */
#define AFW_Q_rfc822Name "rfc822Name"

/** @brief afw_utf8_t for string rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name;

/** @brief define for quoted string rfc822Name_at_least_one_member_of */
#define AFW_Q_rfc822Name_at_least_one_member_of "rfc822Name_at_least_one_member_of"

/** @brief afw_utf8_t for string rfc822Name_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_at_least_one_member_of;

/** @brief define for quoted string rfc822Name_bag */
#define AFW_Q_rfc822Name_bag "rfc822Name_bag"

/** @brief afw_utf8_t for string rfc822Name_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_bag;

/** @brief define for quoted string rfc822Name_bag_size */
#define AFW_Q_rfc822Name_bag_size "rfc822Name_bag_size"

/** @brief afw_utf8_t for string rfc822Name_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_bag_size;

/** @brief define for quoted string rfc822Name_eq */
#define AFW_Q_rfc822Name_eq "rfc822Name_eq"

/** @brief afw_utf8_t for string rfc822Name_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_eq;

/** @brief define for quoted string rfc822Name_intersection */
#define AFW_Q_rfc822Name_intersection "rfc822Name_intersection"

/** @brief afw_utf8_t for string rfc822Name_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_intersection;

/** @brief define for quoted string rfc822Name_is_in */
#define AFW_Q_rfc822Name_is_in "rfc822Name_is_in"

/** @brief afw_utf8_t for string rfc822Name_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_is_in;

/** @brief define for quoted string rfc822Name_match */
#define AFW_Q_rfc822Name_match "rfc822Name_match"

/** @brief afw_utf8_t for string rfc822Name_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_match;

/** @brief define for quoted string rfc822Name_one_and_only */
#define AFW_Q_rfc822Name_one_and_only "rfc822Name_one_and_only"

/** @brief afw_utf8_t for string rfc822Name_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_one_and_only;

/** @brief define for quoted string rfc822Name_regexp_match */
#define AFW_Q_rfc822Name_regexp_match "rfc822Name_regexp_match"

/** @brief afw_utf8_t for string rfc822Name_regexp_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_regexp_match;

/** @brief define for quoted string rfc822Name_set_equals */
#define AFW_Q_rfc822Name_set_equals "rfc822Name_set_equals"

/** @brief afw_utf8_t for string rfc822Name_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_set_equals;

/** @brief define for quoted string rfc822Name_subset */
#define AFW_Q_rfc822Name_subset "rfc822Name_subset"

/** @brief afw_utf8_t for string rfc822Name_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_subset;

/** @brief define for quoted string rfc822Name_to_string */
#define AFW_Q_rfc822Name_to_string "rfc822Name_to_string"

/** @brief afw_utf8_t for string rfc822Name_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_to_string;

/** @brief define for quoted string rfc822Name_union */
#define AFW_Q_rfc822Name_union "rfc822Name_union"

/** @brief afw_utf8_t for string rfc822Name_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rfc822Name_union;

/** @brief define for quoted string root */
#define AFW_Q_root "root"

/** @brief afw_utf8_t for string root */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_root;

/** @brief define for quoted string rootFilePaths */
#define AFW_Q_rootFilePaths "rootFilePaths"

/** @brief afw_utf8_t for string rootFilePaths */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rootFilePaths;

/** @brief define for quoted string round */
#define AFW_Q_round "round"

/** @brief afw_utf8_t for string round */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_round;

/** @brief define for quoted string round_double */
#define AFW_Q_round_double "round_double"

/** @brief afw_utf8_t for string round_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_round_double;

/** @brief define for quoted string rule_combining_algorithm */
#define AFW_Q_rule_combining_algorithm "rule_combining_algorithm"

/** @brief afw_utf8_t for string rule_combining_algorithm */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rule_combining_algorithm;

/** @brief define for quoted string runtime */
#define AFW_Q_runtime "runtime"

/** @brief afw_utf8_t for string runtime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_runtime;

/** @brief define for quoted string runtime_custom */
#define AFW_Q_runtime_custom "runtime_custom"

/** @brief afw_utf8_t for string runtime_custom */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_runtime_custom;

/** @brief define for quoted string runtime_object_map_inf */
#define AFW_Q_runtime_object_map_inf "runtime_object_map_inf"

/** @brief afw_utf8_t for string runtime_object_map_inf */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_runtime_object_map_inf;

/** @brief define for quoted string runtime_value_accessor */
#define AFW_Q_runtime_value_accessor "runtime_value_accessor"

/** @brief afw_utf8_t for string runtime_value_accessor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_runtime_value_accessor;

/** @brief define for quoted string rv */
#define AFW_Q_rv "rv"

/** @brief afw_utf8_t for string rv */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rv;

/** @brief define for quoted string rvDecoded */
#define AFW_Q_rvDecoded "rvDecoded"

/** @brief afw_utf8_t for string rvDecoded */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rvDecoded;

/** @brief define for quoted string rvSourceId */
#define AFW_Q_rvSourceId "rvSourceId"

/** @brief afw_utf8_t for string rvSourceId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_rvSourceId;

/** @brief define for quoted string safe_evaluate */
#define AFW_Q_safe_evaluate "safe_evaluate"

/** @brief afw_utf8_t for string safe_evaluate */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_safe_evaluate;

/** @brief define for quoted string scalar */
#define AFW_Q_scalar "scalar"

/** @brief afw_utf8_t for string scalar */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_scalar;

/** @brief define for quoted string scheme */
#define AFW_Q_scheme "scheme"

/** @brief afw_utf8_t for string scheme */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_scheme;

/** @brief define for quoted string scopeNumber */
#define AFW_Q_scopeNumber "scopeNumber"

/** @brief afw_utf8_t for string scopeNumber */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_scopeNumber;

/** @brief define for quoted string script */
#define AFW_Q_script "script"

/** @brief afw_utf8_t for string script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_script;

/** @brief define for quoted string scriptSupport */
#define AFW_Q_scriptSupport "scriptSupport"

/** @brief afw_utf8_t for string scriptSupport */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_scriptSupport;

/** @brief define for quoted string scriptSupportNumber */
#define AFW_Q_scriptSupportNumber "scriptSupportNumber"

/** @brief afw_utf8_t for string scriptSupportNumber */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_scriptSupportNumber;

/** @brief define for quoted string script_compile */
#define AFW_Q_script_compile "script_compile"

/** @brief afw_utf8_t for string script_compile */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_script_compile;

/** @brief define for quoted string select */
#define AFW_Q_select "select"

/** @brief afw_utf8_t for string select */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_select;

/** @brief define for quoted string serverType */
#define AFW_Q_serverType "serverType"

/** @brief afw_utf8_t for string serverType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_serverType;

/** @brief define for quoted string serverVersion */
#define AFW_Q_serverVersion "serverVersion"

/** @brief afw_utf8_t for string serverVersion */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_serverVersion;

/** @brief define for quoted string service */
#define AFW_Q_service "service"

/** @brief afw_utf8_t for string service */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service;

/** @brief define for quoted string serviceId */
#define AFW_Q_serviceId "serviceId"

/** @brief afw_utf8_t for string serviceId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_serviceId;

/** @brief define for quoted string serviceType */
#define AFW_Q_serviceType "serviceType"

/** @brief afw_utf8_t for string serviceType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_serviceType;

/** @brief define for quoted string service_get */
#define AFW_Q_service_get "service_get"

/** @brief afw_utf8_t for string service_get */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service_get;

/** @brief define for quoted string service_restart */
#define AFW_Q_service_restart "service_restart"

/** @brief afw_utf8_t for string service_restart */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service_restart;

/** @brief define for quoted string service_start */
#define AFW_Q_service_start "service_start"

/** @brief afw_utf8_t for string service_start */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service_start;

/** @brief define for quoted string service_startup */
#define AFW_Q_service_startup "service_startup"

/** @brief afw_utf8_t for string service_startup */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service_startup;

/** @brief define for quoted string service_status */
#define AFW_Q_service_status "service_status"

/** @brief afw_utf8_t for string service_status */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service_status;

/** @brief define for quoted string service_stop */
#define AFW_Q_service_stop "service_stop"

/** @brief afw_utf8_t for string service_stop */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service_stop;

/** @brief define for quoted string service_type */
#define AFW_Q_service_type "service_type"

/** @brief afw_utf8_t for string service_type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_service_type;

/** @brief define for quoted string services */
#define AFW_Q_services "services"

/** @brief afw_utf8_t for string services */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_services;

/** @brief define for quoted string set_equals */
#define AFW_Q_set_equals "set_equals"

/** @brief afw_utf8_t for string set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals;

/** @brief define for quoted string set_equals_anyURI */
#define AFW_Q_set_equals_anyURI "set_equals_anyURI"

/** @brief afw_utf8_t for string set_equals_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_anyURI;

/** @brief define for quoted string set_equals_base64Binary */
#define AFW_Q_set_equals_base64Binary "set_equals_base64Binary"

/** @brief afw_utf8_t for string set_equals_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_base64Binary;

/** @brief define for quoted string set_equals_boolean */
#define AFW_Q_set_equals_boolean "set_equals_boolean"

/** @brief afw_utf8_t for string set_equals_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_boolean;

/** @brief define for quoted string set_equals_date */
#define AFW_Q_set_equals_date "set_equals_date"

/** @brief afw_utf8_t for string set_equals_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_date;

/** @brief define for quoted string set_equals_dateTime */
#define AFW_Q_set_equals_dateTime "set_equals_dateTime"

/** @brief afw_utf8_t for string set_equals_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_dateTime;

/** @brief define for quoted string set_equals_dayTimeDuration */
#define AFW_Q_set_equals_dayTimeDuration "set_equals_dayTimeDuration"

/** @brief afw_utf8_t for string set_equals_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_dayTimeDuration;

/** @brief define for quoted string set_equals_double */
#define AFW_Q_set_equals_double "set_equals_double"

/** @brief afw_utf8_t for string set_equals_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_double;

/** @brief define for quoted string set_equals_hexBinary */
#define AFW_Q_set_equals_hexBinary "set_equals_hexBinary"

/** @brief afw_utf8_t for string set_equals_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_hexBinary;

/** @brief define for quoted string set_equals_integer */
#define AFW_Q_set_equals_integer "set_equals_integer"

/** @brief afw_utf8_t for string set_equals_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_integer;

/** @brief define for quoted string set_equals_rfc822Name */
#define AFW_Q_set_equals_rfc822Name "set_equals_rfc822Name"

/** @brief afw_utf8_t for string set_equals_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_rfc822Name;

/** @brief define for quoted string set_equals_string */
#define AFW_Q_set_equals_string "set_equals_string"

/** @brief afw_utf8_t for string set_equals_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_string;

/** @brief define for quoted string set_equals_time */
#define AFW_Q_set_equals_time "set_equals_time"

/** @brief afw_utf8_t for string set_equals_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_time;

/** @brief define for quoted string set_equals_x500Name */
#define AFW_Q_set_equals_x500Name "set_equals_x500Name"

/** @brief afw_utf8_t for string set_equals_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_x500Name;

/** @brief define for quoted string set_equals_yearMonthDuration */
#define AFW_Q_set_equals_yearMonthDuration "set_equals_yearMonthDuration"

/** @brief afw_utf8_t for string set_equals_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_equals_yearMonthDuration;

/** @brief define for quoted string set_property */
#define AFW_Q_set_property "set_property"

/** @brief afw_utf8_t for string set_property */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_set_property;

/** @brief define for quoted string sideEffects */
#define AFW_Q_sideEffects "sideEffects"

/** @brief afw_utf8_t for string sideEffects */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sideEffects;

/** @brief define for quoted string signatureOnly */
#define AFW_Q_signatureOnly "signatureOnly"

/** @brief afw_utf8_t for string signatureOnly */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_signatureOnly;

/** @brief define for quoted string singleton */
#define AFW_Q_singleton "singleton"

/** @brief afw_utf8_t for string singleton */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_singleton;

/** @brief define for quoted string size */
#define AFW_Q_size "size"

/** @brief afw_utf8_t for string size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_size;

/** @brief define for quoted string skeleton */
#define AFW_Q_skeleton "skeleton"

/** @brief afw_utf8_t for string skeleton */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_skeleton;

/** @brief define for quoted string skip */
#define AFW_Q_skip "skip"

/** @brief afw_utf8_t for string skip */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_skip;

/** @brief define for quoted string slice */
#define AFW_Q_slice "slice"

/** @brief afw_utf8_t for string slice */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_slice;

/** @brief define for quoted string sort */
#define AFW_Q_sort "sort"

/** @brief afw_utf8_t for string sort */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sort;

/** @brief define for quoted string sort_reverse */
#define AFW_Q_sort_reverse "sort-reverse"

/** @brief afw_utf8_t for string sort_reverse */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sort_reverse;

/** @brief define for quoted string source */
#define AFW_Q_source "source"

/** @brief afw_utf8_t for string source */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_source;

/** @brief define for quoted string sourceCodepointLengthInTestScript */
#define AFW_Q_sourceCodepointLengthInTestScript "sourceCodepointLengthInTestScript"

/** @brief afw_utf8_t for string sourceCodepointLengthInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceCodepointLengthInTestScript;

/** @brief define for quoted string sourceCodepointOffsetInTestScript */
#define AFW_Q_sourceCodepointOffsetInTestScript "sourceCodepointOffsetInTestScript"

/** @brief afw_utf8_t for string sourceCodepointOffsetInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceCodepointOffsetInTestScript;

/** @brief define for quoted string sourceColumnNumberInTestScript */
#define AFW_Q_sourceColumnNumberInTestScript "sourceColumnNumberInTestScript"

/** @brief afw_utf8_t for string sourceColumnNumberInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceColumnNumberInTestScript;

/** @brief define for quoted string sourceFile */
#define AFW_Q_sourceFile "sourceFile"

/** @brief afw_utf8_t for string sourceFile */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceFile;

/** @brief define for quoted string sourceLineNumberInTestScript */
#define AFW_Q_sourceLineNumberInTestScript "sourceLineNumberInTestScript"

/** @brief afw_utf8_t for string sourceLineNumberInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceLineNumberInTestScript;

/** @brief define for quoted string sourceLocation */
#define AFW_Q_sourceLocation "sourceLocation"

/** @brief afw_utf8_t for string sourceLocation */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceLocation;

/** @brief define for quoted string sourceType */
#define AFW_Q_sourceType "sourceType"

/** @brief afw_utf8_t for string sourceType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceType;

/** @brief define for quoted string sourceUTF8OctetLengthInTestScript */
#define AFW_Q_sourceUTF8OctetLengthInTestScript "sourceUTF8OctetLengthInTestScript"

/** @brief afw_utf8_t for string sourceUTF8OctetLengthInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceUTF8OctetLengthInTestScript;

/** @brief define for quoted string sourceUTF8OctetOffsetInTestScript */
#define AFW_Q_sourceUTF8OctetOffsetInTestScript "sourceUTF8OctetOffsetInTestScript"

/** @brief afw_utf8_t for string sourceUTF8OctetOffsetInTestScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_sourceUTF8OctetOffsetInTestScript;

/** @brief define for quoted string special */
#define AFW_Q_special "special"

/** @brief afw_utf8_t for string special */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_special;

/** @brief define for quoted string split */
#define AFW_Q_split "split"

/** @brief afw_utf8_t for string split */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_split;

/** @brief define for quoted string split_anyURI */
#define AFW_Q_split_anyURI "split_anyURI"

/** @brief afw_utf8_t for string split_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_split_anyURI;

/** @brief define for quoted string split_string */
#define AFW_Q_split_string "split_string"

/** @brief afw_utf8_t for string split_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_split_string;

/** @brief define for quoted string srcdirManifest */
#define AFW_Q_srcdirManifest "srcdirManifest"

/** @brief afw_utf8_t for string srcdirManifest */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_srcdirManifest;

/** @brief define for quoted string srcdirPath */
#define AFW_Q_srcdirPath "srcdirPath"

/** @brief afw_utf8_t for string srcdirPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_srcdirPath;

/** @brief define for quoted string srcdirs */
#define AFW_Q_srcdirs "srcdirs"

/** @brief afw_utf8_t for string srcdirs */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_srcdirs;

/** @brief define for quoted string startTime */
#define AFW_Q_startTime "startTime"

/** @brief afw_utf8_t for string startTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_startTime;

/** @brief define for quoted string starts_with */
#define AFW_Q_starts_with "starts_with"

/** @brief afw_utf8_t for string starts_with */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_starts_with;

/** @brief define for quoted string starts_with_anyURI */
#define AFW_Q_starts_with_anyURI "starts_with_anyURI"

/** @brief afw_utf8_t for string starts_with_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_starts_with_anyURI;

/** @brief define for quoted string starts_with_string */
#define AFW_Q_starts_with_string "starts_with_string"

/** @brief afw_utf8_t for string starts_with_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_starts_with_string;

/** @brief define for quoted string startup */
#define AFW_Q_startup "startup"

/** @brief afw_utf8_t for string startup */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_startup;

/** @brief define for quoted string startupDescription */
#define AFW_Q_startupDescription "startupDescription"

/** @brief afw_utf8_t for string startupDescription */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_startupDescription;

/** @brief define for quoted string status */
#define AFW_Q_status "status"

/** @brief afw_utf8_t for string status */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_status;

/** @brief define for quoted string statusDebug */
#define AFW_Q_statusDebug "statusDebug"

/** @brief afw_utf8_t for string statusDebug */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_statusDebug;

/** @brief define for quoted string statusDescription */
#define AFW_Q_statusDescription "statusDescription"

/** @brief afw_utf8_t for string statusDescription */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_statusDescription;

/** @brief define for quoted string statusMessage */
#define AFW_Q_statusMessage "statusMessage"

/** @brief afw_utf8_t for string statusMessage */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_statusMessage;

/** @brief define for quoted string stderr */
#define AFW_Q_stderr "stderr"

/** @brief afw_utf8_t for string stderr */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_stderr;

/** @brief define for quoted string stdout */
#define AFW_Q_stdout "stdout"

/** @brief afw_utf8_t for string stdout */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_stdout;

/** @brief define for quoted string stopping */
#define AFW_Q_stopping "stopping"

/** @brief afw_utf8_t for string stopping */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_stopping;

/** @brief define for quoted string stopping_adaptor_instances */
#define AFW_Q_stopping_adaptor_instances "stopping_adaptor_instances"

/** @brief afw_utf8_t for string stopping_adaptor_instances */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_stopping_adaptor_instances;

/** @brief define for quoted string stopping_authorization_handler_instances */
#define AFW_Q_stopping_authorization_handler_instances "stopping_authorization_handler_instances"

/** @brief afw_utf8_t for string stopping_authorization_handler_instances */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_stopping_authorization_handler_instances;

/** @brief define for quoted string stream */
#define AFW_Q_stream "stream"

/** @brief afw_utf8_t for string stream */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_stream;

/** @brief define for quoted string string */
#define AFW_Q_string "string"

/** @brief afw_utf8_t for string string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string;

/** @brief define for quoted string string_at_least_one_member_of */
#define AFW_Q_string_at_least_one_member_of "string_at_least_one_member_of"

/** @brief afw_utf8_t for string string_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_at_least_one_member_of;

/** @brief define for quoted string string_bag */
#define AFW_Q_string_bag "string_bag"

/** @brief afw_utf8_t for string string_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_bag;

/** @brief define for quoted string string_bag_size */
#define AFW_Q_string_bag_size "string_bag_size"

/** @brief afw_utf8_t for string string_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_bag_size;

/** @brief define for quoted string string_ends_with */
#define AFW_Q_string_ends_with "string_ends_with"

/** @brief afw_utf8_t for string string_ends_with */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_ends_with;

/** @brief define for quoted string string_eq */
#define AFW_Q_string_eq "string_eq"

/** @brief afw_utf8_t for string string_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_eq;

/** @brief define for quoted string string_eq_ignore_case */
#define AFW_Q_string_eq_ignore_case "string_eq_ignore_case"

/** @brief afw_utf8_t for string string_eq_ignore_case */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_eq_ignore_case;

/** @brief define for quoted string string_ge */
#define AFW_Q_string_ge "string_ge"

/** @brief afw_utf8_t for string string_ge */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_ge;

/** @brief define for quoted string string_gt */
#define AFW_Q_string_gt "string_gt"

/** @brief afw_utf8_t for string string_gt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_gt;

/** @brief define for quoted string string_includes */
#define AFW_Q_string_includes "string_includes"

/** @brief afw_utf8_t for string string_includes */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_includes;

/** @brief define for quoted string string_intersection */
#define AFW_Q_string_intersection "string_intersection"

/** @brief afw_utf8_t for string string_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_intersection;

/** @brief define for quoted string string_is_in */
#define AFW_Q_string_is_in "string_is_in"

/** @brief afw_utf8_t for string string_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_is_in;

/** @brief define for quoted string string_le */
#define AFW_Q_string_le "string_le"

/** @brief afw_utf8_t for string string_le */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_le;

/** @brief define for quoted string string_lt */
#define AFW_Q_string_lt "string_lt"

/** @brief afw_utf8_t for string string_lt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_lt;

/** @brief define for quoted string string_normalize_space */
#define AFW_Q_string_normalize_space "string_normalize_space"

/** @brief afw_utf8_t for string string_normalize_space */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_normalize_space;

/** @brief define for quoted string string_normalize_to_lower_case */
#define AFW_Q_string_normalize_to_lower_case "string_normalize_to_lower_case"

/** @brief afw_utf8_t for string string_normalize_to_lower_case */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_normalize_to_lower_case;

/** @brief define for quoted string string_one_and_only */
#define AFW_Q_string_one_and_only "string_one_and_only"

/** @brief afw_utf8_t for string string_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_one_and_only;

/** @brief define for quoted string string_regexp_match */
#define AFW_Q_string_regexp_match "string_regexp_match"

/** @brief afw_utf8_t for string string_regexp_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_regexp_match;

/** @brief define for quoted string string_set_equals */
#define AFW_Q_string_set_equals "string_set_equals"

/** @brief afw_utf8_t for string string_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_set_equals;

/** @brief define for quoted string string_starts_with */
#define AFW_Q_string_starts_with "string_starts_with"

/** @brief afw_utf8_t for string string_starts_with */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_starts_with;

/** @brief define for quoted string string_subset */
#define AFW_Q_string_subset "string_subset"

/** @brief afw_utf8_t for string string_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_subset;

/** @brief define for quoted string string_substring */
#define AFW_Q_string_substring "string_substring"

/** @brief afw_utf8_t for string string_substring */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_substring;

/** @brief define for quoted string string_to_anyURI */
#define AFW_Q_string_to_anyURI "string_to_anyURI"

/** @brief afw_utf8_t for string string_to_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_anyURI;

/** @brief define for quoted string string_to_boolean */
#define AFW_Q_string_to_boolean "string_to_boolean"

/** @brief afw_utf8_t for string string_to_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_boolean;

/** @brief define for quoted string string_to_date */
#define AFW_Q_string_to_date "string_to_date"

/** @brief afw_utf8_t for string string_to_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_date;

/** @brief define for quoted string string_to_dateTime */
#define AFW_Q_string_to_dateTime "string_to_dateTime"

/** @brief afw_utf8_t for string string_to_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_dateTime;

/** @brief define for quoted string string_to_dayTimeDuration */
#define AFW_Q_string_to_dayTimeDuration "string_to_dayTimeDuration"

/** @brief afw_utf8_t for string string_to_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_dayTimeDuration;

/** @brief define for quoted string string_to_dnsName */
#define AFW_Q_string_to_dnsName "string_to_dnsName"

/** @brief afw_utf8_t for string string_to_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_dnsName;

/** @brief define for quoted string string_to_double */
#define AFW_Q_string_to_double "string_to_double"

/** @brief afw_utf8_t for string string_to_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_double;

/** @brief define for quoted string string_to_integer */
#define AFW_Q_string_to_integer "string_to_integer"

/** @brief afw_utf8_t for string string_to_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_integer;

/** @brief define for quoted string string_to_ipAddress */
#define AFW_Q_string_to_ipAddress "string_to_ipAddress"

/** @brief afw_utf8_t for string string_to_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_ipAddress;

/** @brief define for quoted string string_to_rfc822Name */
#define AFW_Q_string_to_rfc822Name "string_to_rfc822Name"

/** @brief afw_utf8_t for string string_to_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_rfc822Name;

/** @brief define for quoted string string_to_time */
#define AFW_Q_string_to_time "string_to_time"

/** @brief afw_utf8_t for string string_to_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_time;

/** @brief define for quoted string string_to_x500Name */
#define AFW_Q_string_to_x500Name "string_to_x500Name"

/** @brief afw_utf8_t for string string_to_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_x500Name;

/** @brief define for quoted string string_to_yearMonthDuration */
#define AFW_Q_string_to_yearMonthDuration "string_to_yearMonthDuration"

/** @brief afw_utf8_t for string string_to_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_to_yearMonthDuration;

/** @brief define for quoted string string_union */
#define AFW_Q_string_union "string_union"

/** @brief afw_utf8_t for string string_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_string_union;

/** @brief define for quoted string stringify */
#define AFW_Q_stringify "stringify"

/** @brief afw_utf8_t for string stringify */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_stringify;

/** @brief define for quoted string subject */
#define AFW_Q_subject "subject"

/** @brief afw_utf8_t for string subject */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subject;

/** @brief define for quoted string subjectCategories */
#define AFW_Q_subjectCategories "subjectCategories"

/** @brief afw_utf8_t for string subjectCategories */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subjectCategories;

/** @brief define for quoted string subset */
#define AFW_Q_subset "subset"

/** @brief afw_utf8_t for string subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset;

/** @brief define for quoted string subset_anyURI */
#define AFW_Q_subset_anyURI "subset_anyURI"

/** @brief afw_utf8_t for string subset_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_anyURI;

/** @brief define for quoted string subset_base64Binary */
#define AFW_Q_subset_base64Binary "subset_base64Binary"

/** @brief afw_utf8_t for string subset_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_base64Binary;

/** @brief define for quoted string subset_boolean */
#define AFW_Q_subset_boolean "subset_boolean"

/** @brief afw_utf8_t for string subset_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_boolean;

/** @brief define for quoted string subset_date */
#define AFW_Q_subset_date "subset_date"

/** @brief afw_utf8_t for string subset_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_date;

/** @brief define for quoted string subset_dateTime */
#define AFW_Q_subset_dateTime "subset_dateTime"

/** @brief afw_utf8_t for string subset_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_dateTime;

/** @brief define for quoted string subset_dayTimeDuration */
#define AFW_Q_subset_dayTimeDuration "subset_dayTimeDuration"

/** @brief afw_utf8_t for string subset_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_dayTimeDuration;

/** @brief define for quoted string subset_double */
#define AFW_Q_subset_double "subset_double"

/** @brief afw_utf8_t for string subset_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_double;

/** @brief define for quoted string subset_hexBinary */
#define AFW_Q_subset_hexBinary "subset_hexBinary"

/** @brief afw_utf8_t for string subset_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_hexBinary;

/** @brief define for quoted string subset_integer */
#define AFW_Q_subset_integer "subset_integer"

/** @brief afw_utf8_t for string subset_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_integer;

/** @brief define for quoted string subset_rfc822Name */
#define AFW_Q_subset_rfc822Name "subset_rfc822Name"

/** @brief afw_utf8_t for string subset_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_rfc822Name;

/** @brief define for quoted string subset_string */
#define AFW_Q_subset_string "subset_string"

/** @brief afw_utf8_t for string subset_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_string;

/** @brief define for quoted string subset_time */
#define AFW_Q_subset_time "subset_time"

/** @brief afw_utf8_t for string subset_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_time;

/** @brief define for quoted string subset_x500Name */
#define AFW_Q_subset_x500Name "subset_x500Name"

/** @brief afw_utf8_t for string subset_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_x500Name;

/** @brief define for quoted string subset_yearMonthDuration */
#define AFW_Q_subset_yearMonthDuration "subset_yearMonthDuration"

/** @brief afw_utf8_t for string subset_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subset_yearMonthDuration;

/** @brief define for quoted string substitutedAdaptorId */
#define AFW_Q_substitutedAdaptorId "substitutedAdaptorId"

/** @brief afw_utf8_t for string substitutedAdaptorId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substitutedAdaptorId;

/** @brief define for quoted string substitutedEntireObjectId */
#define AFW_Q_substitutedEntireObjectId "substitutedEntireObjectId"

/** @brief afw_utf8_t for string substitutedEntireObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substitutedEntireObjectId;

/** @brief define for quoted string substitutedEntityObjectId */
#define AFW_Q_substitutedEntityObjectId "substitutedEntityObjectId"

/** @brief afw_utf8_t for string substitutedEntityObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substitutedEntityObjectId;

/** @brief define for quoted string substitutedObjectTypeId */
#define AFW_Q_substitutedObjectTypeId "substitutedObjectTypeId"

/** @brief afw_utf8_t for string substitutedObjectTypeId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substitutedObjectTypeId;

/** @brief define for quoted string substitutedPropertyName */
#define AFW_Q_substitutedPropertyName "substitutedPropertyName"

/** @brief afw_utf8_t for string substitutedPropertyName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substitutedPropertyName;

/** @brief define for quoted string substitutionOccurred */
#define AFW_Q_substitutionOccurred "substitutionOccurred"

/** @brief afw_utf8_t for string substitutionOccurred */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substitutionOccurred;

/** @brief define for quoted string substring */
#define AFW_Q_substring "substring"

/** @brief afw_utf8_t for string substring */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substring;

/** @brief define for quoted string substring_anyURI */
#define AFW_Q_substring_anyURI "substring_anyURI"

/** @brief afw_utf8_t for string substring_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substring_anyURI;

/** @brief define for quoted string substring_string */
#define AFW_Q_substring_string "substring_string"

/** @brief afw_utf8_t for string substring_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_substring_string;

/** @brief define for quoted string subtract */
#define AFW_Q_subtract "subtract"

/** @brief afw_utf8_t for string subtract */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract;

/** @brief define for quoted string subtract_dayTimeDuration */
#define AFW_Q_subtract_dayTimeDuration "subtract_dayTimeDuration"

/** @brief afw_utf8_t for string subtract_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract_dayTimeDuration;

/** @brief define for quoted string subtract_dayTimeDuration_dateTime */
#define AFW_Q_subtract_dayTimeDuration_dateTime "subtract_dayTimeDuration_dateTime"

/** @brief afw_utf8_t for string subtract_dayTimeDuration_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract_dayTimeDuration_dateTime;

/** @brief define for quoted string subtract_double */
#define AFW_Q_subtract_double "subtract_double"

/** @brief afw_utf8_t for string subtract_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract_double;

/** @brief define for quoted string subtract_integer */
#define AFW_Q_subtract_integer "subtract_integer"

/** @brief afw_utf8_t for string subtract_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract_integer;

/** @brief define for quoted string subtract_yearMonthDuration */
#define AFW_Q_subtract_yearMonthDuration "subtract_yearMonthDuration"

/** @brief afw_utf8_t for string subtract_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract_yearMonthDuration;

/** @brief define for quoted string subtract_yearMonthDuration_date */
#define AFW_Q_subtract_yearMonthDuration_date "subtract_yearMonthDuration_date"

/** @brief afw_utf8_t for string subtract_yearMonthDuration_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract_yearMonthDuration_date;

/** @brief define for quoted string subtract_yearMonthDuration_dateTime */
#define AFW_Q_subtract_yearMonthDuration_dateTime "subtract_yearMonthDuration_dateTime"

/** @brief afw_utf8_t for string subtract_yearMonthDuration_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtract_yearMonthDuration_dateTime;

/** @brief define for quoted string subtypePropertyName */
#define AFW_Q_subtypePropertyName "subtypePropertyName"

/** @brief afw_utf8_t for string subtypePropertyName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtypePropertyName;

/** @brief define for quoted string subtypeRegistryType */
#define AFW_Q_subtypeRegistryType "subtypeRegistryType"

/** @brief afw_utf8_t for string subtypeRegistryType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtypeRegistryType;

/** @brief define for quoted string subtypeRuntimeObjectType */
#define AFW_Q_subtypeRuntimeObjectType "subtypeRuntimeObjectType"

/** @brief afw_utf8_t for string subtypeRuntimeObjectType */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_subtypeRuntimeObjectType;

/** @brief define for quoted string success */
#define AFW_Q_success "success"

/** @brief afw_utf8_t for string success */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_success;

/** @brief define for quoted string suggestedObjectId */
#define AFW_Q_suggestedObjectId "suggestedObjectId"

/** @brief afw_utf8_t for string suggestedObjectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_suggestedObjectId;

/** @brief define for quoted string super */
#define AFW_Q_super "super"

/** @brief afw_utf8_t for string super */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_super;

/** @brief define for quoted string switch */
#define AFW_Q_switch "switch"

/** @brief afw_utf8_t for string switch */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_switch;

/** @brief define for quoted string systemInfo */
#define AFW_Q_systemInfo "systemInfo"

/** @brief afw_utf8_t for string systemInfo */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_systemInfo;

/** @brief define for quoted string tagId */
#define AFW_Q_tagId "tagId"

/** @brief afw_utf8_t for string tagId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_tagId;

/** @brief define for quoted string tags */
#define AFW_Q_tags "tags"

/** @brief afw_utf8_t for string tags */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_tags;

/** @brief define for quoted string tarballName */
#define AFW_Q_tarballName "tarballName"

/** @brief afw_utf8_t for string tarballName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_tarballName;

/** @brief define for quoted string template */
#define AFW_Q_template "template"

/** @brief afw_utf8_t for string template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_template;

/** @brief define for quoted string test */
#define AFW_Q_test "test"

/** @brief afw_utf8_t for string test */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test;

/** @brief define for quoted string testDataParameter */
#define AFW_Q_testDataParameter "testDataParameter"

/** @brief afw_utf8_t for string testDataParameter */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_testDataParameter;

/** @brief define for quoted string testScript */
#define AFW_Q_testScript "testScript"

/** @brief afw_utf8_t for string testScript */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_testScript;

/** @brief define for quoted string test_expression */
#define AFW_Q_test_expression "test_expression"

/** @brief afw_utf8_t for string test_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test_expression;

/** @brief define for quoted string test_expression_tuple */
#define AFW_Q_test_expression_tuple "test_expression_tuple"

/** @brief afw_utf8_t for string test_expression_tuple */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test_expression_tuple;

/** @brief define for quoted string test_hybrid */
#define AFW_Q_test_hybrid "test_hybrid"

/** @brief afw_utf8_t for string test_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test_hybrid;

/** @brief define for quoted string test_script */
#define AFW_Q_test_script "test_script"

/** @brief afw_utf8_t for string test_script */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test_script;

/** @brief define for quoted string test_script_runtime_support */
#define AFW_Q_test_script_runtime_support "test_script_runtime_support"

/** @brief afw_utf8_t for string test_script_runtime_support */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test_script_runtime_support;

/** @brief define for quoted string test_template */
#define AFW_Q_test_template "test_template"

/** @brief afw_utf8_t for string test_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test_template;

/** @brief define for quoted string test_value */
#define AFW_Q_test_value "test_value"

/** @brief afw_utf8_t for string test_value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_test_value;

/** @brief define for quoted string tests */
#define AFW_Q_tests "tests"

/** @brief afw_utf8_t for string tests */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_tests;

/** @brief define for quoted string then */
#define AFW_Q_then "then"

/** @brief afw_utf8_t for string then */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_then;

/** @brief define for quoted string this */
#define AFW_Q_this "this"

/** @brief afw_utf8_t for string this */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_this;

/** @brief define for quoted string threadCount */
#define AFW_Q_threadCount "threadCount"

/** @brief afw_utf8_t for string threadCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_threadCount;

/** @brief define for quoted string throw */
#define AFW_Q_throw "throw"

/** @brief afw_utf8_t for string throw */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_throw;

/** @brief define for quoted string time */
#define AFW_Q_time "time"

/** @brief afw_utf8_t for string time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time;

/** @brief define for quoted string time_at_least_one_member_of */
#define AFW_Q_time_at_least_one_member_of "time_at_least_one_member_of"

/** @brief afw_utf8_t for string time_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_at_least_one_member_of;

/** @brief define for quoted string time_bag */
#define AFW_Q_time_bag "time_bag"

/** @brief afw_utf8_t for string time_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_bag;

/** @brief define for quoted string time_bag_size */
#define AFW_Q_time_bag_size "time_bag_size"

/** @brief afw_utf8_t for string time_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_bag_size;

/** @brief define for quoted string time_eq */
#define AFW_Q_time_eq "time_eq"

/** @brief afw_utf8_t for string time_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_eq;

/** @brief define for quoted string time_ge */
#define AFW_Q_time_ge "time_ge"

/** @brief afw_utf8_t for string time_ge */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_ge;

/** @brief define for quoted string time_gt */
#define AFW_Q_time_gt "time_gt"

/** @brief afw_utf8_t for string time_gt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_gt;

/** @brief define for quoted string time_in_range */
#define AFW_Q_time_in_range "time_in_range"

/** @brief afw_utf8_t for string time_in_range */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_in_range;

/** @brief define for quoted string time_intersection */
#define AFW_Q_time_intersection "time_intersection"

/** @brief afw_utf8_t for string time_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_intersection;

/** @brief define for quoted string time_is_in */
#define AFW_Q_time_is_in "time_is_in"

/** @brief afw_utf8_t for string time_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_is_in;

/** @brief define for quoted string time_le */
#define AFW_Q_time_le "time_le"

/** @brief afw_utf8_t for string time_le */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_le;

/** @brief define for quoted string time_lt */
#define AFW_Q_time_lt "time_lt"

/** @brief afw_utf8_t for string time_lt */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_lt;

/** @brief define for quoted string time_one_and_only */
#define AFW_Q_time_one_and_only "time_one_and_only"

/** @brief afw_utf8_t for string time_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_one_and_only;

/** @brief define for quoted string time_set_equals */
#define AFW_Q_time_set_equals "time_set_equals"

/** @brief afw_utf8_t for string time_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_set_equals;

/** @brief define for quoted string time_subset */
#define AFW_Q_time_subset "time_subset"

/** @brief afw_utf8_t for string time_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_subset;

/** @brief define for quoted string time_to_string */
#define AFW_Q_time_to_string "time_to_string"

/** @brief afw_utf8_t for string time_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_to_string;

/** @brief define for quoted string time_union */
#define AFW_Q_time_union "time_union"

/** @brief afw_utf8_t for string time_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_time_union;

/** @brief define for quoted string title */
#define AFW_Q_title "title"

/** @brief afw_utf8_t for string title */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_title;

/** @brief define for quoted string to_anyURI */
#define AFW_Q_to_anyURI "to_anyURI"

/** @brief afw_utf8_t for string to_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_anyURI;

/** @brief define for quoted string to_anyURI_string */
#define AFW_Q_to_anyURI_string "to_anyURI_string"

/** @brief afw_utf8_t for string to_anyURI_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_anyURI_string;

/** @brief define for quoted string to_boolean */
#define AFW_Q_to_boolean "to_boolean"

/** @brief afw_utf8_t for string to_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_boolean;

/** @brief define for quoted string to_boolean_string */
#define AFW_Q_to_boolean_string "to_boolean_string"

/** @brief afw_utf8_t for string to_boolean_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_boolean_string;

/** @brief define for quoted string to_date */
#define AFW_Q_to_date "to_date"

/** @brief afw_utf8_t for string to_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_date;

/** @brief define for quoted string to_dateTime */
#define AFW_Q_to_dateTime "to_dateTime"

/** @brief afw_utf8_t for string to_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_dateTime;

/** @brief define for quoted string to_dateTime_string */
#define AFW_Q_to_dateTime_string "to_dateTime_string"

/** @brief afw_utf8_t for string to_dateTime_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_dateTime_string;

/** @brief define for quoted string to_date_string */
#define AFW_Q_to_date_string "to_date_string"

/** @brief afw_utf8_t for string to_date_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_date_string;

/** @brief define for quoted string to_dayTimeDuration */
#define AFW_Q_to_dayTimeDuration "to_dayTimeDuration"

/** @brief afw_utf8_t for string to_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_dayTimeDuration;

/** @brief define for quoted string to_dayTimeDuration_string */
#define AFW_Q_to_dayTimeDuration_string "to_dayTimeDuration_string"

/** @brief afw_utf8_t for string to_dayTimeDuration_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_dayTimeDuration_string;

/** @brief define for quoted string to_dnsName */
#define AFW_Q_to_dnsName "to_dnsName"

/** @brief afw_utf8_t for string to_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_dnsName;

/** @brief define for quoted string to_dnsName_string */
#define AFW_Q_to_dnsName_string "to_dnsName_string"

/** @brief afw_utf8_t for string to_dnsName_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_dnsName_string;

/** @brief define for quoted string to_double */
#define AFW_Q_to_double "to_double"

/** @brief afw_utf8_t for string to_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_double;

/** @brief define for quoted string to_double_integer */
#define AFW_Q_to_double_integer "to_double_integer"

/** @brief afw_utf8_t for string to_double_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_double_integer;

/** @brief define for quoted string to_double_string */
#define AFW_Q_to_double_string "to_double_string"

/** @brief afw_utf8_t for string to_double_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_double_string;

/** @brief define for quoted string to_integer */
#define AFW_Q_to_integer "to_integer"

/** @brief afw_utf8_t for string to_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_integer;

/** @brief define for quoted string to_integer_double */
#define AFW_Q_to_integer_double "to_integer_double"

/** @brief afw_utf8_t for string to_integer_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_integer_double;

/** @brief define for quoted string to_integer_string */
#define AFW_Q_to_integer_string "to_integer_string"

/** @brief afw_utf8_t for string to_integer_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_integer_string;

/** @brief define for quoted string to_ipAddress */
#define AFW_Q_to_ipAddress "to_ipAddress"

/** @brief afw_utf8_t for string to_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_ipAddress;

/** @brief define for quoted string to_ipAddress_string */
#define AFW_Q_to_ipAddress_string "to_ipAddress_string"

/** @brief afw_utf8_t for string to_ipAddress_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_ipAddress_string;

/** @brief define for quoted string to_rfc822Name */
#define AFW_Q_to_rfc822Name "to_rfc822Name"

/** @brief afw_utf8_t for string to_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_rfc822Name;

/** @brief define for quoted string to_rfc822Name_string */
#define AFW_Q_to_rfc822Name_string "to_rfc822Name_string"

/** @brief afw_utf8_t for string to_rfc822Name_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_rfc822Name_string;

/** @brief define for quoted string to_string */
#define AFW_Q_to_string "to_string"

/** @brief afw_utf8_t for string to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string;

/** @brief define for quoted string to_string_anyURI */
#define AFW_Q_to_string_anyURI "to_string_anyURI"

/** @brief afw_utf8_t for string to_string_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_anyURI;

/** @brief define for quoted string to_string_array */
#define AFW_Q_to_string_array "to_string_array"

/** @brief afw_utf8_t for string to_string_array */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_array;

/** @brief define for quoted string to_string_base64Binary */
#define AFW_Q_to_string_base64Binary "to_string_base64Binary"

/** @brief afw_utf8_t for string to_string_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_base64Binary;

/** @brief define for quoted string to_string_boolean */
#define AFW_Q_to_string_boolean "to_string_boolean"

/** @brief afw_utf8_t for string to_string_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_boolean;

/** @brief define for quoted string to_string_date */
#define AFW_Q_to_string_date "to_string_date"

/** @brief afw_utf8_t for string to_string_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_date;

/** @brief define for quoted string to_string_dateTime */
#define AFW_Q_to_string_dateTime "to_string_dateTime"

/** @brief afw_utf8_t for string to_string_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_dateTime;

/** @brief define for quoted string to_string_dayTimeDuration */
#define AFW_Q_to_string_dayTimeDuration "to_string_dayTimeDuration"

/** @brief afw_utf8_t for string to_string_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_dayTimeDuration;

/** @brief define for quoted string to_string_dnsName */
#define AFW_Q_to_string_dnsName "to_string_dnsName"

/** @brief afw_utf8_t for string to_string_dnsName */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_dnsName;

/** @brief define for quoted string to_string_double */
#define AFW_Q_to_string_double "to_string_double"

/** @brief afw_utf8_t for string to_string_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_double;

/** @brief define for quoted string to_string_expression */
#define AFW_Q_to_string_expression "to_string_expression"

/** @brief afw_utf8_t for string to_string_expression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_expression;

/** @brief define for quoted string to_string_hexBinary */
#define AFW_Q_to_string_hexBinary "to_string_hexBinary"

/** @brief afw_utf8_t for string to_string_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_hexBinary;

/** @brief define for quoted string to_string_hybrid */
#define AFW_Q_to_string_hybrid "to_string_hybrid"

/** @brief afw_utf8_t for string to_string_hybrid */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_hybrid;

/** @brief define for quoted string to_string_ia5String */
#define AFW_Q_to_string_ia5String "to_string_ia5String"

/** @brief afw_utf8_t for string to_string_ia5String */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_ia5String;

/** @brief define for quoted string to_string_integer */
#define AFW_Q_to_string_integer "to_string_integer"

/** @brief afw_utf8_t for string to_string_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_integer;

/** @brief define for quoted string to_string_ipAddress */
#define AFW_Q_to_string_ipAddress "to_string_ipAddress"

/** @brief afw_utf8_t for string to_string_ipAddress */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_ipAddress;

/** @brief define for quoted string to_string_null */
#define AFW_Q_to_string_null "to_string_null"

/** @brief afw_utf8_t for string to_string_null */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_null;

/** @brief define for quoted string to_string_object */
#define AFW_Q_to_string_object "to_string_object"

/** @brief afw_utf8_t for string to_string_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_object;

/** @brief define for quoted string to_string_objectId */
#define AFW_Q_to_string_objectId "to_string_objectId"

/** @brief afw_utf8_t for string to_string_objectId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_objectId;

/** @brief define for quoted string to_string_objectPath */
#define AFW_Q_to_string_objectPath "to_string_objectPath"

/** @brief afw_utf8_t for string to_string_objectPath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_objectPath;

/** @brief define for quoted string to_string_password */
#define AFW_Q_to_string_password "to_string_password"

/** @brief afw_utf8_t for string to_string_password */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_password;

/** @brief define for quoted string to_string_rfc822Name */
#define AFW_Q_to_string_rfc822Name "to_string_rfc822Name"

/** @brief afw_utf8_t for string to_string_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_rfc822Name;

/** @brief define for quoted string to_string_string */
#define AFW_Q_to_string_string "to_string_string"

/** @brief afw_utf8_t for string to_string_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_string;

/** @brief define for quoted string to_string_template */
#define AFW_Q_to_string_template "to_string_template"

/** @brief afw_utf8_t for string to_string_template */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_template;

/** @brief define for quoted string to_string_time */
#define AFW_Q_to_string_time "to_string_time"

/** @brief afw_utf8_t for string to_string_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_time;

/** @brief define for quoted string to_string_x500Name */
#define AFW_Q_to_string_x500Name "to_string_x500Name"

/** @brief afw_utf8_t for string to_string_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_x500Name;

/** @brief define for quoted string to_string_xpathExpression */
#define AFW_Q_to_string_xpathExpression "to_string_xpathExpression"

/** @brief afw_utf8_t for string to_string_xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_xpathExpression;

/** @brief define for quoted string to_string_yearMonthDuration */
#define AFW_Q_to_string_yearMonthDuration "to_string_yearMonthDuration"

/** @brief afw_utf8_t for string to_string_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_string_yearMonthDuration;

/** @brief define for quoted string to_time */
#define AFW_Q_to_time "to_time"

/** @brief afw_utf8_t for string to_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_time;

/** @brief define for quoted string to_time_string */
#define AFW_Q_to_time_string "to_time_string"

/** @brief afw_utf8_t for string to_time_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_time_string;

/** @brief define for quoted string to_x500Name */
#define AFW_Q_to_x500Name "to_x500Name"

/** @brief afw_utf8_t for string to_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_x500Name;

/** @brief define for quoted string to_x500Name_string */
#define AFW_Q_to_x500Name_string "to_x500Name_string"

/** @brief afw_utf8_t for string to_x500Name_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_x500Name_string;

/** @brief define for quoted string to_yearMonthDuration */
#define AFW_Q_to_yearMonthDuration "to_yearMonthDuration"

/** @brief afw_utf8_t for string to_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_yearMonthDuration;

/** @brief define for quoted string to_yearMonthDuration_string */
#define AFW_Q_to_yearMonthDuration_string "to_yearMonthDuration_string"

/** @brief afw_utf8_t for string to_yearMonthDuration_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_to_yearMonthDuration_string;

/** @brief define for quoted string trace */
#define AFW_Q_trace "trace"

/** @brief afw_utf8_t for string trace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace;

/** @brief define for quoted string trace1 */
#define AFW_Q_trace1 "trace1"

/** @brief afw_utf8_t for string trace1 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace1;

/** @brief define for quoted string trace2 */
#define AFW_Q_trace2 "trace2"

/** @brief afw_utf8_t for string trace2 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace2;

/** @brief define for quoted string trace3 */
#define AFW_Q_trace3 "trace3"

/** @brief afw_utf8_t for string trace3 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace3;

/** @brief define for quoted string trace4 */
#define AFW_Q_trace4 "trace4"

/** @brief afw_utf8_t for string trace4 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace4;

/** @brief define for quoted string trace5 */
#define AFW_Q_trace5 "trace5"

/** @brief afw_utf8_t for string trace5 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace5;

/** @brief define for quoted string trace6 */
#define AFW_Q_trace6 "trace6"

/** @brief afw_utf8_t for string trace6 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace6;

/** @brief define for quoted string trace7 */
#define AFW_Q_trace7 "trace7"

/** @brief afw_utf8_t for string trace7 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace7;

/** @brief define for quoted string trace8 */
#define AFW_Q_trace8 "trace8"

/** @brief afw_utf8_t for string trace8 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_trace8;

/** @brief define for quoted string transitory */
#define AFW_Q_transitory "transitory"

/** @brief afw_utf8_t for string transitory */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_transitory;

/** @brief define for quoted string true */
#define AFW_Q_true "true"

/** @brief afw_utf8_t for string true */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_true;

/** @brief define for quoted string try */
#define AFW_Q_try "try"

/** @brief afw_utf8_t for string try */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_try;

/** @brief define for quoted string type */
#define AFW_Q_type "type"

/** @brief afw_utf8_t for string type */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_type;

/** @brief define for quoted string typedValues */
#define AFW_Q_typedValues "typedValues"

/** @brief afw_utf8_t for string typedValues */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_typedValues;

/** @brief define for quoted string typedef */
#define AFW_Q_typedef "typedef"

/** @brief afw_utf8_t for string typedef */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_typedef;

/** @brief define for quoted string typeof */
#define AFW_Q_typeof "typeof"

/** @brief afw_utf8_t for string typeof */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_typeof;

/** @brief define for quoted string ubjson */
#define AFW_Q_ubjson "ubjson"

/** @brief afw_utf8_t for string ubjson */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_ubjson;

/** @brief define for quoted string uint32 */
#define AFW_Q_uint32 "uint32"

/** @brief afw_utf8_t for string uint32 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_uint32;

/** @brief define for quoted string unavailable */
#define AFW_Q_unavailable "unavailable"

/** @brief afw_utf8_t for string unavailable */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_unavailable;

/** @brief define for quoted string undeclared */
#define AFW_Q_undeclared "undeclared"

/** @brief afw_utf8_t for string undeclared */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_undeclared;

/** @brief define for quoted string undefined */
#define AFW_Q_undefined "undefined"

/** @brief afw_utf8_t for string undefined */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_undefined;

/** @brief define for quoted string unevaluated */
#define AFW_Q_unevaluated "unevaluated"

/** @brief afw_utf8_t for string unevaluated */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_unevaluated;

/** @brief define for quoted string unhandledErrors */
#define AFW_Q_unhandledErrors "unhandledErrors"

/** @brief afw_utf8_t for string unhandledErrors */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_unhandledErrors;

/** @brief define for quoted string union */
#define AFW_Q_union "union"

/** @brief afw_utf8_t for string union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union;

/** @brief define for quoted string union_anyURI */
#define AFW_Q_union_anyURI "union_anyURI"

/** @brief afw_utf8_t for string union_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_anyURI;

/** @brief define for quoted string union_base64Binary */
#define AFW_Q_union_base64Binary "union_base64Binary"

/** @brief afw_utf8_t for string union_base64Binary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_base64Binary;

/** @brief define for quoted string union_boolean */
#define AFW_Q_union_boolean "union_boolean"

/** @brief afw_utf8_t for string union_boolean */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_boolean;

/** @brief define for quoted string union_date */
#define AFW_Q_union_date "union_date"

/** @brief afw_utf8_t for string union_date */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_date;

/** @brief define for quoted string union_dateTime */
#define AFW_Q_union_dateTime "union_dateTime"

/** @brief afw_utf8_t for string union_dateTime */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_dateTime;

/** @brief define for quoted string union_dayTimeDuration */
#define AFW_Q_union_dayTimeDuration "union_dayTimeDuration"

/** @brief afw_utf8_t for string union_dayTimeDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_dayTimeDuration;

/** @brief define for quoted string union_double */
#define AFW_Q_union_double "union_double"

/** @brief afw_utf8_t for string union_double */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_double;

/** @brief define for quoted string union_hexBinary */
#define AFW_Q_union_hexBinary "union_hexBinary"

/** @brief afw_utf8_t for string union_hexBinary */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_hexBinary;

/** @brief define for quoted string union_integer */
#define AFW_Q_union_integer "union_integer"

/** @brief afw_utf8_t for string union_integer */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_integer;

/** @brief define for quoted string union_rfc822Name */
#define AFW_Q_union_rfc822Name "union_rfc822Name"

/** @brief afw_utf8_t for string union_rfc822Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_rfc822Name;

/** @brief define for quoted string union_string */
#define AFW_Q_union_string "union_string"

/** @brief afw_utf8_t for string union_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_string;

/** @brief define for quoted string union_time */
#define AFW_Q_union_time "union_time"

/** @brief afw_utf8_t for string union_time */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_time;

/** @brief define for quoted string union_x500Name */
#define AFW_Q_union_x500Name "union_x500Name"

/** @brief afw_utf8_t for string union_x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_x500Name;

/** @brief define for quoted string union_yearMonthDuration */
#define AFW_Q_union_yearMonthDuration "union_yearMonthDuration"

/** @brief afw_utf8_t for string union_yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_union_yearMonthDuration;

/** @brief define for quoted string unique */
#define AFW_Q_unique "unique"

/** @brief afw_utf8_t for string unique */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_unique;

/** @brief define for quoted string unknown */
#define AFW_Q_unknown "unknown"

/** @brief afw_utf8_t for string unknown */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_unknown;

/** @brief define for quoted string untypedFunctionId */
#define AFW_Q_untypedFunctionId "untypedFunctionId"

/** @brief afw_utf8_t for string untypedFunctionId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_untypedFunctionId;

/** @brief define for quoted string update */
#define AFW_Q_update "update"

/** @brief afw_utf8_t for string update */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_update;

/** @brief define for quoted string updateObjectCount */
#define AFW_Q_updateObjectCount "updateObjectCount"

/** @brief afw_utf8_t for string updateObjectCount */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_updateObjectCount;

/** @brief define for quoted string update_object */
#define AFW_Q_update_object "update_object"

/** @brief afw_utf8_t for string update_object */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_update_object;

/** @brief define for quoted string update_object_with_uri */
#define AFW_Q_update_object_with_uri "update_object_with_uri"

/** @brief afw_utf8_t for string update_object_with_uri */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_update_object_with_uri;

/** @brief define for quoted string uriPrefix */
#define AFW_Q_uriPrefix "uriPrefix"

/** @brief afw_utf8_t for string uriPrefix */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_uriPrefix;

/** @brief define for quoted string uriRelated */
#define AFW_Q_uriRelated "uriRelated"

/** @brief afw_utf8_t for string uriRelated */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_uriRelated;

/** @brief define for quoted string uriServiceConf */
#define AFW_Q_uriServiceConf "uriServiceConf"

/** @brief afw_utf8_t for string uriServiceConf */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_uriServiceConf;

/** @brief define for quoted string urlEncodedRQLString */
#define AFW_Q_urlEncodedRQLString "urlEncodedRQLString"

/** @brief afw_utf8_t for string urlEncodedRQLString */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_urlEncodedRQLString;

/** @brief define for quoted string url_decode */
#define AFW_Q_url_decode "url_decode"

/** @brief afw_utf8_t for string url_decode */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_url_decode;

/** @brief define for quoted string url_encode */
#define AFW_Q_url_encode "url_encode"

/** @brief afw_utf8_t for string url_encode */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_url_encode;

/** @brief define for quoted string url_encode_anyURI */
#define AFW_Q_url_encode_anyURI "url_encode_anyURI"

/** @brief afw_utf8_t for string url_encode_anyURI */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_url_encode_anyURI;

/** @brief define for quoted string url_encode_string */
#define AFW_Q_url_encode_string "url_encode_string"

/** @brief afw_utf8_t for string url_encode_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_url_encode_string;

/** @brief define for quoted string useDefaultProcessing */
#define AFW_Q_useDefaultProcessing "useDefaultProcessing"

/** @brief afw_utf8_t for string useDefaultProcessing */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_useDefaultProcessing;

/** @brief define for quoted string useExecuteFunction */
#define AFW_Q_useExecuteFunction "useExecuteFunction"

/** @brief afw_utf8_t for string useExecuteFunction */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_useExecuteFunction;

/** @brief define for quoted string user */
#define AFW_Q_user "user"

/** @brief afw_utf8_t for string user */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_user;

/** @brief define for quoted string userinfo */
#define AFW_Q_userinfo "userinfo"

/** @brief afw_utf8_t for string userinfo */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_userinfo;

/** @brief define for quoted string using */
#define AFW_Q_using "using"

/** @brief afw_utf8_t for string using */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_using;

/** @brief define for quoted string value */
#define AFW_Q_value "value"

/** @brief afw_utf8_t for string value */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_value;

/** @brief define for quoted string valueAccessor */
#define AFW_Q_valueAccessor "valueAccessor"

/** @brief afw_utf8_t for string valueAccessor */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_valueAccessor;

/** @brief define for quoted string valueInfId */
#define AFW_Q_valueInfId "valueInfId"

/** @brief afw_utf8_t for string valueInfId */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_valueInfId;

/** @brief define for quoted string valuePath */
#define AFW_Q_valuePath "valuePath"

/** @brief afw_utf8_t for string valuePath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_valuePath;

/** @brief define for quoted string var */
#define AFW_Q_var "var"

/** @brief afw_utf8_t for string var */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_var;

/** @brief define for quoted string variable */
#define AFW_Q_variable "variable"

/** @brief afw_utf8_t for string variable */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_variable;

/** @brief define for quoted string variable_exists */
#define AFW_Q_variable_exists "variable_exists"

/** @brief afw_utf8_t for string variable_exists */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_variable_exists;

/** @brief define for quoted string variable_get */
#define AFW_Q_variable_get "variable_get"

/** @brief afw_utf8_t for string variable_get */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_variable_get;

/** @brief define for quoted string variable_is_not_null */
#define AFW_Q_variable_is_not_null "variable_is_not_null"

/** @brief afw_utf8_t for string variable_is_not_null */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_variable_is_not_null;

/** @brief define for quoted string version */
#define AFW_Q_version "version"

/** @brief afw_utf8_t for string version */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_version;

/** @brief define for quoted string versionWithGitInfo */
#define AFW_Q_versionWithGitInfo "versionWithGitInfo"

/** @brief afw_utf8_t for string versionWithGitInfo */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_versionWithGitInfo;

/** @brief define for quoted string void */
#define AFW_Q_void "void"

/** @brief afw_utf8_t for string void */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_void;

/** @brief define for quoted string void_operator */
#define AFW_Q_void_operator "void_operator"

/** @brief afw_utf8_t for string void_operator */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_void_operator;

/** @brief define for quoted string warning */
#define AFW_Q_warning "warning"

/** @brief afw_utf8_t for string warning */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_warning;

/** @brief define for quoted string while */
#define AFW_Q_while "while"

/** @brief afw_utf8_t for string while */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_while;

/** @brief define for quoted string whitespace */
#define AFW_Q_whitespace "whitespace"

/** @brief afw_utf8_t for string whitespace */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_whitespace;

/** @brief define for quoted string with */
#define AFW_Q_with "with"

/** @brief afw_utf8_t for string with */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_with;

/** @brief define for quoted string write */
#define AFW_Q_write "write"

/** @brief afw_utf8_t for string write */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_write;

/** @brief define for quoted string write_internal */
#define AFW_Q_write_internal "write_internal"

/** @brief afw_utf8_t for string write_internal */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_write_internal;

/** @brief define for quoted string writeln */
#define AFW_Q_writeln "writeln"

/** @brief afw_utf8_t for string writeln */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_writeln;

/** @brief define for quoted string x500Name */
#define AFW_Q_x500Name "x500Name"

/** @brief afw_utf8_t for string x500Name */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name;

/** @brief define for quoted string x500Name_at_least_one_member_of */
#define AFW_Q_x500Name_at_least_one_member_of "x500Name_at_least_one_member_of"

/** @brief afw_utf8_t for string x500Name_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_at_least_one_member_of;

/** @brief define for quoted string x500Name_bag */
#define AFW_Q_x500Name_bag "x500Name_bag"

/** @brief afw_utf8_t for string x500Name_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_bag;

/** @brief define for quoted string x500Name_bag_size */
#define AFW_Q_x500Name_bag_size "x500Name_bag_size"

/** @brief afw_utf8_t for string x500Name_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_bag_size;

/** @brief define for quoted string x500Name_eq */
#define AFW_Q_x500Name_eq "x500Name_eq"

/** @brief afw_utf8_t for string x500Name_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_eq;

/** @brief define for quoted string x500Name_intersection */
#define AFW_Q_x500Name_intersection "x500Name_intersection"

/** @brief afw_utf8_t for string x500Name_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_intersection;

/** @brief define for quoted string x500Name_is_in */
#define AFW_Q_x500Name_is_in "x500Name_is_in"

/** @brief afw_utf8_t for string x500Name_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_is_in;

/** @brief define for quoted string x500Name_match */
#define AFW_Q_x500Name_match "x500Name_match"

/** @brief afw_utf8_t for string x500Name_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_match;

/** @brief define for quoted string x500Name_one_and_only */
#define AFW_Q_x500Name_one_and_only "x500Name_one_and_only"

/** @brief afw_utf8_t for string x500Name_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_one_and_only;

/** @brief define for quoted string x500Name_regexp_match */
#define AFW_Q_x500Name_regexp_match "x500Name_regexp_match"

/** @brief afw_utf8_t for string x500Name_regexp_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_regexp_match;

/** @brief define for quoted string x500Name_set_equals */
#define AFW_Q_x500Name_set_equals "x500Name_set_equals"

/** @brief afw_utf8_t for string x500Name_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_set_equals;

/** @brief define for quoted string x500Name_subset */
#define AFW_Q_x500Name_subset "x500Name_subset"

/** @brief afw_utf8_t for string x500Name_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_subset;

/** @brief define for quoted string x500Name_to_string */
#define AFW_Q_x500Name_to_string "x500Name_to_string"

/** @brief afw_utf8_t for string x500Name_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_to_string;

/** @brief define for quoted string x500Name_union */
#define AFW_Q_x500Name_union "x500Name_union"

/** @brief afw_utf8_t for string x500Name_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_x500Name_union;

/** @brief define for quoted string xacml */
#define AFW_Q_xacml "xacml"

/** @brief afw_utf8_t for string xacml */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xacml;

/** @brief define for quoted string xctxUUID */
#define AFW_Q_xctxUUID "xctxUUID"

/** @brief afw_utf8_t for string xctxUUID */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xctxUUID;

/** @brief define for quoted string xml */
#define AFW_Q_xml "xml"

/** @brief afw_utf8_t for string xml */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xml;

/** @brief define for quoted string xpath */
#define AFW_Q_xpath "xpath"

/** @brief afw_utf8_t for string xpath */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpath;

/** @brief define for quoted string xpathExpression */
#define AFW_Q_xpathExpression "xpathExpression"

/** @brief afw_utf8_t for string xpathExpression */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpathExpression;

/** @brief define for quoted string xpath_node_count */
#define AFW_Q_xpath_node_count "xpath_node_count"

/** @brief afw_utf8_t for string xpath_node_count */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpath_node_count;

/** @brief define for quoted string xpath_node_count_1_0 */
#define AFW_Q_xpath_node_count_1_0 "xpath_node_count_1_0"

/** @brief afw_utf8_t for string xpath_node_count_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpath_node_count_1_0;

/** @brief define for quoted string xpath_node_eq */
#define AFW_Q_xpath_node_eq "xpath_node_eq"

/** @brief afw_utf8_t for string xpath_node_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpath_node_eq;

/** @brief define for quoted string xpath_node_eq_1_0 */
#define AFW_Q_xpath_node_eq_1_0 "xpath_node_eq_1_0"

/** @brief afw_utf8_t for string xpath_node_eq_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpath_node_eq_1_0;

/** @brief define for quoted string xpath_node_match */
#define AFW_Q_xpath_node_match "xpath_node_match"

/** @brief afw_utf8_t for string xpath_node_match */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpath_node_match;

/** @brief define for quoted string xpath_node_match_1_0 */
#define AFW_Q_xpath_node_match_1_0 "xpath_node_match_1_0"

/** @brief afw_utf8_t for string xpath_node_match_1_0 */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_xpath_node_match_1_0;

/** @brief define for quoted string yaml */
#define AFW_Q_yaml "yaml"

/** @brief afw_utf8_t for string yaml */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yaml;

/** @brief define for quoted string yearMonthDuration */
#define AFW_Q_yearMonthDuration "yearMonthDuration"

/** @brief afw_utf8_t for string yearMonthDuration */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration;

/** @brief define for quoted string yearMonthDuration_1_0_at_least_one_member_of */
#define AFW_Q_yearMonthDuration_1_0_at_least_one_member_of "yearMonthDuration_1_0_at_least_one_member_of"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_at_least_one_member_of;

/** @brief define for quoted string yearMonthDuration_1_0_bag */
#define AFW_Q_yearMonthDuration_1_0_bag "yearMonthDuration_1_0_bag"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_bag;

/** @brief define for quoted string yearMonthDuration_1_0_bag_size */
#define AFW_Q_yearMonthDuration_1_0_bag_size "yearMonthDuration_1_0_bag_size"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_bag_size;

/** @brief define for quoted string yearMonthDuration_1_0_eq */
#define AFW_Q_yearMonthDuration_1_0_eq "yearMonthDuration_1_0_eq"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_eq;

/** @brief define for quoted string yearMonthDuration_1_0_intersection */
#define AFW_Q_yearMonthDuration_1_0_intersection "yearMonthDuration_1_0_intersection"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_intersection;

/** @brief define for quoted string yearMonthDuration_1_0_is_in */
#define AFW_Q_yearMonthDuration_1_0_is_in "yearMonthDuration_1_0_is_in"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_is_in;

/** @brief define for quoted string yearMonthDuration_1_0_one_and_only */
#define AFW_Q_yearMonthDuration_1_0_one_and_only "yearMonthDuration_1_0_one_and_only"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_one_and_only;

/** @brief define for quoted string yearMonthDuration_1_0_set_equals */
#define AFW_Q_yearMonthDuration_1_0_set_equals "yearMonthDuration_1_0_set_equals"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_set_equals;

/** @brief define for quoted string yearMonthDuration_1_0_subset */
#define AFW_Q_yearMonthDuration_1_0_subset "yearMonthDuration_1_0_subset"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_subset;

/** @brief define for quoted string yearMonthDuration_1_0_union */
#define AFW_Q_yearMonthDuration_1_0_union "yearMonthDuration_1_0_union"

/** @brief afw_utf8_t for string yearMonthDuration_1_0_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_1_0_union;

/** @brief define for quoted string yearMonthDuration_at_least_one_member_of */
#define AFW_Q_yearMonthDuration_at_least_one_member_of "yearMonthDuration_at_least_one_member_of"

/** @brief afw_utf8_t for string yearMonthDuration_at_least_one_member_of */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_at_least_one_member_of;

/** @brief define for quoted string yearMonthDuration_bag */
#define AFW_Q_yearMonthDuration_bag "yearMonthDuration_bag"

/** @brief afw_utf8_t for string yearMonthDuration_bag */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_bag;

/** @brief define for quoted string yearMonthDuration_bag_size */
#define AFW_Q_yearMonthDuration_bag_size "yearMonthDuration_bag_size"

/** @brief afw_utf8_t for string yearMonthDuration_bag_size */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_bag_size;

/** @brief define for quoted string yearMonthDuration_eq */
#define AFW_Q_yearMonthDuration_eq "yearMonthDuration_eq"

/** @brief afw_utf8_t for string yearMonthDuration_eq */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_eq;

/** @brief define for quoted string yearMonthDuration_intersection */
#define AFW_Q_yearMonthDuration_intersection "yearMonthDuration_intersection"

/** @brief afw_utf8_t for string yearMonthDuration_intersection */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_intersection;

/** @brief define for quoted string yearMonthDuration_is_in */
#define AFW_Q_yearMonthDuration_is_in "yearMonthDuration_is_in"

/** @brief afw_utf8_t for string yearMonthDuration_is_in */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_is_in;

/** @brief define for quoted string yearMonthDuration_one_and_only */
#define AFW_Q_yearMonthDuration_one_and_only "yearMonthDuration_one_and_only"

/** @brief afw_utf8_t for string yearMonthDuration_one_and_only */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_one_and_only;

/** @brief define for quoted string yearMonthDuration_set_equals */
#define AFW_Q_yearMonthDuration_set_equals "yearMonthDuration_set_equals"

/** @brief afw_utf8_t for string yearMonthDuration_set_equals */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_set_equals;

/** @brief define for quoted string yearMonthDuration_subset */
#define AFW_Q_yearMonthDuration_subset "yearMonthDuration_subset"

/** @brief afw_utf8_t for string yearMonthDuration_subset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_subset;

/** @brief define for quoted string yearMonthDuration_to_string */
#define AFW_Q_yearMonthDuration_to_string "yearMonthDuration_to_string"

/** @brief afw_utf8_t for string yearMonthDuration_to_string */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_to_string;

/** @brief define for quoted string yearMonthDuration_union */
#define AFW_Q_yearMonthDuration_union "yearMonthDuration_union"

/** @brief afw_utf8_t for string yearMonthDuration_union */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_yearMonthDuration_union;

/** @brief define for quoted string zeroOffset */
#define AFW_Q_zeroOffset "zeroOffset"

/** @brief afw_utf8_t for string zeroOffset */
AFW_DECLARE_CONST_DATA(afw_utf8_t) afw_s_zeroOffset;


#endif /* __AFW_STRINGS_H__ */
