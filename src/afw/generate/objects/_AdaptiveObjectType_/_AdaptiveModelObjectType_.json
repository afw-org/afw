{
    "allowEntity": false,
    "collectionURIs": [
        "/afw/_AdaptiveCollection_/core"
    ],
    "description": "The adaptive object type of all adaptive model object type objects.",
    "objectType": "_AdaptiveModelObjectType_",
    "propertyTypes": {
        "_meta_": {
            "label": " Meta ",
            "parentPaths": [
                "/afw/_AdaptiveObjectType_/_AdaptiveObjectType_/propertyTypes"
            ]
        },
        "custom": {
            "brief": "Custom variables accessed throughout this Object Type",
            "dataType": "object",
            "dataTypeParameter": "_AdaptiveTemplateProperties_",
            "description": "Object type level qualifier custom:: variables available to model expressions.",
            "label": "Custom"
        },
        "mappedObjectType": {
            "brief": "The objectTypeId to map this to and from",
            "dataType": "string",
            "description": "This is the objectType used internally by the adaptor for this object type. It not specified, current::objectType is used.",
            "label": "Mapped Object Type"
        },
        "onAddObject": {
            "brief": "Script to execute on add_object()",
            "contextType": "modelAddObject",
            "dataType": "script",
            "dataTypeParameter": "object _AdaptiveJournalEntry_",
            "description": "This can be specified to override default add_object() processing. It can return current::useDefaultProcessing if default processing should occur as if onAddObject was not specified.",
            "label": "On add_object",
            "skeleton": "/**\n * onAddObject\n * \n * This can be specified to override default add_object() processing.\n * \n * Some notable context variables are: \n *     current::adaptorId\n *     current::objectType\n *     current::object\n *     current::objectId\n * \n * An _AdaptiveAction_ object should be returned.\n */\n\n/*\n * Special handling for specific objects.\n *\n * For example, to handle objectType MySpecialType a special way:\n */\n/*\nif (objectType == 'MySpecialType') {\n    let (object '_AdaptiveAction_') action = {};\n\n    // Handle special by setting properties in the action object or by\n    // doing the action directly.\n\n    return action;\n}\n*/\n\n/*\n * To handle objects that don't need special handling, call the default handler.\n */\nreturn model_default_add_object_action(\n    current::adaptorId,\n    current::objectType,\n    current::object,\n    current::objectId );\n    "
        },
        "onDeleteObject": {
            "brief": "Script to execute on delete_object()",
            "dataType": "script",
            "dataTypeParameter": "object _AdaptiveJournalEntry_",
            "contextType": "modelDeleteObject",
            "description": "This can be specified to override default delete_object() processing. It can return current::useDefaultProcessing if default processing should occur as if onDeleteObject was not specified.",
            "label": "On delete_object",
            "skeleton": "/** FIXME Add skeleton */"
        },
        "onGetInitialObjectId": {
            "brief": "Optional script value is evaluated to determine the objectId on add requests",
            "contextType": "modelInitialObjectId",
            "dataType": "script",
            "dataTypeParameter": "objectId",
            "description": "This optional script value is evaluated to determine the objectId on add requests. If not specified, current::objectId is used and if that is not specified, the adaptor must be capable of assigning one. Even if specified, the adaptor is free to ignore this.",
            "label": "On Get Initial ObjectId"
        },
        "onGetObject": {
            "brief": "Script to execute on get_object()",
            "contextType": "modelGetObject",
            "dataType": "script",
            "dataTypeParameter": "object",
            "description": "This can be specified to override default get_object() processing. The script can return an object or undefined if object was to found. It can also return current::useDefaultProcessing if default processing should occur as if onGetObject was not specified.",
            "label": "On get_object",
            "skeleton": "/** FIXME Add skeleton */"
        },
        "onModifyObject": {
            "brief": "Script to execute on modify_object()",
            "contextType": "modelModifyObject",
            "dataType": "script",
            "dataTypeParameter": "object _AdaptiveJournalEntry_",
            "description": "This can be specified to override default modify_object() processing. It can return current::useDefaultProcessing if default processing should occur as if onModifyObject was not specified.",
            "label": "On modify_object",
            "skeleton": "/** FIXME Add skeleton */"
        },
        "onReplaceObject": {
            "brief": "Script to execute on replace_object()",
            "contextType": "modelReplaceObject",
            "dataType": "script",
            "dataTypeParameter": "object _AdaptiveJournalEntry_",
            "description": "This can be specified to override default replace_object() processing. It can return current::useDefaultProcessing if default processing should occur as if onReplaceObjects was not specified.",
            "label": "On replace_object",
            "skeleton": "/** FIXME Add skeleton */"
        },
        "onRetrieveObjects": {
            "brief": "Script to execute on retrieve_objects()",
            "contextType": "modelRetrieveObjects",
            "dataType": "script",
            "dataTypeParameter": "null",
            "description": "This can be specified to override default retrieve_objects() processing. This script should call current::returnObject(object) with each object to return. It can also return current::useDefaultProcessing if default processing should occur as if onRetrieveObjects was not specified.",
            "label": "On retrieve_objects",
            "skeleton": "/** FIXME Add skeleton */"
        },
        "propertyTypes": {
            "brief": "Property types for this model object type",
            "dataType": "object",
            "dataTypeParameter": "_AdaptiveModelPropertyTypes_",
            "description": "The name of the properties in this object corresponds to the property name of an instance of this object type and is its property type object.",
            "label": "Property Types"
        }
    }
}
