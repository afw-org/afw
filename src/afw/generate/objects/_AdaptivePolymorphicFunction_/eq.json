{
    "brief": "Checks for equal",
    "category": "polymorphic",
    "dataTypeMethod": true,
    "description": "Determine if <dataType> arg1 is equal to the value of arg2 converted to the data type of arg1 then return the boolean result. Use 'eqx' ('===') instead if you want false to be returned if arg1 and arg2's data type don't match.",
    "functionId": "eq",
    "functionLabel": "eq",
    "errorsThrown": [
        {
            "error": "conversion",
            "reason": "arg2 cannot be converted to the data type of arg1."
        }
    ],
    "op": "==",
    "parameters": [
        {
            "name": "arg1",
            "polymorphicDataType": true,
            "canBeUndefined": true
        },
        {
            "name": "arg2",
            "canBeUndefined": true
        }
    ],
    "polymorphic": true,
    "polymorphicDataTypes": [
        "anyURI",
        "array",
        "base64Binary",
        "boolean",
        "date",
        "dateTime",
        "dayTimeDuration",
        "dnsName",
        "double",
        "function",
        "hexBinary",
        "ia5String",
        "integer",
        "ipAddress",
        "object",
        "objectId",
        "objectPath",
        "password",
        "regexp",
        "rfc822Name",
        "script",
        "string",
        "template",
        "time",
        "x500Name",
        "xpathExpression",
        "yearMonthDuration"
    ],
    "polymorphicExecuteFunction": "afw_function_execute_eq",
    "polymorphicExecuteFunctionEvaluatesFirstParameter": true,
    "pure": true,
    "returns": {
        "dataType": "boolean"
    }
}