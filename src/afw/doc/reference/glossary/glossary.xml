<?xml version="1.0" encoding="utf-8" ?>
<section>
    <title>Glossary</title>
    <paragraph>
        The following terms are used throughout the Adaptive Framework documentation. 
    </paragraph>
    <paragraph>
        In order to distinguish between broader terms used in technology and industry, 
        you will find we use the prefix "Adaptive" liberally. This is done to avoid 
        confusion with more common terms, which often change semantics for a given time
        or software context.
    </paragraph>
    <glossary>
        <term>
            <identifier>Adaptive Layout Component</identifier>
            <definition>
                An Adaptive Layout Component is a UI primitive. It takes 
                parameters and renders a portion of the UI, along side other 
                components, through a composition relationship. It can be 
                implemented by the appropriate technology/framework that is 
                being used to build user interfaces.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Data Type</identifier>
            <definition>
                The data type of an adaptive value. Each adaptive data type is described by an adaptive
                object that has properties concerning the data type,  such as how values of the data type
                are represented in c, json, etc. An adaptive data type also has associated functions to 
                convert a value of the data type to internal representation, to string, to compare two values,
                etc.
            </definition>
        </term>  
        <term>
            <identifier>Adaptive Framework</identifier>
            <definition>
                A set of interfaces for developing servers, requests, object access, etc. in an adaptive way,
                along with implementations, language bindings, commands, and administrative applications.
            </definition>
        </term>   
        <term>
            <identifier>Adaptive Framework Application</identifier>
            <definition>
                Any application built on top of Adaptive framework.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Framework Core</identifier>
            <definition>
                The core functions and objects built into libafw.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Framework Environment</identifier>
            <definition>
                The environment includes registered adaptor factories, adaptors, configuration handlers, content types, data types, functions, module paths, 
                request handler factories, request handlers, value interfaces, etc. Adaptive Framework has a core environment that can be extended by extensions.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Framework Extension</identifier>
            <definition>
                A loadable module that extends the Adaptive Framework environment. Extensions can register all of the type of things that are in the core 
                environment. There are extensions included with Adaptive Framework plus additional extensions can be created by using libafw and the 
                associated headers.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Function</identifier>
            <definition>
                A function that is defined by Adaptive Framework Core, or by an extension loaded by core, which is declared and may be invoked
                by expressions, scripts or templates.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Layout</identifier>
            <definition>
                An adaptive object that describes a UI layout and how values map in as similar way to an adaptive model.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Model</identifier>
            <definition>
                An adaptive object that maps the properties of an adaptive object of a model adaptive object type to their source and destination values, 
                possibly in one or more other adaptors.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Service</identifier>
            <definition>
                An adaptive object that contains configuration for a service type such as an adaptor, log, or authorizationHandler, along with 
                options for how to start the service.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Request Handler</identifier>
            <definition>
                
            </definition>
        </term>
        <term>
            <identifier>Adaptive Bindings</identifier>
            <definition>
                Language-specific implementations that wrap Adaptive Functions provided by Adaptive Framework Core.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Property Type</identifier>
            <definition>
                An adaptive object that contains metadata for a property of an object, such as data type, constraints, description, label, etc.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Object</identifier>
            <definition>
                An adaptive object is zero or more pairs of property name and adaptive value. An adaptive
                object can have an associated adaptive object type that contains additional information
                about the object and its properties.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Object Type</identifier>
            <definition>
                An adaptive object type is an adaptive object that can be associated with another adaptive
                object to define additional information about that object and its properties.

                An adaptive object type object itself has an associated adaptive object type, _AdaptiveObjectType_,
                which can be referenced to see what information is available.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Object Id</identifier>
            <definition>
                An adaptive object id is a string used to uniquely identify an object for a given adaptor and 
                object type.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Object Path</identifier>
            <definition>
                An adaptive object path is a string used to uniquely identify an adaptive object.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Object Store</identifier>
            <definition>
                Any place adaptive objects can be stored and accessed via an adaptor.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Expression</identifier>
            <definition>
                A value that is computed by an expression, which may use any combination of adaptive functions 
                and operators.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Expression Tuple</identifier>
            <definition>
                An adaptive expression, represented by in tuple format, making it easier to parse and interpret for 
                tools or user interfaces.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Context</identifier>
            <definition>
                
            </definition>
        </term>
        <term>
            <identifier>Adaptive Flag</identifier>
            <definition>
                
            </definition>
        </term>
        <term>
            <identifier>Adaptive Hybrid</identifier>
            <definition>
                A data type whose value may contain either an expression, expression tuple or template.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Script</identifier>
            <definition>
                A language that can be executed by core, which contains both functional and procedural
                constructs, and used to perform complex custom tasks defined by users to operate on
                adaptive objects and values.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Template</identifier>
            <definition>
                A string value that may contain adaptive expressions or even scripts, embedded inline.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Schema</identifier>
            <definition>
                A collection of Object Types returned by an adaptor.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Value</identifier>
            <definition>
                An adaptive value holds an evaluated value of a particular adaptive data type or a value
                that can be evaluated via an adaptive value interface.
            </definition>
        </term>
        <term>
            <identifier>Adaptive Value Interface</identifier>
            <definition>
                Each adaptive value has a adaptive value interface used to evaluate and get its data type.
                There is an adaptive value interface for each data type as well others for calls, expression
                definitions, function definitions, lambda definitions, etc.
            </definition>
        </term>
        <term>
            <identifier>Adaptor</identifier>
            <definition>
                An adaptor is a implementation of the necessary Adaptive Framework interfaces to provide access
                to adaptive objects and associated adaptive object types, along with adaptor specific tools and
                documentation.

                Each implementation is identified by an adaptorType and is responsible for providing a common way
                of accessing adaptive objects for its associated backend. For instance, adaptorType ldap provides
                a way to access objects via a ldap server and provides an _AdaptiveObjectType_ object for each
                object class which is manufactured from information derived from the ldap schema. In the case of
                adaptorType dbd, the adaptor provides an object for each row in a table and an _AdaptiveObjectType_
                object for each table.
            </definition>
        </term>
        <term>
            <identifier>Log</identifier>
            <definition>
                
            </definition>
        </term>
        <term>
            <identifier>Authorization Handler</identifier>
            <definition>
                
            </definition>
        </term>
        <term>
            <identifier>Content Type</identifier>
            <definition>
                
            </definition>
        </term>
        <term>
            <identifier>Qualified Variable</identifier>
            <definition>
                
            </definition>
        </term>
        <term>
            <identifier>Consume</identifier>
            <definition>
                To process a journal entry.
            </definition>
        </term>
        <term>
            <identifier>Consumer</identifier>
            <definition>
                Anything that consumes a journal entry.
            </definition>
        </term>
        <term>
            <identifier>Embedded Inheritance</identifier>
            <definition>
                Adaptive objects that are property values of an adaptive object inherit the properties of the embedding object's parent's properties 
                of the same property name.
            </definition>
        </term>
        <term>
            <identifier>Embedded Object</identifier>
            <definition>
                An adaptive object that is the value of a property of another adaptive object.
            </definition>
        </term>
        <term>
            <identifier>Embedder</identifier>
            <definition>
                An embedding object, property name, and inheritance options.
            </definition>
        </term>
        <term>
            <identifier>Embedding Object</identifier>
            <definition>
                The adaptive object that an embedded object is a property value of.
            </definition>
        </term>
        <term>
            <identifier>Inherit</identifier>
            <definition>
                The act of including uniquely named properties from another adaptive object.
            </definition>
        </term>
        <term>
            <identifier>Instance</identifier>
            <definition>
                A single occurrence of an adaptive object.
            </definition>
        </term>
        <term>
            <identifier>Journal</identifier>
            <definition>
                An ordered list of journal entries.
            </definition>
        </term>
        <term>
            <identifier>Journal Cursor</identifier>
            <definition>
                A token used to reference a journal entry in a journal.
            </definition>
        </term>
        <term>
            <identifier>Journal Entry</identifier>
            <definition>
                An entry recording an action, event, etc. in a journal. In Adaptive Framework, this is often a record of an action taken though an adaptor.
            </definition>
        </term>
        <term>
            <identifier>Entity</identifier>
            <definition>
                An adaptive object that is not embedded in another adaptive object.
            </definition>
        </term>
        <term>
            <identifier>Array</identifier>
            <definition>
                An array of adaptive values that can be of different adaptive value and data types.
            </definition>
        </term>
        <term>
            <identifier>Own Property</identifier>
            <definition>
                A property of an adaptive object that is not inherited.
            </definition>
        </term>
        <term>
            <identifier>Parent</identifier>
            <definition>
                An adaptive object who's unique property names will be included as properties of an adaptive object.
            </definition>
        </term>
        <term>
            <identifier>Produce</identifier>
            <definition>
                To cause a journal entry to be added to a journal.
            </definition>
        </term>
        <term>
            <identifier>Producer</identifier>
            <definition>
                Anything that causes a journal entry to be produced.
            </definition>
        </term>
        <term>
            <identifier>Provisioning Peers</identifier>
            <definition>
                Two peers that optionally produce and/or consume each other's journal entries.
            </definition>
        </term>
    </glossary>
</section>