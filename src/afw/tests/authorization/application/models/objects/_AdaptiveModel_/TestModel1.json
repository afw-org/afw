{
    "modelId": "TestModel1",
    "objectTypes": {
        "MyObjectType1": {
            "mappedObjectType": "TestObjectType1",
            "propertyTypes": {
                "MyTestString1": {
                    "dataType": "string",
                    "mappedPropertyName": "TestString1"
                }
            }
        },
        "MyObjectType2": {
            "mappedObjectType": "TestObjectType2",
            "onRetrieveObjects": "return current::useDefaultProcessing;",
            "onAddObject": "return current::useDefaultProcessing;",
            "onDeleteObject": "return current::useDefaultProcessing;",
            "onGetInitialObjectId": "return current::objectId;",
            "onGetObject": "return current::useDefaultProcessing;",
            "onModifyObject": "return current::useDefaultProcessing;",
            "onReplaceObject": "return current::useDefaultProcessing;",            
            "propertyTypes": {
                "MyTestString1": {
                    "dataType": "string",
                    "mappedPropertyName": "TestString1"
                }
            }
        },
        "MyObjectType3": {  
            "onRetrieveObjects": "retrieve_objects_to_callback(current::returnObject,true,current::mappedAdapterId,\"TestObjectType1\",current::queryCriteria,current::objectOptions);\nreturn null;",
            "onAddObject": "const add_result: (object '_AdaptiveResponse_') = add_object(current::mappedAdapterId,\"TestObjectType1\",current::object,\"TestObject3\");\nreturn add_result.objectId;",
            "propertyTypes": {
                "MyTestString1": {
                    "dataType": "string",
                    "mappedPropertyName": "TestString1"
                }
            }
        },
        "MyObjectType4": { 
            "mappedObjectType": "TestObjectType2",  
            "onRetrieveObjects": "let  newCriteria: object = { filter: { op: \"eq\", property: \"TestString1\", value: \"This is a test string.\"} };\nretrieve_objects_to_callback(current::returnObject,true,current::mappedAdapterId,current::mappedObjectType,newCriteria,current::objectOptions);\nreturn null;",
            "propertyTypes": {
                "MyTestString1": {
                    "dataType": "string",
                    "mappedPropertyName": "TestString1"
                }
            }
        },
        "MyObjectType5": {              
            "onAddObject": "const add_action: (object '_AdaptiveAction_') = model_default_add_object_action(current::adapterId,current::objectType,current::object,\"TestObject4\");\nassert(add_action.function === \"add_object\",\"model_default_add_action() did not return a request\");\nreturn \"fake\";",
            "propertyTypes": {
                "MyTestString1": {
                    "dataType": "string",
                    "mappedPropertyName": "TestString1"
                }
            }
        }
    }
}