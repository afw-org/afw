#!/bin/bash
#
# Generate by afwdev
#
# Do not change this file directly.
#
# This script is called during the make process to generate a header file
# that contains git info.
#

# run git rev-parse to get the current branch
GIT_BRANCH=`git rev-parse --abbrev-ref HEAD 2>/dev/null`
if [ $? -ne 0 ]; then GIT_BRANCH="n/a"; fi

# Run git describe to get tag and dirty status
GIT_DESCRIBE=`git describe --dirty --always --tags 2>/dev/null`
if [ $? -ne 0 ]; then GIT_DESCRIBE="n/a"; fi

# Run git rev-parse to get the SHA hash of last commit
GIT_SHA=`git rev-parse HEAD 2>/dev/null`
if [ $? -ne 0 ]; then GIT_SHA="n/a"; fi

if [ '${GIT_BRANCH}' = 'base' ];then
GIT_MINUS=''
else
GIT_MINUS='-'${GIT_BRANCH}
fi

AFW_GIT_INFO=$(cat <<EOF
/* ----------------------------- N O T E -------------------------------------
 * 
 * This file was generated by <afwdev {afwPackageGitInfoBaseName}>.sh
 *
 * Do not change this file directly.
 *
 * ----------------------------- N O T E ------------------------------------*/

/*!
 *  @file <afwdev {afwPackageGitInfoBaseName}>.h
 *  @brief Git information header for AFW package <afwdev {afwPackageId}>.
 */

#define <afwdev {afwPackageGitInfoBaseName.upper()}>_BRANCH          "${GIT_BRANCH}"
#define <afwdev {afwPackageGitInfoBaseName.upper()}>_DESCRIBE        "${GIT_DESCRIBE}"
#define <afwdev {afwPackageGitInfoBaseName.upper()}>_SHA             "${GIT_SHA}"
#define <afwdev {afwPackageGitInfoBaseName.upper()}>_BRANCH_DESCRIBE "${GIT_MINUS}+${GIT_DESCRIBE}"

EOF
)

# only update the file if it has changed, to prevent unnecessary recompiles
_AFW_GIT_INFO_FILE="$(dirname ""$0"")/<afwdev {afwPackageGitInfoBaseName}>.h"
if [ -f $_AFW_GIT_INFO_FILE ]; then    
    _AFW_GIT_INFO=`cat $_AFW_GIT_INFO_FILE`

    if [ "${_AFW_GIT_INFO}" = "${AFW_GIT_INFO}" ]; then                        
        # file is unchanged
        exit 0
    fi
fi

# file is new or needs to be updated
echo "${AFW_GIT_INFO}" > ${_AFW_GIT_INFO_FILE}


