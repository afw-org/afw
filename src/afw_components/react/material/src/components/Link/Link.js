// See the 'COPYING' file in the project root for licensing information.
/*
 * React Component definition for Link
 *
 * Copyright (c) 2010-2023 Clemson University
 *
 */

import {memo} from "react";
import PropTypes from "prop-types";

import {Link as RouterLink} from "react-router-dom";
import MuiLink from "@mui/material/Link";


/**
 * Implementation Id : Link
 * Category          : navigation
 * 
 * A component that renders a url link.
 * 
 * This component understands how to render a link with the appropriate
 * framework style, and handles the React Routing, if the link references
 * another component within this same application.
 * 
 */
export const Link = (props) => {       
    const {"aria-label": ariaLabel, uriComponents, text, disabled, style, onClick, external} = props;

    let url;               
    if (uriComponents)
        url = "/" + uriComponents.map(uriComponent => encodeURIComponent(uriComponent)).join("/");            
    else url = props.url;

    if (!url || !text)
        return null;
        
    return (
        (url.startsWith("/") && (external !== true))?
            <MuiLink
                aria-label={ariaLabel}
                underline="hover"
                style={style}
                component={RouterLink}
                to={url}                
                onClick={onClick}
            >{text}</MuiLink> 
            :
            <MuiLink 
                aria-label={ariaLabel}
                underline="hover"
                style={style}      
                disabled={disabled}
                href={url}                    
                onClick={onClick}
            >{text}</MuiLink>
    );
};

/**
 * PropTypes generated by _AdaptiveLayoutComponentType_Link
 */
Link.propTypes = {
    /**
     * disabled
     * Data Type: (boolean)
     * 
     * Specifies whether the the Link is disabled.
     */
    disabled:                           PropTypes.bool,
    /**
     * text
     * Data Type: (string)
     * 
     * The text value displayed for the Link component.
     */
    text:                               PropTypes.string,
    /**
     * url
     * Data Type: (string)
     * 
     * The URL for the link.
     */
    url:                                PropTypes.string,
};

Link.defaultProps = {
};

export default memo(Link);
